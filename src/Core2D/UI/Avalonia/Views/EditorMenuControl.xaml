<UserControl x:Class="Core2D.UI.Avalonia.Views.EditorMenuControl"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:iac="clr-namespace:Avalonia.Xaml.Interactions.Custom;assembly=Avalonia.Xaml.Interactions.Custom"
             xmlns:app="clr-namespace:Core2D.UI.Avalonia;assembly=Core2D"
             xmlns:converters="clr-namespace:Core2D.UI.Avalonia.Converters;assembly=Core2D"
             xmlns:views="clr-namespace:Core2D.UI.Avalonia.Views;assembly=Core2D"
             xmlns:Editor="clr-namespace:Core2D.Editor;assembly=Core2D"
             xmlns:Recent="clr-namespace:Core2D.Editor.Recent;assembly=Core2D"
             xmlns:ContainersCore="clr-namespace:Core2D.Containers;assembly=Core2D"
             xmlns:Themes="clr-namespace:Core2D.UI.Avalonia;assembly=Core2D"
             xmlns:Designer="clr-namespace:Core2D.Editor.Designer;assembly=Core2D"
             mc:Ignorable="d"
             d:DataContext="{x:Static Designer:DesignerContext.Editor}"
             d:DesignWidth="800" d:DesignHeight="20">
    <UserControl.Resources>
        <converters:ObjectEqualityMultiConverter x:Key="ObjectEqualityMultiConverter"/>
        <converters:ObjectEqualsConverter x:Key="ObjectEqualsConverter"/>
    </UserControl.Resources>
    <Menu Classes="default">
        <Menu.ItemsPanel>
            <ItemsPanelTemplate>
                <WrapPanel/>
            </ItemsPanelTemplate>
        </Menu.ItemsPanel>
        <MenuItem Header="_File">
            <MenuItem Header="_New" Command="{Binding OnNew}" CommandParameter="{Binding}" InputGesture="Ctrl+N"/>
            <Separator/>
            <MenuItem Header="_Open..." Command="{Binding Platform.OnOpen}" InputGesture="Ctrl+O"/>
            <Separator/>
            <MenuItem Header="_Close" Command="{Binding OnCloseProject}" InputGesture="Ctrl+F4"/>
            <Separator/>
            <MenuItem Header="_Save" Command="{Binding Platform.OnSave}" InputGesture="Ctrl+S"/>
            <MenuItem Header="Save _As..." Command="{Binding Platform.OnSaveAs}" InputGesture="Ctrl+Shift+S"/>
            <Separator/>
            <MenuItem Header="Execu_te Script..." Command="{Binding Platform.OnExecuteScript}"/>
            <Separator/>
            <MenuItem Header="Import Xa_ml..." Command="{Binding Platform.OnImportXaml}" InputGesture="Ctrl+Shift+X"/>
            <MenuItem Header="Import _Json..." Command="{Binding Platform.OnImportJson}" InputGesture="Ctrl+Shift+J"/>
            <Separator/>
            <MenuItem Header="_Export..." Command="{Binding Platform.OnExport}" InputGesture="Ctrl+E"/>
            <Separator/>
            <MenuItem Header="_Recent" Items="{Binding RecentProjects}">
                <MenuItem.Styles>
                    <Style Selector="MenuItem">
                        <Setter Property="Header" Value="{Binding Name}"/>
                        <Setter Property="Command" Value="{Binding $parent[UserControl].DataContext.Platform.OnOpen}"/>
                        <Setter Property="CommandParameter" Value="{Binding Path}"/>
                    </Style>
                </MenuItem.Styles>
            </MenuItem>
            <Separator/>
            <MenuItem Header="E_xit" Command="{Binding Platform.OnExit}" InputGesture="Alt+F4"/>
        </MenuItem>
        <MenuItem Header="_Edit">
            <MenuItem Header="_Undo" Command="{Binding OnUndo}" InputGesture="Ctrl+Z"/>
            <MenuItem Header="_Redo" Command="{Binding OnRedo}" InputGesture="Ctrl+Y"/>
            <Separator/>
            <MenuItem Header="Copy As _Metafile" Command="{Binding Platform.OnCopyAsEmf}" InputGesture="Ctrl+Shift+C"/>
            <Separator/>
            <MenuItem Header="Cu_t" Command="{Binding OnCut}" InputGesture="Ctrl+X"/>
            <MenuItem Header="_Copy" Command="{Binding OnCopy}" InputGesture="Ctrl+C"/>
            <MenuItem Header="_Paste" Command="{Binding OnPaste}" InputGesture="Ctrl+V"/>
            <MenuItem Header="_Delete" Command="{Binding OnDelete}" InputGesture="Delete"/>
            <Separator/>
            <MenuItem Header="Select _All" Command="{Binding OnSelectAll}" InputGesture="Ctrl+A"/>
            <MenuItem Header="De_select All" Command="{Binding OnDeselectAll}" InputGesture="Ctrl+Shift+A"/>
            <Separator/>
            <MenuItem Header="Cl_ear All" Command="{Binding OnClearAll}"/>
            <Separator/>
            <MenuItem Header="Cance_l" Command="{Binding OnCancel}" InputGesture="Escape"/>
        </MenuItem>
        <MenuItem Header="_View">
            <MenuItem Header="_Object Browser..." Command="{Binding Platform.OnObjectBrowser}" InputGesture="Ctrl+J"/>
            <Separator/>
            <MenuItem Header="_Document Viewer..." Command="{Binding Platform.OnDocumentViewer}" InputGesture="Ctrl+D"/>
            <Separator/>
            <MenuItem Header="_Script Editor..." Command="{Binding Platform.OnScriptEditor}" InputGesture="Ctrl+R"/>
            <Separator/>
            <MenuItem Header="_Reset Zoom" Command="{Binding Platform.OnZoomReset}" InputGesture="Z"/>
            <Separator/>
            <MenuItem Header="_AutoFit Zoom" Command="{Binding Platform.OnZoomAutoFit}" InputGesture="X"/>
            <Separator/>
            <MenuItem Header="_Views" Items="{Binding Layout.VisibleDockables}">
                <MenuItem.Styles>
                    <Style Selector="MenuItem">
                        <Setter Property="Header" Value="{Binding Title}"/>
                        <Setter Property="Command" Value="{Binding $parent[UserControl].DataContext.OnNavigate}"/>
                        <Setter Property="CommandParameter" Value="{Binding}"/>
                        <Setter Property="Icon">
                            <Template>
                                <CheckBox x:Name="icon" Classes="menu">
                                    <i:Interaction.Behaviors>
                                        <iac:BindTagToVisualRootDataContextBehavior/>
                                    </i:Interaction.Behaviors>
                                    <CheckBox.IsChecked>
                                        <MultiBinding Mode="OneWay" Converter="{StaticResource ObjectEqualityMultiConverter}">
                                            <Binding ElementName="icon" Path="DataContext"/>
                                            <Binding ElementName="icon" Path="Tag.Layout.ActiveDockable"/>
                                        </MultiBinding>
                                    </CheckBox.IsChecked>
                                </CheckBox>
                            </Template>
                        </Setter>
                    </Style>
                </MenuItem.Styles>
            </MenuItem>
            <Separator/>
            <MenuItem Header="_Theme" DataContext="{x:Static app:App.Selector}" Items="{Binding Themes}">
                <MenuItem.Styles>
                    <Style Selector="MenuItem">
                        <Setter Property="Header" Value="{Binding Name}"/>
                        <Setter Property="Command" Value="{Binding ApplyTheme}"/>
                        <Setter Property="CommandParameter" Value="{Binding}"/>
                        <!--<Setter Property="Icon">
                            <Template>
                                <CheckBox Classes="menu">
                                    <CheckBox.IsChecked>
                                        <MultiBinding Mode="OneWay" Converter="{StaticResource ObjectEqualityMultiConverter}">
                                            <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                                            <Binding Path="Selector.SelectedTheme"/>
                                        </MultiBinding>
                                    </CheckBox.IsChecked>
                                </CheckBox>
                            </Template>
                        </Setter>-->
                    </Style>
                </MenuItem.Styles>
            </MenuItem>
        </MenuItem>
        <MenuItem Header="_Shape">
            <MenuItem Header="_Group" Command="{Binding OnGroupSelected}" InputGesture="Ctrl+G"/>
            <MenuItem Header="U_ngroup" Command="{Binding OnUngroupSelected}" InputGesture="Ctrl+U"/>
            <Separator/>
            <MenuItem Header="_Move">
                <MenuItem Header="_Up" Command="{Binding OnMoveUpSelected}" InputGesture="Up"/>
                <MenuItem Header="_Down" Command="{Binding OnMoveDownSelected}" InputGesture="Down"/>
                <MenuItem Header="_Left" Command="{Binding OnMoveLeftSelected}" InputGesture="Left"/>
                <MenuItem Header="_Right" Command="{Binding OnMoveRightSelected}" InputGesture="Right"/>
            </MenuItem>
            <MenuItem Header="Stac_k">
                <MenuItem Header="_Horizontally" Command="{Binding OnStackHorizontallySelected}" InputGesture="Shift+H"/>
                <MenuItem Header="_Vertically" Command="{Binding OnStackVerticallySelected}" InputGesture="Shift+V"/>
            </MenuItem>
            <MenuItem Header="Dis_tribute">
                <MenuItem Header="_Horizontally" Command="{Binding OnDistributeHorizontallySelected}" InputGesture="Ctrl+Shift+H"/>
                <MenuItem Header="_Vertically" Command="{Binding OnDistributeVerticallySelected}" InputGesture="Ctrl+Shift+V"/>
            </MenuItem>
            <MenuItem Header="Alig_n">
                <MenuItem Header="_Left" Command="{Binding OnAlignLeftSelected}" InputGesture="Ctrl+Shift+Left"/>
                <MenuItem Header="_Centered" Command="{Binding OnAlignCenteredSelected}" InputGesture="Ctrl+Shift+Subtract"/>
                <MenuItem Header="_Right" Command="{Binding OnAlignRightSelected}" InputGesture="Ctrl+Shift+Right"/>
                <Separator/>
                <MenuItem Header="_Top" Command="{Binding OnAlignTopSelected}" InputGesture="Ctrl+Shift+Up"/>
                <MenuItem Header="C_enter" Command="{Binding OnAlignCenterSelected}" InputGesture="Ctrl+Shift+OemPipe"/>
                <MenuItem Header="_Bottom" Command="{Binding OnAlignBottomSelected}" InputGesture="Ctrl+Shift+Down"/>
            </MenuItem>
            <MenuItem Header="_Arange">
                <MenuItem Header="_Bring to Front" Command="{Binding OnBringToFrontSelected}" InputGesture="Ctrl+Shift+OemCloseBrackets"/>
                <MenuItem Header="Bring _Forward" Command="{Binding OnBringForwardSelected}" InputGesture="Ctrl+OemCloseBrackets"/>
                <MenuItem Header="Send Back_ward" Command="{Binding OnSendBackwardSelected}" InputGesture="Ctrl+OemOpenBrackets"/>
                <MenuItem Header="_Send to Back" Command="{Binding OnSendToBackSelected}" InputGesture="Ctrl+Shift+OemOpenBrackets"/>
                <Separator/>
            </MenuItem>
        </MenuItem>
        <MenuItem Header="St_yle">
            <MenuItem Header="_Thickness">
                <MenuItem Header="0.25" Command="{Binding StyleEditor.OnStyleSetThickness}" CommandParameter="0.25"/>
                <MenuItem Header="0.5" Command="{Binding StyleEditor.OnStyleSetThickness}" CommandParameter="0.5"/>
                <MenuItem Header="0.75" Command="{Binding StyleEditor.OnStyleSetThickness}" CommandParameter="0.75"/>
                <MenuItem Header="1" Command="{Binding StyleEditor.OnStyleSetThickness}" CommandParameter="1"/>
                <MenuItem Header="1.5" Command="{Binding StyleEditor.OnStyleSetThickness}" CommandParameter="1.5"/>
                <MenuItem Header="2.25" Command="{Binding StyleEditor.OnStyleSetThickness}" CommandParameter="2.25"/>
                <MenuItem Header="3" Command="{Binding StyleEditor.OnStyleSetThickness}" CommandParameter="3"/>
                <MenuItem Header="4.5" Command="{Binding StyleEditor.OnStyleSetThickness}" CommandParameter="4.5"/>
                <MenuItem Header="6" Command="{Binding StyleEditor.OnStyleSetThickness}" CommandParameter="6"/>
            </MenuItem>
            <MenuItem Header="Line _Cap">
                <MenuItem Header="Flat" Command="{Binding StyleEditor.OnStyleSetLineCap}" CommandParameter="Flat"/>
                <MenuItem Header="Square" Command="{Binding StyleEditor.OnStyleSetLineCap}" CommandParameter="Square"/>
                <MenuItem Header="Round" Command="{Binding StyleEditor.OnStyleSetLineCap}" CommandParameter="Round"/>
            </MenuItem>
            <MenuItem Header="_Dashes">
                <MenuItem Header="_Solid" Command="{Binding StyleEditor.OnStyleSetDashes}" CommandParameter="Solid"/>
                <MenuItem Header="_Dash" Command="{Binding StyleEditor.OnStyleSetDashes}" CommandParameter="Dash"/>
                <MenuItem Header="D_ot" Command="{Binding StyleEditor.OnStyleSetDashes}" CommandParameter="Dot"/>
                <MenuItem Header="DashDo_t" Command="{Binding StyleEditor.OnStyleSetDashes}" CommandParameter="DashDot"/>
                <MenuItem Header="Das_hDotDot" Command="{Binding StyleEditor.OnStyleSetDashes}" CommandParameter="DashDotDot"/>
            </MenuItem>
            <MenuItem Header="_Stroke">
                <MenuItem Header="Blac_k" Command="{Binding StyleEditor.OnStyleSetStroke}" CommandParameter="Black"/>
                <MenuItem Header="_Red" Command="{Binding StyleEditor.OnStyleSetStroke}" CommandParameter="Red"/>
                <MenuItem Header="_Green" Command="{Binding StyleEditor.OnStyleSetStroke}" CommandParameter="Green"/>
                <MenuItem Header="_Blue" Command="{Binding StyleEditor.OnStyleSetStroke}" CommandParameter="Blue"/>
                <MenuItem Header="_Cyan" Command="{Binding StyleEditor.OnStyleSetStroke}" CommandParameter="Cyan"/>
                <MenuItem Header="_Magenta" Command="{Binding StyleEditor.OnStyleSetStroke}" CommandParameter="Magenta"/>
                <MenuItem Header="_Yellow" Command="{Binding StyleEditor.OnStyleSetStroke}" CommandParameter="Yellow"/>
                <Separator/>
                <MenuItem Header="Trans_parency">
                    <MenuItem Header="0%" Command="{Binding StyleEditor.OnStyleSetStrokeTransparency}" CommandParameter="0"/>
                    <MenuItem Header="10%" Command="{Binding StyleEditor.OnStyleSetStrokeTransparency}" CommandParameter="10"/>
                    <MenuItem Header="20%" Command="{Binding StyleEditor.OnStyleSetStrokeTransparency}" CommandParameter="20"/>
                    <MenuItem Header="30%" Command="{Binding StyleEditor.OnStyleSetStrokeTransparency}" CommandParameter="30"/>
                    <MenuItem Header="40%" Command="{Binding StyleEditor.OnStyleSetStrokeTransparency}" CommandParameter="40"/>
                    <MenuItem Header="50%" Command="{Binding StyleEditor.OnStyleSetStrokeTransparency}" CommandParameter="50"/>
                    <MenuItem Header="60%" Command="{Binding StyleEditor.OnStyleSetStrokeTransparency}" CommandParameter="60"/>
                    <MenuItem Header="70%" Command="{Binding StyleEditor.OnStyleSetStrokeTransparency}" CommandParameter="70"/>
                    <MenuItem Header="80%" Command="{Binding StyleEditor.OnStyleSetStrokeTransparency}" CommandParameter="80"/>
                    <MenuItem Header="90%" Command="{Binding StyleEditor.OnStyleSetStrokeTransparency}" CommandParameter="90"/>
                    <MenuItem Header="100%" Command="{Binding StyleEditor.OnStyleSetStrokeTransparency}" CommandParameter="100"/>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Fill">
                <MenuItem Header="Blac_k" Command="{Binding StyleEditor.OnStyleSetFill}" CommandParameter="Black"/>
                <MenuItem Header="_Red" Command="{Binding StyleEditor.OnStyleSetFill}" CommandParameter="Red"/>
                <MenuItem Header="_Green" Command="{Binding StyleEditor.OnStyleSetFill}" CommandParameter="Green"/>
                <MenuItem Header="_Blue" Command="{Binding StyleEditor.OnStyleSetFill}" CommandParameter="Blue"/>
                <MenuItem Header="_Cyan" Command="{Binding StyleEditor.OnStyleSetFill}" CommandParameter="Cyan"/>
                <MenuItem Header="_Magenta" Command="{Binding StyleEditor.OnStyleSetFill}" CommandParameter="Magenta"/>
                <MenuItem Header="_Yellow" Command="{Binding StyleEditor.OnStyleSetFill}" CommandParameter="Yellow"/>
                <MenuItem Header="Trans_parency">
                    <MenuItem Header="0%" Command="{Binding StyleEditor.OnStyleSetFillTransparency}" CommandParameter="0"/>
                    <MenuItem Header="10%" Command="{Binding StyleEditor.OnStyleSetFillTransparency}" CommandParameter="10"/>
                    <MenuItem Header="20%" Command="{Binding StyleEditor.OnStyleSetFillTransparency}" CommandParameter="20"/>
                    <MenuItem Header="30%" Command="{Binding StyleEditor.OnStyleSetFillTransparency}" CommandParameter="30"/>
                    <MenuItem Header="40%" Command="{Binding StyleEditor.OnStyleSetFillTransparency}" CommandParameter="40"/>
                    <MenuItem Header="50%" Command="{Binding StyleEditor.OnStyleSetFillTransparency}" CommandParameter="50"/>
                    <MenuItem Header="60%" Command="{Binding StyleEditor.OnStyleSetFillTransparency}" CommandParameter="60"/>
                    <MenuItem Header="70%" Command="{Binding StyleEditor.OnStyleSetFillTransparency}" CommandParameter="70"/>
                    <MenuItem Header="80%" Command="{Binding StyleEditor.OnStyleSetFillTransparency}" CommandParameter="80"/>
                    <MenuItem Header="90%" Command="{Binding StyleEditor.OnStyleSetFillTransparency}" CommandParameter="90"/>
                    <MenuItem Header="100%" Command="{Binding StyleEditor.OnStyleSetFillTransparency}" CommandParameter="100"/>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Text">
                <MenuItem Header="Font _Name">
                    <MenuItem Header="_Calibri" Command="{Binding StyleEditor.OnStyleSetFontName}" CommandParameter="Calibri"/>
                </MenuItem>
                <MenuItem Header="Font _Size">
                    <MenuItem Header="8" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="9" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="10" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="10.5" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="11" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="12" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="14" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="16" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="18" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="20" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="24" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="28" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="32" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="36" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="40" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="44" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="48" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="54" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="60" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="66" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="72" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="80" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="88" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                    <MenuItem Header="96" Command="{Binding StyleEditor.OnStyleSetFontSize}" CommandParameter="xxx"/>
                </MenuItem>
                <MenuItem Header="Font S_tyle">
                    <MenuItem Header="_Regular" Command="{Binding StyleEditor.OnStyleSetFontStyle}" CommandParameter="Regular"/>
                    <MenuItem Header="_Bold" Command="{Binding StyleEditor.OnStyleSetFontStyle}" CommandParameter="Bold"/>
                    <MenuItem Header="_Italic" Command="{Binding StyleEditor.OnStyleSetFontStyle}" CommandParameter="Italic"/>
                    <MenuItem Header="_Underline" Command="{Binding StyleEditor.OnStyleSetFontStyle}" CommandParameter="Underline"/>
                    <MenuItem Header="_Strikeout" Command="{Binding StyleEditor.OnStyleSetFontStyle}" CommandParameter="Strikeout"/>
                </MenuItem>
                <MenuItem Header="_Horizontal Alignment">
                    <MenuItem Header="Left" Command="{Binding StyleEditor.OnStyleSetTextHAlignment}" CommandParameter="Left"/>
                    <MenuItem Header="_Center" Command="{Binding StyleEditor.OnStyleSetTextHAlignment}" CommandParameter="Center"/>
                    <MenuItem Header="_Right" Command="{Binding StyleEditor.OnStyleSetTextHAlignment}" CommandParameter="Right"/>
                </MenuItem>
                <MenuItem Header="_Vertical Alignment">
                    <MenuItem Header="_Top" Command="{Binding StyleEditor.OnStyleSetTextVAlignment}" CommandParameter="Top"/>
                    <MenuItem Header="_Center" Command="{Binding StyleEditor.OnStyleSetTextVAlignment}" CommandParameter="Center"/>
                    <MenuItem Header="_Bottom" Command="{Binding StyleEditor.OnStyleSetTextVAlignment}" CommandParameter="Bottom"/>
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Line">
                <MenuItem Header="Toggle IsC_urved" Command="{Binding StyleEditor.OnStyleToggleLineIsCurved}"/>
                <MenuItem Header="_Curvature">
                    <MenuItem Header="0" Command="{Binding StyleEditor.OnStyleSetLineCurvature}" CommandParameter="0"/>
                    <MenuItem Header="10" Command="{Binding StyleEditor.OnStyleSetLineCurvature}" CommandParameter="10"/>
                    <MenuItem Header="20" Command="{Binding StyleEditor.OnStyleSetLineCurvature}" CommandParameter="20"/>
                    <MenuItem Header="30" Command="{Binding StyleEditor.OnStyleSetLineCurvature}" CommandParameter="30"/>
                    <MenuItem Header="40" Command="{Binding StyleEditor.OnStyleSetLineCurvature}" CommandParameter="40"/>
                    <MenuItem Header="50" Command="{Binding StyleEditor.OnStyleSetLineCurvature}" CommandParameter="50"/>
                    <MenuItem Header="60" Command="{Binding StyleEditor.OnStyleSetLineCurvature}" CommandParameter="60"/>
                    <MenuItem Header="70" Command="{Binding StyleEditor.OnStyleSetLineCurvature}" CommandParameter="70"/>
                    <MenuItem Header="80" Command="{Binding StyleEditor.OnStyleSetLineCurvature}" CommandParameter="80"/>
                    <MenuItem Header="90" Command="{Binding StyleEditor.OnStyleSetLineCurvature}" CommandParameter="90"/>
                    <MenuItem Header="100" Command="{Binding StyleEditor.OnStyleSetLineCurvature}" CommandParameter="100"/>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Curve _Orientation">
                    <MenuItem Header="Auto" Command="{Binding StyleEditor.OnStyleSetLineCurveOrientation}" CommandParameter="Auto"/>
                    <MenuItem Header="Horizontal" Command="{Binding StyleEditor.OnStyleSetLineCurveOrientation}" CommandParameter="Horizontal"/>
                    <MenuItem Header="Vertical" Command="{Binding StyleEditor.OnStyleSetLineCurveOrientation}" CommandParameter="Vertical"/>
                </MenuItem>
                <MenuItem Header="Fixed _Length">
                    <MenuItem Header="_Length">
                        <MenuItem Header="0" Command="{Binding StyleEditor.OnStyleSetLineFixedLength}" CommandParameter="0"/>
                        <MenuItem Header="5" Command="{Binding StyleEditor.OnStyleSetLineFixedLength}" CommandParameter="5"/>
                        <MenuItem Header="10" Command="{Binding StyleEditor.OnStyleSetLineFixedLength}" CommandParameter="10"/>
                        <MenuItem Header="15" Command="{Binding StyleEditor.OnStyleSetLineFixedLength}" CommandParameter="15"/>
                        <MenuItem Header="20" Command="{Binding StyleEditor.OnStyleSetLineFixedLength}" CommandParameter="20"/>
                        <MenuItem Header="25" Command="{Binding StyleEditor.OnStyleSetLineFixedLength}" CommandParameter="25"/>
                        <MenuItem Header="30" Command="{Binding StyleEditor.OnStyleSetLineFixedLength}" CommandParameter="30"/>
                    </MenuItem>
                    <MenuItem Header="_Flags">
                        <MenuItem Header="Toggle _Disabled" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthFlags}" CommandParameter="Disabled"/>
                        <MenuItem Header="Toggle _Start" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthFlags}" CommandParameter="Start"/>
                        <MenuItem Header="Toggle _End" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthFlags}" CommandParameter="End"/>
                        <MenuItem Header="Toggle _Vertical" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthFlags}" CommandParameter="Vertical"/>
                        <MenuItem Header="Toggle _Horizontal" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthFlags}" CommandParameter="Horizontal"/>
                        <MenuItem Header="Toggle _All" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthFlags}" CommandParameter="All"/>
                    </MenuItem>
                    <MenuItem Header="_Start Trigger">
                        <MenuItem Header="Toggle _Default" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthStartTrigger}" CommandParameter="Default"/>
                        <MenuItem Header="Toggle _Visible" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthStartTrigger}" CommandParameter="Visible"/>
                        <MenuItem Header="Toggle _Printable" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthStartTrigger}" CommandParameter="Printable"/>
                        <MenuItem Header="Toggle _Locked" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthStartTrigger}" CommandParameter="Locked"/>
                        <MenuItem Header="Toggle _Connector" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthStartTrigger}" CommandParameter="Connector"/>
                        <MenuItem Header="Toggle _None" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthStartTrigger}" CommandParameter="None"/>
                        <MenuItem Header="Toggle _Standalone" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthStartTrigger}" CommandParameter="Standalone"/>
                        <MenuItem Header="Toggle _Input" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthStartTrigger}" CommandParameter="Input"/>
                        <MenuItem Header="Toggle _Output" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthStartTrigger}" CommandParameter="Output"/>
                    </MenuItem>
                    <MenuItem Header="_End Trigger">
                        <MenuItem Header="Toggle _Default" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthEndTrigger}" CommandParameter="Default"/>
                        <MenuItem Header="Toggle _Visible" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthEndTrigger}" CommandParameter="Visible"/>
                        <MenuItem Header="Toggle _Printable" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthEndTrigger}" CommandParameter="Printable"/>
                        <MenuItem Header="Toggle _Locked" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthEndTrigger}" CommandParameter="Locked"/>
                        <MenuItem Header="Toggle _Connector" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthEndTrigger}" CommandParameter="Connector"/>
                        <MenuItem Header="Toggle _None" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthEndTrigger}" CommandParameter="None"/>
                        <MenuItem Header="Toggle _Standalone" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthEndTrigger}" CommandParameter="Standalone"/>
                        <MenuItem Header="Toggle _Input" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthEndTrigger}" CommandParameter="Input"/>
                        <MenuItem Header="Toggle _Output" Command="{Binding StyleEditor.OnStyleToggleLineFixedLengthEndTrigger}" CommandParameter="Output"/>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="_Start Arrow">
                    <MenuItem Header="_Type">
                        <MenuItem Header="_None" Command="{Binding StyleEditor.OnStyleSetStartArrowType}" CommandParameter="None"/>
                        <MenuItem Header="_Rectangle" Command="{Binding StyleEditor.OnStyleSetStartArrowType}" CommandParameter="Rectangle"/>
                        <MenuItem Header="_Ellipse" Command="{Binding StyleEditor.OnStyleSetStartArrowType}" CommandParameter="Ellipse"/>
                        <MenuItem Header="_Arrow" Command="{Binding StyleEditor.OnStyleSetStartArrowType}" CommandParameter="Arrow"/>
                    </MenuItem>
                    <MenuItem Header="Toggle Is_Stroked" Command="{Binding StyleEditor.OnStyleToggleStartArrowIsStroked}"/>
                    <MenuItem Header="Toggle Is_Filled" Command="{Binding StyleEditor.OnStyleToggleStartArrowIsFilled}"/>
                    <MenuItem Header="Radius_X">
                        <MenuItem Header="0" Command="{Binding StyleEditor.OnStyleSetStartArrowRadiusX}" CommandParameter="0"/>
                        <MenuItem Header="1" Command="{Binding StyleEditor.OnStyleSetStartArrowRadiusX}" CommandParameter="1"/>
                        <MenuItem Header="2" Command="{Binding StyleEditor.OnStyleSetStartArrowRadiusX}" CommandParameter="2"/>
                        <MenuItem Header="3" Command="{Binding StyleEditor.OnStyleSetStartArrowRadiusX}" CommandParameter="3"/>
                        <MenuItem Header="4" Command="{Binding StyleEditor.OnStyleSetStartArrowRadiusX}" CommandParameter="4"/>
                        <MenuItem Header="5" Command="{Binding StyleEditor.OnStyleSetStartArrowRadiusX}" CommandParameter="5"/>
                        <MenuItem Header="6" Command="{Binding StyleEditor.OnStyleSetStartArrowRadiusX}" CommandParameter="6"/>
                        <MenuItem Header="7" Command="{Binding StyleEditor.OnStyleSetStartArrowRadiusX}" CommandParameter="7"/>
                        <MenuItem Header="8" Command="{Binding StyleEditor.OnStyleSetStartArrowRadiusX}" CommandParameter="8"/>
                        <MenuItem Header="9" Command="{Binding StyleEditor.OnStyleSetStartArrowRadiusX}" CommandParameter="9"/>
                        <MenuItem Header="10" Command="{Binding StyleEditor.OnStyleSetStartArrowRadiusX}" CommandParameter="10"/>
                    </MenuItem>
                    <MenuItem Header="Radius_Y">
                        <MenuItem Header="0" Command="{Binding StyleEditor.OnStyleSetStartArrowRadiusY}" CommandParameter="0"/>
                        <MenuItem Header="1" Command="{Binding StyleEditor.OnStyleSetStartArrowRadiusY}" CommandParameter="1"/>
                        <MenuItem Header="2" Command="{Binding StyleEditor.OnStyleSetStartArrowRadiusY}" CommandParameter="2"/>
                        <MenuItem Header="3" Command="{Binding StyleEditor.OnStyleSetStartArrowRadiusY}" CommandParameter="3"/>
                        <MenuItem Header="4" Command="{Binding StyleEditor.OnStyleSetStartArrowRadiusY}" CommandParameter="4"/>
                        <MenuItem Header="5" Command="{Binding StyleEditor.OnStyleSetStartArrowRadiusY}" CommandParameter="5"/>
                        <MenuItem Header="6" Command="{Binding StyleEditor.OnStyleSetStartArrowRadiusY}" CommandParameter="6"/>
                        <MenuItem Header="7" Command="{Binding StyleEditor.OnStyleSetStartArrowRadiusY}" CommandParameter="7"/>
                        <MenuItem Header="8" Command="{Binding StyleEditor.OnStyleSetStartArrowRadiusY}" CommandParameter="8"/>
                        <MenuItem Header="9" Command="{Binding StyleEditor.OnStyleSetStartArrowRadiusY}" CommandParameter="9"/>
                        <MenuItem Header="10" Command="{Binding StyleEditor.OnStyleSetStartArrowRadiusY}" CommandParameter="10"/>
                    </MenuItem>
                    <MenuItem Header="_Style">
                        <MenuItem Header="_Thickness">
                            <MenuItem Header="0.25" Command="{Binding StyleEditor.OnStyleSetStartArrowThickness}" CommandParameter="0.25"/>
                            <MenuItem Header="0.5" Command="{Binding StyleEditor.OnStyleSetStartArrowThickness}" CommandParameter="0.5"/>
                            <MenuItem Header="0.75" Command="{Binding StyleEditor.OnStyleSetStartArrowThickness}" CommandParameter="0.75"/>
                            <MenuItem Header="1" Command="{Binding StyleEditor.OnStyleSetStartArrowThickness}" CommandParameter="1"/>
                            <MenuItem Header="1.5" Command="{Binding StyleEditor.OnStyleSetStartArrowThickness}" CommandParameter="1.5"/>
                            <MenuItem Header="2.25" Command="{Binding StyleEditor.OnStyleSetStartArrowThickness}" CommandParameter="2.25"/>
                            <MenuItem Header="3" Command="{Binding StyleEditor.OnStyleSetStartArrowThickness}" CommandParameter="3"/>
                            <MenuItem Header="4.5" Command="{Binding StyleEditor.OnStyleSetStartArrowThickness}" CommandParameter="4.5"/>
                            <MenuItem Header="6" Command="{Binding StyleEditor.OnStyleSetStartArrowThickness}" CommandParameter="6"/>
                        </MenuItem>
                        <MenuItem Header="Line _Cap">
                            <MenuItem Header="Flat" Command="{Binding StyleEditor.OnStyleSetStartArrowLineCap}" CommandParameter="Flat"/>
                            <MenuItem Header="Square" Command="{Binding StyleEditor.OnStyleSetStartArrowLineCap}" CommandParameter="Square"/>
                            <MenuItem Header="Round" Command="{Binding StyleEditor.OnStyleSetStartArrowLineCap}" CommandParameter="Round"/>
                        </MenuItem>
                        <MenuItem Header="_Dashes">
                            <MenuItem Header="_Solid" Command="{Binding StyleEditor.OnStyleSetStartArrowDashes}" CommandParameter="Solid"/>
                            <MenuItem Header="_Dash" Command="{Binding StyleEditor.OnStyleSetStartArrowDashes}" CommandParameter="Dash"/>
                            <MenuItem Header="D_ot" Command="{Binding StyleEditor.OnStyleSetStartArrowDashes}" CommandParameter="Dot"/>
                            <MenuItem Header="DashDo_t" Command="{Binding StyleEditor.OnStyleSetStartArrowDashes}" CommandParameter="DashDot"/>
                            <MenuItem Header="Das_hDotDot" Command="{Binding StyleEditor.OnStyleSetStartArrowDashes}" CommandParameter="DashDotDot"/>
                        </MenuItem>
                        <MenuItem Header="_Stroke">
                            <MenuItem Header="Blac_k" Command="{Binding StyleEditor.OnStyleSetStartArrowStroke}" CommandParameter="Black"/>
                            <MenuItem Header="_Red" Command="{Binding StyleEditor.OnStyleSetStartArrowStroke}" CommandParameter="Red"/>
                            <MenuItem Header="_Green" Command="{Binding StyleEditor.OnStyleSetStartArrowStroke}" CommandParameter="Green"/>
                            <MenuItem Header="_Blue" Command="{Binding StyleEditor.OnStyleSetStartArrowStroke}" CommandParameter="Blue"/>
                            <MenuItem Header="_Cyan" Command="{Binding StyleEditor.OnStyleSetStartArrowStroke}" CommandParameter="Cyan"/>
                            <MenuItem Header="_Magenta" Command="{Binding StyleEditor.OnStyleSetStartArrowStroke}" CommandParameter="Magenta"/>
                            <MenuItem Header="_Yellow" Command="{Binding StyleEditor.OnStyleSetStartArrowStroke}" CommandParameter="Yellow"/>
                            <Separator/>
                            <MenuItem Header="Trans_parency">
                                <MenuItem Header="0%" Command="{Binding StyleEditor.OnStyleSetStartArrowStrokeTransparency}" CommandParameter="0"/>
                                <MenuItem Header="10%" Command="{Binding StyleEditor.OnStyleSetStartArrowStrokeTransparency}" CommandParameter="10"/>
                                <MenuItem Header="20%" Command="{Binding StyleEditor.OnStyleSetStartArrowStrokeTransparency}" CommandParameter="20"/>
                                <MenuItem Header="30%" Command="{Binding StyleEditor.OnStyleSetStartArrowStrokeTransparency}" CommandParameter="30"/>
                                <MenuItem Header="40%" Command="{Binding StyleEditor.OnStyleSetStartArrowStrokeTransparency}" CommandParameter="40"/>
                                <MenuItem Header="50%" Command="{Binding StyleEditor.OnStyleSetStartArrowStrokeTransparency}" CommandParameter="50"/>
                                <MenuItem Header="60%" Command="{Binding StyleEditor.OnStyleSetStartArrowStrokeTransparency}" CommandParameter="60"/>
                                <MenuItem Header="70%" Command="{Binding StyleEditor.OnStyleSetStartArrowStrokeTransparency}" CommandParameter="70"/>
                                <MenuItem Header="80%" Command="{Binding StyleEditor.OnStyleSetStartArrowStrokeTransparency}" CommandParameter="80"/>
                                <MenuItem Header="90%" Command="{Binding StyleEditor.OnStyleSetStartArrowStrokeTransparency}" CommandParameter="90"/>
                                <MenuItem Header="100%" Command="{Binding StyleEditor.OnStyleSetStartArrowStrokeTransparency}" CommandParameter="100"/>
                            </MenuItem>
                        </MenuItem>
                        <MenuItem Header="_Fill">
                            <MenuItem Header="Blac_k" Command="{Binding StyleEditor.OnStyleSetStartArrowFill}" CommandParameter="Black"/>
                            <MenuItem Header="_Red" Command="{Binding StyleEditor.OnStyleSetStartArrowFill}" CommandParameter="Red"/>
                            <MenuItem Header="_Green" Command="{Binding StyleEditor.OnStyleSetStartArrowFill}" CommandParameter="Green"/>
                            <MenuItem Header="_Blue" Command="{Binding StyleEditor.OnStyleSetStartArrowFill}" CommandParameter="Blue"/>
                            <MenuItem Header="_Cyan" Command="{Binding StyleEditor.OnStyleSetStartArrowFill}" CommandParameter="Cyan"/>
                            <MenuItem Header="_Magenta" Command="{Binding StyleEditor.OnStyleSetStartArrowFill}" CommandParameter="Magenta"/>
                            <MenuItem Header="_Yellow" Command="{Binding StyleEditor.OnStyleSetStartArrowFill}" CommandParameter="Yellow"/>
                            <MenuItem Header="Trans_parency">
                                <MenuItem Header="0%" Command="{Binding StyleEditor.OnStyleSetStartArrowFillTransparency}" CommandParameter="0"/>
                                <MenuItem Header="10%" Command="{Binding StyleEditor.OnStyleSetStartArrowFillTransparency}" CommandParameter="10"/>
                                <MenuItem Header="20%" Command="{Binding StyleEditor.OnStyleSetStartArrowFillTransparency}" CommandParameter="20"/>
                                <MenuItem Header="30%" Command="{Binding StyleEditor.OnStyleSetStartArrowFillTransparency}" CommandParameter="30"/>
                                <MenuItem Header="40%" Command="{Binding StyleEditor.OnStyleSetStartArrowFillTransparency}" CommandParameter="40"/>
                                <MenuItem Header="50%" Command="{Binding StyleEditor.OnStyleSetStartArrowFillTransparency}" CommandParameter="50"/>
                                <MenuItem Header="60%" Command="{Binding StyleEditor.OnStyleSetStartArrowFillTransparency}" CommandParameter="60"/>
                                <MenuItem Header="70%" Command="{Binding StyleEditor.OnStyleSetStartArrowFillTransparency}" CommandParameter="70"/>
                                <MenuItem Header="80%" Command="{Binding StyleEditor.OnStyleSetStartArrowFillTransparency}" CommandParameter="80"/>
                                <MenuItem Header="90%" Command="{Binding StyleEditor.OnStyleSetStartArrowFillTransparency}" CommandParameter="90"/>
                                <MenuItem Header="100%" Command="{Binding StyleEditor.OnStyleSetStartArrowFillTransparency}" CommandParameter="100"/>
                            </MenuItem>
                        </MenuItem>
                    </MenuItem>
                </MenuItem>
                <MenuItem Header="_End Arrow">
                    <MenuItem Header="_Type">
                        <MenuItem Header="_None" Command="{Binding StyleEditor.OnStyleSetEndArrowType}" CommandParameter="None"/>
                        <MenuItem Header="_Rectangle" Command="{Binding StyleEditor.OnStyleSetEndArrowType}" CommandParameter="Rectangle"/>
                        <MenuItem Header="_Ellipse" Command="{Binding StyleEditor.OnStyleSetEndArrowType}" CommandParameter="Ellipse"/>
                        <MenuItem Header="_Arrow" Command="{Binding StyleEditor.OnStyleSetEndArrowType}" CommandParameter="Arrow"/>
                    </MenuItem>
                    <MenuItem Header="Toggle Is_Stroked" Command="{Binding StyleEditor.OnStyleToggleEndArrowIsStroked}"/>
                    <MenuItem Header="Toggle Is_Filled" Command="{Binding StyleEditor.OnStyleToggleEndArrowIsFilled}"/>
                    <MenuItem Header="Radius_X">
                        <MenuItem Header="0" Command="{Binding StyleEditor.OnStyleSetEndArrowRadiusX}" CommandParameter="0"/>
                        <MenuItem Header="1" Command="{Binding StyleEditor.OnStyleSetEndArrowRadiusX}" CommandParameter="1"/>
                        <MenuItem Header="2" Command="{Binding StyleEditor.OnStyleSetEndArrowRadiusX}" CommandParameter="2"/>
                        <MenuItem Header="3" Command="{Binding StyleEditor.OnStyleSetEndArrowRadiusX}" CommandParameter="3"/>
                        <MenuItem Header="4" Command="{Binding StyleEditor.OnStyleSetEndArrowRadiusX}" CommandParameter="4"/>
                        <MenuItem Header="5" Command="{Binding StyleEditor.OnStyleSetEndArrowRadiusX}" CommandParameter="5"/>
                        <MenuItem Header="6" Command="{Binding StyleEditor.OnStyleSetEndArrowRadiusX}" CommandParameter="6"/>
                        <MenuItem Header="7" Command="{Binding StyleEditor.OnStyleSetEndArrowRadiusX}" CommandParameter="7"/>
                        <MenuItem Header="8" Command="{Binding StyleEditor.OnStyleSetEndArrowRadiusX}" CommandParameter="8"/>
                        <MenuItem Header="9" Command="{Binding StyleEditor.OnStyleSetEndArrowRadiusX}" CommandParameter="9"/>
                        <MenuItem Header="10" Command="{Binding StyleEditor.OnStyleSetEndArrowRadiusX}" CommandParameter="10"/>
                    </MenuItem>
                    <MenuItem Header="Radius_Y">
                        <MenuItem Header="0" Command="{Binding StyleEditor.OnStyleSetEndArrowRadiusY}" CommandParameter="0"/>
                        <MenuItem Header="1" Command="{Binding StyleEditor.OnStyleSetEndArrowRadiusY}" CommandParameter="1"/>
                        <MenuItem Header="2" Command="{Binding StyleEditor.OnStyleSetEndArrowRadiusY}" CommandParameter="2"/>
                        <MenuItem Header="3" Command="{Binding StyleEditor.OnStyleSetEndArrowRadiusY}" CommandParameter="3"/>
                        <MenuItem Header="4" Command="{Binding StyleEditor.OnStyleSetEndArrowRadiusY}" CommandParameter="4"/>
                        <MenuItem Header="5" Command="{Binding StyleEditor.OnStyleSetEndArrowRadiusY}" CommandParameter="5"/>
                        <MenuItem Header="6" Command="{Binding StyleEditor.OnStyleSetEndArrowRadiusY}" CommandParameter="6"/>
                        <MenuItem Header="7" Command="{Binding StyleEditor.OnStyleSetEndArrowRadiusY}" CommandParameter="7"/>
                        <MenuItem Header="8" Command="{Binding StyleEditor.OnStyleSetEndArrowRadiusY}" CommandParameter="8"/>
                        <MenuItem Header="9" Command="{Binding StyleEditor.OnStyleSetEndArrowRadiusY}" CommandParameter="9"/>
                        <MenuItem Header="10" Command="{Binding StyleEditor.OnStyleSetEndArrowRadiusY}" CommandParameter="10"/>
                    </MenuItem>
                    <MenuItem Header="_Style">
                        <MenuItem Header="_Thickness">
                            <MenuItem Header="0.25" Command="{Binding StyleEditor.OnStyleSetEndArrowThickness}" CommandParameter="0.25"/>
                            <MenuItem Header="0.5" Command="{Binding StyleEditor.OnStyleSetEndArrowThickness}" CommandParameter="0.5"/>
                            <MenuItem Header="0.75" Command="{Binding StyleEditor.OnStyleSetEndArrowThickness}" CommandParameter="0.75"/>
                            <MenuItem Header="1" Command="{Binding StyleEditor.OnStyleSetEndArrowThickness}" CommandParameter="1"/>
                            <MenuItem Header="1.5" Command="{Binding StyleEditor.OnStyleSetEndArrowThickness}" CommandParameter="1.5"/>
                            <MenuItem Header="2.25" Command="{Binding StyleEditor.OnStyleSetEndArrowThickness}" CommandParameter="2.25"/>
                            <MenuItem Header="3" Command="{Binding StyleEditor.OnStyleSetEndArrowThickness}" CommandParameter="3"/>
                            <MenuItem Header="4.5" Command="{Binding StyleEditor.OnStyleSetEndArrowThickness}" CommandParameter="4.5"/>
                            <MenuItem Header="6" Command="{Binding StyleEditor.OnStyleSetEndArrowThickness}" CommandParameter="6"/>
                        </MenuItem>
                        <MenuItem Header="Line _Cap">
                            <MenuItem Header="Flat" Command="{Binding StyleEditor.OnStyleSetEndArrowLineCap}" CommandParameter="Flat"/>
                            <MenuItem Header="Square" Command="{Binding StyleEditor.OnStyleSetEndArrowLineCap}" CommandParameter="Square"/>
                            <MenuItem Header="Round" Command="{Binding StyleEditor.OnStyleSetEndArrowLineCap}" CommandParameter="Round"/>
                        </MenuItem>
                        <MenuItem Header="_Dashes">
                            <MenuItem Header="_Solid" Command="{Binding StyleEditor.OnStyleSetEndArrowDashes}" CommandParameter="Solid"/>
                            <MenuItem Header="_Dash" Command="{Binding StyleEditor.OnStyleSetEndArrowDashes}" CommandParameter="Dash"/>
                            <MenuItem Header="D_ot" Command="{Binding StyleEditor.OnStyleSetEndArrowDashes}" CommandParameter="Dot"/>
                            <MenuItem Header="DashDo_t" Command="{Binding StyleEditor.OnStyleSetEndArrowDashes}" CommandParameter="DashDot"/>
                            <MenuItem Header="Das_hDotDot" Command="{Binding StyleEditor.OnStyleSetEndArrowDashes}" CommandParameter="DashDotDot"/>
                        </MenuItem>
                        <MenuItem Header="_Stroke">
                            <MenuItem Header="Blac_k" Command="{Binding StyleEditor.OnStyleSetEndArrowStroke}" CommandParameter="Black"/>
                            <MenuItem Header="_Red" Command="{Binding StyleEditor.OnStyleSetEndArrowStroke}" CommandParameter="Red"/>
                            <MenuItem Header="_Green" Command="{Binding StyleEditor.OnStyleSetEndArrowStroke}" CommandParameter="Green"/>
                            <MenuItem Header="_Blue" Command="{Binding StyleEditor.OnStyleSetEndArrowStroke}" CommandParameter="Blue"/>
                            <MenuItem Header="_Cyan" Command="{Binding StyleEditor.OnStyleSetEndArrowStroke}" CommandParameter="Cyan"/>
                            <MenuItem Header="_Magenta" Command="{Binding StyleEditor.OnStyleSetEndArrowStroke}" CommandParameter="Magenta"/>
                            <MenuItem Header="_Yellow" Command="{Binding StyleEditor.OnStyleSetEndArrowStroke}" CommandParameter="Yellow"/>
                            <Separator/>
                            <MenuItem Header="Trans_parency">
                                <MenuItem Header="0%" Command="{Binding StyleEditor.OnStyleSetEndArrowStrokeTransparency}" CommandParameter="0"/>
                                <MenuItem Header="10%" Command="{Binding StyleEditor.OnStyleSetEndArrowStrokeTransparency}" CommandParameter="10"/>
                                <MenuItem Header="20%" Command="{Binding StyleEditor.OnStyleSetEndArrowStrokeTransparency}" CommandParameter="20"/>
                                <MenuItem Header="30%" Command="{Binding StyleEditor.OnStyleSetEndArrowStrokeTransparency}" CommandParameter="30"/>
                                <MenuItem Header="40%" Command="{Binding StyleEditor.OnStyleSetEndArrowStrokeTransparency}" CommandParameter="40"/>
                                <MenuItem Header="50%" Command="{Binding StyleEditor.OnStyleSetEndArrowStrokeTransparency}" CommandParameter="50"/>
                                <MenuItem Header="60%" Command="{Binding StyleEditor.OnStyleSetEndArrowStrokeTransparency}" CommandParameter="60"/>
                                <MenuItem Header="70%" Command="{Binding StyleEditor.OnStyleSetEndArrowStrokeTransparency}" CommandParameter="70"/>
                                <MenuItem Header="80%" Command="{Binding StyleEditor.OnStyleSetEndArrowStrokeTransparency}" CommandParameter="80"/>
                                <MenuItem Header="90%" Command="{Binding StyleEditor.OnStyleSetEndArrowStrokeTransparency}" CommandParameter="90"/>
                                <MenuItem Header="100%" Command="{Binding StyleEditor.OnStyleSetEndArrowStrokeTransparency}" CommandParameter="100"/>
                            </MenuItem>
                        </MenuItem>
                        <MenuItem Header="_Fill">
                            <MenuItem Header="Blac_k" Command="{Binding StyleEditor.OnStyleSetEndArrowFill}" CommandParameter="Black"/>
                            <MenuItem Header="_Red" Command="{Binding StyleEditor.OnStyleSetEndArrowFill}" CommandParameter="Red"/>
                            <MenuItem Header="_Green" Command="{Binding StyleEditor.OnStyleSetEndArrowFill}" CommandParameter="Green"/>
                            <MenuItem Header="_Blue" Command="{Binding StyleEditor.OnStyleSetEndArrowFill}" CommandParameter="Blue"/>
                            <MenuItem Header="_Cyan" Command="{Binding StyleEditor.OnStyleSetEndArrowFill}" CommandParameter="Cyan"/>
                            <MenuItem Header="_Magenta" Command="{Binding StyleEditor.OnStyleSetEndArrowFill}" CommandParameter="Magenta"/>
                            <MenuItem Header="_Yellow" Command="{Binding StyleEditor.OnStyleSetEndArrowFill}" CommandParameter="Yellow"/>
                            <MenuItem Header="Trans_parency">
                                <MenuItem Header="0%" Command="{Binding StyleEditor.OnStyleSetEndArrowFillTransparency}" CommandParameter="0"/>
                                <MenuItem Header="10%" Command="{Binding StyleEditor.OnStyleSetEndArrowFillTransparency}" CommandParameter="10"/>
                                <MenuItem Header="20%" Command="{Binding StyleEditor.OnStyleSetEndArrowFillTransparency}" CommandParameter="20"/>
                                <MenuItem Header="30%" Command="{Binding StyleEditor.OnStyleSetEndArrowFillTransparency}" CommandParameter="30"/>
                                <MenuItem Header="40%" Command="{Binding StyleEditor.OnStyleSetEndArrowFillTransparency}" CommandParameter="40"/>
                                <MenuItem Header="50%" Command="{Binding StyleEditor.OnStyleSetEndArrowFillTransparency}" CommandParameter="50"/>
                                <MenuItem Header="60%" Command="{Binding StyleEditor.OnStyleSetEndArrowFillTransparency}" CommandParameter="60"/>
                                <MenuItem Header="70%" Command="{Binding StyleEditor.OnStyleSetEndArrowFillTransparency}" CommandParameter="70"/>
                                <MenuItem Header="80%" Command="{Binding StyleEditor.OnStyleSetEndArrowFillTransparency}" CommandParameter="80"/>
                                <MenuItem Header="90%" Command="{Binding StyleEditor.OnStyleSetEndArrowFillTransparency}" CommandParameter="90"/>
                                <MenuItem Header="100%" Command="{Binding StyleEditor.OnStyleSetEndArrowFillTransparency}" CommandParameter="100"/>
                            </MenuItem>
                        </MenuItem>
                    </MenuItem>
                </MenuItem>
            </MenuItem>
        </MenuItem>
        <MenuItem Header="_Tool">
            <MenuItem Header="_None" Command="{Binding OnToolNone}" InputGesture="N">
                <MenuItem.Icon>
                    <CheckBox IsChecked="{Binding CurrentTool.Title, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=None, Mode=OneWay}" Classes="menu"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Header="_Selection" Command="{Binding OnToolSelection}" InputGesture="S">
                <MenuItem.Icon>
                    <CheckBox IsChecked="{Binding CurrentTool.Title, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Selection, Mode=OneWay}" Classes="menu"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Header="_Point" Command="{Binding OnToolPoint}" InputGesture="P">
                <MenuItem.Icon>
                    <CheckBox IsChecked="{Binding CurrentTool.Title, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Point, Mode=OneWay}" Classes="menu"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Header="_Line" Command="{Binding OnToolLine}" InputGesture="L">
                <MenuItem.Icon>
                    <CheckBox IsChecked="{Binding CurrentTool.Title, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Line, Mode=OneWay}" Classes="menu"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="_Arc" Command="{Binding OnToolArc}" InputGesture="A">
                <MenuItem.Icon>
                    <CheckBox IsChecked="{Binding CurrentTool.Title, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Arc, Mode=OneWay}" Classes="menu"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Cubic _Bezier" Command="{Binding OnToolCubicBezier}" InputGesture="B">
                <MenuItem.Icon>
                    <CheckBox IsChecked="{Binding CurrentTool.Title, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=CubicBezier, Mode=OneWay}" Classes="menu"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="_Quadratic Bezier" Command="{Binding OnToolQuadraticBezier}" InputGesture="Q">
                <MenuItem.Icon>
                    <CheckBox IsChecked="{Binding CurrentTool.Title, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=QuadraticBezier, Mode=OneWay}" Classes="menu"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Header="Pat_h" Command="{Binding OnToolPath}" InputGesture="H">
                <MenuItem.Icon>
                    <CheckBox IsChecked="{Binding CurrentTool.Title, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Path, Mode=OneWay}" Classes="menu"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Path T_ool">
                <MenuItem Header="_Line" Command="{Binding OnToolLine}" InputGesture="L">
                    <MenuItem.Icon>
                        <CheckBox IsChecked="{Binding CurrentPathTool.Title, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Line, Mode=OneWay}" Classes="menu"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Arc" Command="{Binding OnToolArc}" InputGesture="A">
                    <MenuItem.Icon>
                        <CheckBox IsChecked="{Binding CurrentPathTool.Title, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Arc, Mode=OneWay}" Classes="menu"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Cubic _Bezier" Command="{Binding OnToolCubicBezier}" InputGesture="B">
                    <MenuItem.Icon>
                        <CheckBox IsChecked="{Binding CurrentPathTool.Title, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=CubicBezier, Mode=OneWay}" Classes="menu"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Quadratic Bezier" Command="{Binding OnToolQuadraticBezier}" InputGesture="Q">
                    <MenuItem.Icon>
                        <CheckBox IsChecked="{Binding CurrentPathTool.Title, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=QuadraticBezier, Mode=OneWay}" Classes="menu"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="_Move" Command="{Binding OnToolMove}" InputGesture="M">
                    <MenuItem.Icon>
                        <CheckBox IsChecked="{Binding CurrentPathTool.Title, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Move, Mode=OneWay}" Classes="menu"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <Separator/>
            <MenuItem Header="_Rectangle" Command="{Binding OnToolRectangle}" InputGesture="R">
                <MenuItem.Icon>
                    <CheckBox IsChecked="{Binding CurrentTool.Title, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Rectangle, Mode=OneWay}" Classes="menu"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="_Ellipse" Command="{Binding OnToolEllipse}" InputGesture="E">
                <MenuItem.Icon>
                    <CheckBox IsChecked="{Binding CurrentTool.Title, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Ellipse, Mode=OneWay}" Classes="menu"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Header="_Text" Command="{Binding OnToolText}" InputGesture="T">
                <MenuItem.Icon>
                    <CheckBox IsChecked="{Binding CurrentTool.Title, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Text, Mode=OneWay}" Classes="menu"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Header="_Image" Command="{Binding OnToolImage}" InputGesture="I">
                <MenuItem.Icon>
                    <CheckBox IsChecked="{Binding CurrentTool.Title, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Image, Mode=OneWay}" Classes="menu"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Header="Reset" Command="{Binding OnResetTool}"/>
        </MenuItem>
        <MenuItem Header="_Data">
            <MenuItem Header="_Import..." Command="{Binding Platform.OnImportData}" CommandParameter="{Binding Project}"/>
            <Separator/>
            <MenuItem Header="_Export..." Command="{Binding Platform.OnExportData}" CommandParameter="{Binding Project.CurrentDatabase}"/>
            <Separator/>
            <MenuItem Header="_Update..." Command="{Binding Platform.OnUpdateData}" CommandParameter="{Binding Project.CurrentDatabase}"/>
        </MenuItem>
        <MenuItem Header="Te_mplate" Items="{Binding Project.Templates}">
            <MenuItem.Styles>
                <Style Selector="MenuItem">
                    <Setter Property="Header" Value="{Binding Name}"/>
                    <Setter Property="Command" Value="{Binding $parent[UserControl].DataContext.OnApplyTemplate}"/>
                    <Setter Property="CommandParameter" Value="{Binding}"/>
                    <Setter Property="Icon">
                        <Template>
                            <CheckBox x:Name="icon" Classes="menu">
                                <i:Interaction.Behaviors>
                                    <iac:BindTagToVisualRootDataContextBehavior/>
                                </i:Interaction.Behaviors>
                                <CheckBox.IsChecked>
                                    <MultiBinding Mode="OneWay" Converter="{StaticResource ObjectEqualityMultiConverter}">
                                        <Binding ElementName="icon" Path="DataContext"/>
                                        <Binding ElementName="icon" Path="Tag.Project.CurrentContainer.Template"/>
                                    </MultiBinding>
                                </CheckBox.IsChecked>
                            </CheckBox>
                        </Template>
                    </Setter>
                </Style>
            </MenuItem.Styles>
        </MenuItem>
        <MenuItem Header="_Options">
            <MenuItem Header="Default is Stro_ked" Command="{Binding OnToggleDefaultIsStroked}" InputGesture="K">
                <MenuItem.Icon>
                    <CheckBox IsChecked="{Binding Project.Options.DefaultIsStroked}" Classes="menu"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Default is _Filled" Command="{Binding OnToggleDefaultIsFilled}" InputGesture="F">
                <MenuItem.Icon>
                    <CheckBox IsChecked="{Binding Project.Options.DefaultIsFilled}" Classes="menu"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Header="Default is Close_d" Command="{Binding OnToggleDefaultIsClosed}" InputGesture="D">
                <MenuItem.Icon>
                    <CheckBox IsChecked="{Binding Project.Options.DefaultIsClosed}" Classes="menu"/>
                </MenuItem.Icon>
            </MenuItem>
            <MenuItem Header="Default is Smooth _Join" Command="{Binding OnToggleDefaultIsSmoothJoin}" InputGesture="J">
                <MenuItem.Icon>
                    <CheckBox IsChecked="{Binding Project.Options.DefaultIsSmoothJoin}" Classes="menu"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Header="Snap to _Grid" Command="{Binding OnToggleSnapToGrid}" InputGesture="G">
                <MenuItem.Icon>
                    <CheckBox IsChecked="{Binding Project.Options.SnapToGrid}" Classes="menu"/>
                </MenuItem.Icon>
            </MenuItem>
            <Separator/>
            <MenuItem Header="Try To _Connect" Command="{Binding OnToggleTryToConnect}" InputGesture="C">
                <MenuItem.Icon>
                    <CheckBox IsChecked="{Binding Project.Options.TryToConnect}" Classes="menu"/>
                </MenuItem.Icon>
            </MenuItem>
        </MenuItem>
        <MenuItem Header="_Window">
            <MenuItem Header="_Load Layout..." Command="{Binding LayoutPlatform.LoadLayout}"/>
            <Separator/>
            <MenuItem Header="_Save Layout..." Command="{Binding LayoutPlatform.SaveLayout}"/>
            <Separator/>
            <MenuItem Header="_Reset Layout" Command="{Binding LayoutPlatform.ResetLayout}"/>
        </MenuItem>
        <MenuItem Header="_Help">
            <MenuItem Header="_About Core2D" Command="{Binding Platform.OnAboutDialog}"/>
        </MenuItem>
    </Menu>
</UserControl>
