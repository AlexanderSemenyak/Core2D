<!-- Copyright (c) Wiesław Šoltés. All rights reserved. -->
<!-- Licensed under the MIT license. See LICENSE file in the project root for full license information. -->
<UserControl x:Class="Core2D.UI.Wpf.Views.StatusControl" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Core2D.UI.Wpf" 
             xmlns:converters="clr-namespace:Core2D.UI.Wpf.Converters" 
             xmlns:designer="clr-namespace:Core2D.UI.Wpf.Designer"
             xmlns:editor="clr-namespace:Core2D.UI.Wpf.Editor"  
             xmlns:custom="clr-namespace:Core2D.UI.Wpf.Views.Custom"
             mc:Ignorable="d" 
             d:DataContext="{x:Static designer:DesignerHelper.Editor}"
             d:DesignWidth="1324" d:DesignHeight="20">
    <StatusBar Background="Transparent">
        <StatusBar.ItemsPanel>
            <ItemsPanelTemplate>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                </Grid>
            </ItemsPanelTemplate>
        </StatusBar.ItemsPanel>
        <StatusBarItem Grid.Column="0">
            <StackPanel Orientation="Horizontal">
                <TextBlock VerticalAlignment="Center">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0}: {1}">
                            <Binding Source="Documents"/>
                            <Binding Path="Project.Documents.Length" FallbackValue="0"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <TextBlock Text=" - " VerticalAlignment="Center"/>
                <TextBlock VerticalAlignment="Center">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}{0}: {1}">
                            <Binding Source="Pages"/>
                            <Binding Path="Project.CurrentDocument.Pages.Length" FallbackValue="0"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <TextBlock Text=" - " VerticalAlignment="Center"/>
                <TextBlock VerticalAlignment="Center">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}Layers: {0}">
                            <Binding Path="Project.CurrentContainer.Layers.Length" FallbackValue="0"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <TextBlock Text=" - " VerticalAlignment="Center"/>
                <TextBlock VerticalAlignment="Center">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="{}Shapes: {0}">
                            <Binding Path="Project.CurrentContainer.CurrentLayer.Shapes.Length" FallbackValue="0"/>
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <TextBlock Text=" - " VerticalAlignment="Center"/>
                <TextBlock VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="TextBlock">
                            <Setter Property="Text" Value="Selected: 1"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Renderers[0].State.SelectedShape}" Value="{x:Null}">
                                    <Setter Property="Text">
                                        <Setter.Value>
                                            <MultiBinding StringFormat="{}Selected: {0}">
                                                <Binding Path="Renderers[0].State.SelectedShapes.Count" FallbackValue="0"/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
            </StackPanel>
        </StatusBarItem>
        <StatusBarItem Grid.Column="2">
            <StatusBarItem.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="_None" Command="{x:Static editor:ProjectEditorCommands.ToolNoneCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=None}" InputGestureText="N"/>
                    <Separator/>
                    <MenuItem Header="_Selection" Command="{x:Static editor:ProjectEditorCommands.ToolSelectionCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Selection}" InputGestureText="S"/>
                    <Separator/>
                    <MenuItem Header="_Point}" Command="{x:Static editor:ProjectEditorCommands.ToolPointCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Point}" InputGestureText="P"/>
                    <Separator/>
                    <MenuItem Header="_Line" Command="{x:Static editor:ProjectEditorCommands.ToolLineCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Line}" InputGestureText="L"/>
                    <MenuItem Header="_Arc" Command="{x:Static editor:ProjectEditorCommands.ToolArcCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Arc}" InputGestureText="A"/>
                    <MenuItem Header="Cubic _Bezier" Command="{x:Static editor:ProjectEditorCommands.ToolCubicBezierCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=CubicBezier}" InputGestureText="B"/>
                    <MenuItem Header="_Quadratic Bezier" Command="{x:Static editor:ProjectEditorCommands.ToolQuadraticBezierCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=QuadraticBezier}" InputGestureText="Q"/>
                    <Separator/>
                    <MenuItem Header="Pat_h" Command="{x:Static editor:ProjectEditorCommands.ToolPathCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Path}" InputGestureText="H"/>
                    <Separator/>
                    <MenuItem Header="_Rectangle" Command="{x:Static editor:ProjectEditorCommands.ToolRectangleCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Rectangle}" InputGestureText="R"/>
                    <MenuItem Header="_Ellipse" Command="{x:Static editor:ProjectEditorCommands.ToolEllipseCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Ellipse}" InputGestureText="E"/>
                    <Separator/>
                    <MenuItem Header="_Text" Command="{x:Static editor:ProjectEditorCommands.ToolTextCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Text}" InputGestureText="T"/>
                    <Separator/>
                    <MenuItem Header="_Image" Command="{x:Static editor:ProjectEditorCommands.ToolImageCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Image}" InputGestureText="I"/>
                </ContextMenu>
            </StatusBarItem.ContextMenu>
            <TextBlock VerticalAlignment="Center">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="{Binding Path=CurrentTool.Title, Mode=OneWay}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=CurrentTool.Title, Mode=OneWay}" Value="None">
                                <Setter Property="Text" Value="None"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=CurrentTool.Title, Mode=OneWay}" Value="Selection">
                                <Setter Property="Text" Value="Selection"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=CurrentTool.Title, Mode=OneWay}" Value="Point}">
                                <Setter Property="Text" Value="Point"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=CurrentTool.Title, Mode=OneWay}" Value="Line}">
                                <Setter Property="Text" Value="Line"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=CurrentTool.Title, Mode=OneWay}" Value="Arc}">
                                <Setter Property="Text" Value="Arc"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=CurrentTool.Title, Mode=OneWay}" Value="CubicBezier}">
                                <Setter Property="Text" Value="Cubic Bezier"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=CurrentTool.Title, Mode=OneWay}" Value="QuadraticBezier}">
                                <Setter Property="Text" Value="Quadratic Bezier"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=CurrentTool.Title, Mode=OneWay}" Value="Path}">
                                <Setter Property="Text" Value="Path"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=CurrentTool.Title, Mode=OneWay}" Value="Rectangle}">
                                <Setter Property="Text" Value="Rectangle"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=CurrentTool.Title, Mode=OneWay}" Value="Ellipse}">
                                <Setter Property="Text" Value="Ellipse"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=CurrentTool.Title, Mode=OneWay}" Value="Text}">
                                <Setter Property="Text" Value="Text"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=CurrentTool.Title, Mode=OneWay}" Value="Image}">
                                <Setter Property="Text" Value="Image"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </StatusBarItem>
        <Separator Grid.Column="3">
            <Separator.Style>
                <Style TargetType="Separator">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Path}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Separator.Style>
        </Separator>
        <StatusBarItem Grid.Column="4">
            <StatusBarItem.Style>
                <Style TargetType="StatusBarItem">
                    <Setter Property="Visibility" Value="Collapsed"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Path}" Value="True">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </StatusBarItem.Style>
            <StatusBarItem.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="_Line" Command="{x:Static editor:ProjectEditorCommands.ToolLineCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentPathTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Line}" InputGestureText="L"/>
                    <MenuItem Header="_Arc" Command="{x:Static editor:ProjectEditorCommands.ToolArcCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentPathTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Arc}" InputGestureText="A"/>
                    <MenuItem Header="Cubic _Bezier" Command="{x:Static editor:ProjectEditorCommands.ToolCubicBezierCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentPathTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=CubicBezier}" InputGestureText="B"/>
                    <MenuItem Header="_Quadratic Bezier" Command="{x:Static editor:ProjectEditorCommands.ToolQuadraticBezierCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentPathTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=QuadraticBezier}" InputGestureText="Q"/>
                    <Separator/>
                    <MenuItem Header="_Move" Command="{x:Static editor:ProjectEditorCommands.ToolMoveCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentPathTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Move}" InputGestureText="M"/>
                </ContextMenu>
            </StatusBarItem.ContextMenu>
            <TextBlock VerticalAlignment="Center">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Text" Value="{Binding Path=CurrentPathTool.Title, Mode=OneWay}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Path=CurrentPathTool.Title, Mode=OneWay}" Value="Line">
                                <Setter Property="Text" Value="Line"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=CurrentPathTool.Title, Mode=OneWay}" Value="Arc">
                                <Setter Property="Text" Value="Arc"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=CurrentPathTool.Title, Mode=OneWay}" Value="CubicBezier">
                                <Setter Property="Text" Value="CubicBezier"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=CurrentPathTool.Title, Mode=OneWay}" Value="QuadraticBezier">
                                <Setter Property="Text" Value="QuadraticBezier"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding Path=CurrentPathTool.Title, Mode=OneWay}" Value="Move">
                                <Setter Property="Text" Value="Move"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
        </StatusBarItem>
        <Separator Grid.Column="5"/>
        <StatusBarItem Grid.Column="6">
            <CheckBox IsChecked="{Binding Project.Options.DefaultIsStroked}">
                <CheckBox.Template>
                    <ControlTemplate>
                        <TextBlock Text="Stroked" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Project.Options.DefaultIsStroked, Mode=OneWay}" Value="False">
                                            <Setter Property="Foreground" Value="DarkGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </ControlTemplate>
                </CheckBox.Template>
            </CheckBox>
        </StatusBarItem>
        <Separator Grid.Column="7"/>
        <StatusBarItem Grid.Column="8">
            <CheckBox IsChecked="{Binding Project.Options.DefaultIsFilled}">
                <CheckBox.Template>
                    <ControlTemplate>
                        <TextBlock Text="Filled" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Project.Options.DefaultIsFilled, Mode=OneWay}" Value="False">
                                            <Setter Property="Foreground" Value="DarkGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </ControlTemplate>
                </CheckBox.Template>
            </CheckBox>
        </StatusBarItem>
        <Separator Grid.Column="9"/>
        <StatusBarItem Grid.Column="10">
            <CheckBox IsChecked="{Binding Project.Options.DefaultIsClosed}">
                <CheckBox.Template>
                    <ControlTemplate>
                        <TextBlock Text="Closed" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Project.Options.DefaultIsClosed, Mode=OneWay}" Value="False">
                                            <Setter Property="Foreground" Value="DarkGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </ControlTemplate>
                </CheckBox.Template>
            </CheckBox>
        </StatusBarItem>
        <Separator Grid.Column="11"/>
        <StatusBarItem Grid.Column="12">
            <CheckBox IsChecked="{Binding Project.Options.DefaultIsSmoothJoin}">
                <CheckBox.Template>
                    <ControlTemplate>
                        <TextBlock Text="SmoothJoin" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Project.Options.DefaultIsSmoothJoin, Mode=OneWay}" Value="False">
                                            <Setter Property="Foreground" Value="DarkGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </ControlTemplate>
                </CheckBox.Template>
            </CheckBox>
        </StatusBarItem>
        <Separator Grid.Column="13"/>
        <StatusBarItem Grid.Column="14">
            <CheckBox IsChecked="{Binding Project.Options.SnapToGrid}">
                <CheckBox.Template>
                    <ControlTemplate>
                        <TextBlock Text="Snap" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Project.Options.SnapToGrid, Mode=OneWay}" Value="False">
                                            <Setter Property="Foreground" Value="DarkGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </ControlTemplate>
                </CheckBox.Template>
            </CheckBox>
        </StatusBarItem>
        <Separator Grid.Column="15"/>
        <StatusBarItem Grid.Column="16">
            <CheckBox IsChecked="{Binding Project.Options.TryToConnect}">
                <CheckBox.Template>
                    <ControlTemplate>
                        <TextBlock Text="Connect" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Project.Options.TryToConnect, Mode=OneWay}" Value="False">
                                            <Setter Property="Foreground" Value="DarkGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </ControlTemplate>
                </CheckBox.Template>
            </CheckBox>
        </StatusBarItem>
        <Separator Grid.Column="17"/>
        <StatusBarItem Grid.Column="18">
            <CheckBox IsChecked="{Binding Project.Options.CloneStyle}">
                <CheckBox.Template>
                    <ControlTemplate>
                        <TextBlock Text="CloneStyle" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Project.Options.CloneStyle, Mode=OneWay}" Value="False">
                                            <Setter Property="Foreground" Value="DarkGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </ControlTemplate>
                </CheckBox.Template>
            </CheckBox>
        </StatusBarItem>
    </StatusBar>
</UserControl>
