<!-- Copyright (c) Wiesław Šoltés. All rights reserved. -->
<!-- Licensed under the MIT license. See LICENSE file in the project root for full license information. -->
<UserControl x:Class="Core2D.UI.Wpf.Views.EditorMenuControl" 
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Core2D.UI.Wpf" 
             xmlns:converters="clr-namespace:Core2D.UI.Wpf.Converters" 
             xmlns:designer="clr-namespace:Core2D.UI.Wpf.Designer"
             xmlns:editor="clr-namespace:Core2D.UI.Wpf.Editor" 
             xmlns:Containers="clr-namespace:Core2D.Containers;assembly=Core2D.Model" 
             xmlns:custom="clr-namespace:Core2D.UI.Wpf.Views.Custom"
             mc:Ignorable="d" 
             d:DataContext="{x:Static designer:DesignerHelper.Editor}"
             d:DesignWidth="1324" d:DesignHeight="20">
    <UserControl.Resources>
        <Style x:Key="TemplateMenuItemVisibilityStyle" TargetType="MenuItem">
            <Setter Property="Visibility" Value="Visible"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Project}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Project.CurrentContainer.Template, FallbackValue={x:Null}}" Value="{x:Null}">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Menu Background="Transparent">
        <MenuItem Header="_File">
            <MenuItem Header="_New" Command="{x:Static editor:ProjectEditorCommands.NewCommand}" CommandParameter="{Binding}" InputGestureText="Ctrl+N"/>
            <Separator/>
            <MenuItem Header="_Open..." Command="{x:Static editor:ProjectEditorCommands.OpenCommand}" InputGestureText="Ctrl+O"/>
            <Separator/>
            <MenuItem Header="_Close" Command="{x:Static editor:ProjectEditorCommands.CloseCommand}" InputGestureText="Ctrl+F4"/>
            <Separator/>
            <MenuItem Header="_Save" Command="{x:Static editor:ProjectEditorCommands.SaveCommand}" InputGestureText="Ctrl+S"/>
            <MenuItem Header="Save _As..." Command="{x:Static editor:ProjectEditorCommands.SaveAsCommand}" InputGestureText="Ctrl+Shift+S"/>
            <Separator/>
            <MenuItem Header="Execu_te Script..." Command="{x:Static editor:ProjectEditorCommands.ExecuteScriptCommand}"/>
            <Separator/>
            <MenuItem Header="Import Xa_ml..." Command="{x:Static editor:ProjectEditorCommands.ImportXamlCommand}" InputGestureText="Ctrl+Shift+X"/>
            <MenuItem Header="Import _Json..." Command="{x:Static editor:ProjectEditorCommands.ImportJsonCommand}" InputGestureText="Ctrl+Shift+J"/>
            <Separator/>
            <MenuItem Header="_Export..." Command="{x:Static editor:ProjectEditorCommands.ExportCommand}" CommandParameter="{Binding Project}" InputGestureText="Ctrl+E"/>
            <Separator/>
            <MenuItem Header="_Recent" ItemsSource="{Binding RecentProjects}">
                <MenuItem.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}" ToolTip="{Binding Path}"/>
                    </DataTemplate>
                </MenuItem.ItemTemplate>
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="MenuItem">
                        <Setter Property="Command" Value="{x:Static editor:ProjectEditorCommands.OpenCommand}"/>
                        <Setter Property="CommandParameter" Value="{Binding Path}"/>
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
            <Separator/>
            <MenuItem Header="E_xit" Command="{x:Static editor:ProjectEditorCommands.ExitCommand}" InputGestureText="Alt+F4"/>
        </MenuItem>
        <MenuItem Header="E_xit">
            <MenuItem Header="_Undo" Command="{x:Static editor:ProjectEditorCommands.UndoCommand}" InputGestureText="Ctrl+Z"/>
            <MenuItem Header="_Redo" Command="{x:Static editor:ProjectEditorCommands.RedoCommand}" InputGestureText="Ctrl+Y"/>
            <Separator/>
            <MenuItem Header="Copy As _Metafile" Command="{x:Static editor:ProjectEditorCommands.CopyAsEmfCommand}" InputGestureText="Ctrl+Shift+C"/>
            <Separator/>
            <MenuItem Header="Cu_t" Command="{x:Static editor:ProjectEditorCommands.CutCommand}" CommandParameter="{Binding}" InputGestureText="Ctrl+X"/>
            <MenuItem Header="_Copy" Command="{x:Static editor:ProjectEditorCommands.CopyCommand}" CommandParameter="{Binding}" InputGestureText="Ctrl+C"/>
            <MenuItem Header="_Paste" Command="{x:Static editor:ProjectEditorCommands.PasteCommand}" CommandParameter="{Binding}" InputGestureText="Ctrl+V"/>
            <MenuItem Header="_Delete}" Command="{x:Static editor:ProjectEditorCommands.DeleteCommand}" CommandParameter="{Binding}" InputGestureText="Del"/>
            <Separator/>
            <MenuItem Header="Select _All}" Command="{x:Static editor:ProjectEditorCommands.SelectAllCommand}" InputGestureText="Ctrl+A"/>
            <MenuItem Header="De_select All" Command="{x:Static editor:ProjectEditorCommands.DeselectAllCommand}" InputGestureText="Esc"/>
            <Separator/>
            <MenuItem Header="Cl_ear All" Command="{x:Static editor:ProjectEditorCommands.ClearAllCommand}" InputGestureText=""/>
            <Separator/>
            <MenuItem Header="_Group" Command="{x:Static editor:ProjectEditorCommands.GroupCommand}" InputGestureText="Ctrl+G"/>
            <MenuItem Header="U_ngroup" Command="{x:Static editor:ProjectEditorCommands.UngroupCommand}" InputGestureText="Ctrl+U"/>
            <Separator/>
            <MenuItem Header="_Order">
                <MenuItem Header="Send to _Back" Command="{x:Static editor:ProjectEditorCommands.SendToBackCommand}" InputGestureText="Shift+-"/>
                <MenuItem Header="Send Ba_ckward" Command="{x:Static editor:ProjectEditorCommands.SendBackwardCommand}" InputGestureText="-"/>
                <Separator/>
                <MenuItem Header="Bring Fo_rward" Command="{x:Static editor:ProjectEditorCommands.BringForwardCommand}" InputGestureText="+"/>
                <MenuItem Header="Bring to _Front" Command="{x:Static editor:ProjectEditorCommands.BringToFrontCommand}" InputGestureText="Shift++"/>
            </MenuItem>
        </MenuItem>
        <MenuItem Header="_View">
            <MenuItem Header="_Reset Zoom" Command="{x:Static editor:ProjectEditorCommands.ZoomResetCommand}" InputGestureText="Z"/>
            <Separator/>
            <MenuItem Header="_AutoFit Zoom" Command="{x:Static editor:ProjectEditorCommands.ZoomAutoFitCommand}" InputGestureText="X"/>
            <Separator/>
            <MenuItem Header="_Views" Tag="{Binding Layout}" ItemsSource="{Binding Layout.Views}">
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="MenuItem">
                        <Setter Property="Header" Value="{Binding Title}"/>
                        <Setter Property="Command" Value="{x:Static editor:ProjectEditorCommands.ChangeCurrentViewCommand}"/>
                        <Setter Property="CommandParameter" Value="{Binding}"/>
                        <Setter Property="IsCheckable" Value="True"/>
                        <Setter Property="IsChecked" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Value="True">
                                <DataTrigger.Binding>
                                    <MultiBinding Converter="{StaticResource ObjectEqualityConverter}">
                                        <Binding Path="Tag.CurrentView" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}"/>
                                        <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                                    </MultiBinding>
                                </DataTrigger.Binding>
                                <Setter Property="IsChecked" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
        </MenuItem>
        <MenuItem Header="_Tool">
            <MenuItem Header="_None" Command="{x:Static editor:ProjectEditorCommands.ToolNoneCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=None}" InputGestureText="N"/>
            <Separator/>
            <MenuItem Header="_Selection" Command="{x:Static editor:ProjectEditorCommands.ToolSelectionCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Selection}" InputGestureText="S"/>
            <Separator/>
            <MenuItem Header="_Point" Command="{x:Static editor:ProjectEditorCommands.ToolPointCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Point}" InputGestureText="P"/>
            <Separator/>
            <MenuItem Header="_Point" Command="{x:Static editor:ProjectEditorCommands.ToolLineCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Line}" InputGestureText="L"/>
            <MenuItem Header="_Arc" Command="{x:Static editor:ProjectEditorCommands.ToolArcCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Arc}" InputGestureText="A"/>
            <MenuItem Header="Cubic _Bezier" Command="{x:Static editor:ProjectEditorCommands.ToolCubicBezierCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=CubicBezier}" InputGestureText="B"/>
            <MenuItem Header="_Quadratic Bezier" Command="{x:Static editor:ProjectEditorCommands.ToolQuadraticBezierCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=QuadraticBezier}" InputGestureText="Q"/>
            <Separator/>
            <MenuItem Header="Pat_h" Command="{x:Static editor:ProjectEditorCommands.ToolPathCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Path}" InputGestureText="H"/>
            <MenuItem Header="Path T_ool" IsEnabled="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Path}">
                <MenuItem Header="_Line" Command="{x:Static editor:ProjectEditorCommands.ToolLineCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentPathTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Line}" InputGestureText="L"/>
                <MenuItem Header="_Arc" Command="{x:Static editor:ProjectEditorCommands.ToolArcCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentPathTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Arc}" InputGestureText="A"/>
                <MenuItem Header="Cubic _Bezier" Command="{x:Static editor:ProjectEditorCommands.ToolCubicBezierCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentPathTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=CubicBezier}" InputGestureText="B"/>
                <MenuItem Header="_Quadratic Bezier" Command="{x:Static editor:ProjectEditorCommands.ToolQuadraticBezierCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentPathTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=QuadraticBezier}" InputGestureText="Q"/>
                <Separator/>
                <MenuItem Header="_Move" Command="{x:Static editor:ProjectEditorCommands.ToolMoveCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentPathTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Move}" InputGestureText="M"/>
            </MenuItem>
            <Separator/>
            <MenuItem Header="_Rectangle" Command="{x:Static editor:ProjectEditorCommands.ToolRectangleCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Rectangle}" InputGestureText="R"/>
            <MenuItem Header="_Ellipse" Command="{x:Static editor:ProjectEditorCommands.ToolEllipseCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Ellipse}" InputGestureText="E"/>
            <Separator/>
            <MenuItem Header="_Text" Command="{x:Static editor:ProjectEditorCommands.ToolTextCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Text}" InputGestureText="T"/>
            <Separator/>
            <MenuItem Header="_Image" Command="{x:Static editor:ProjectEditorCommands.ToolImageCommand}" IsCheckable="False" IsChecked="{Binding Path=CurrentTool.Title, Mode=OneWay, Converter={StaticResource ObjectEqualsConverter}, ConverterParameter=Image}" InputGestureText="I"/>
        </MenuItem>
        <MenuItem Header="_Data">
            <MenuItem Header="_Import..." Command="{x:Static editor:ProjectEditorCommands.ImportDataCommand}" CommandParameter="{Binding Project}" InputGestureText=""/>
            <Separator/>
            <MenuItem Header="_Export..." Command="{x:Static editor:ProjectEditorCommands.ExportDataCommand}" CommandParameter="{Binding Project.CurrentDatabase}" InputGestureText=""/>
            <Separator/>
            <MenuItem Header="_Update..." Command="{x:Static editor:ProjectEditorCommands.UpdateDataCommand}" CommandParameter="{Binding Project.CurrentDatabase}" InputGestureText=""/>
        </MenuItem>
        <MenuItem Header="Te_mplate" Tag="{Binding}" ItemsSource="{Binding Project.Templates}" Style="{StaticResource TemplateMenuItemVisibilityStyle}">
            <MenuItem.ItemContainerStyle>
                <Style TargetType="MenuItem">
                    <Setter Property="Header" Value="{Binding Name}"/>
                    <Setter Property="Command" Value="{x:Static editor:ProjectEditorCommands.ApplyTemplateCommand}"/>
                    <Setter Property="CommandParameter" Value="{Binding}"/>
                    <Setter Property="IsCheckable" Value="True"/>
                    <Setter Property="IsChecked" Value="False"/>
                    <Style.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource ObjectEqualityConverter}">
                                    <Binding Path="Tag.Project.CurrentContainer.Template" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}"/>
                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter Property="IsChecked" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </MenuItem.ItemContainerStyle>
        </MenuItem>
        <MenuItem Header="_Options">
            <MenuItem Header="Default is Stro_ked" IsCheckable="True" IsChecked="{Binding Project.Options.DefaultIsStroked, Mode=OneWay}" Command="{x:Static editor:ProjectEditorCommands.DefaultIsStrokedCommand}" InputGestureText="K"/>
            <MenuItem Header="Default is _Filled" IsCheckable="True" IsChecked="{Binding Project.Options.DefaultIsFilled, Mode=OneWay}" Command="{x:Static editor:ProjectEditorCommands.DefaultIsFilledCommand}" InputGestureText="F"/>
            <Separator/>
            <MenuItem Header="Default is Close_d" IsCheckable="True" IsChecked="{Binding Project.Options.DefaultIsClosed, Mode=OneWay}" Command="{x:Static editor:ProjectEditorCommands.DefaultIsClosedCommand}" InputGestureText="D"/>
            <MenuItem Header="Default is Smooth _Join" IsCheckable="True" IsChecked="{Binding Project.Options.DefaultIsSmoothJoin, Mode=OneWay}" Command="{x:Static editor:ProjectEditorCommands.DefaultIsSmoothJoinCommand}" InputGestureText="J"/>
            <Separator/>
            <MenuItem Header="Snap to _Grid" IsCheckable="True" IsChecked="{Binding Project.Options.SnapToGrid, Mode=OneWay}" Command="{x:Static editor:ProjectEditorCommands.SnapToGridCommand}" InputGestureText="G"/>
            <Separator/>
            <MenuItem Header="Try To _Connect" IsCheckable="True" IsChecked="{Binding Project.Options.TryToConnect, Mode=OneWay}" Command="{x:Static editor:ProjectEditorCommands.TryToConnectCommand}" InputGestureText="C"/>
            <Separator/>
            <MenuItem Header="Clone St_yle" IsCheckable="True" IsChecked="{Binding Project.Options.CloneStyle, Mode=OneWay}" Command="{x:Static editor:ProjectEditorCommands.CloneStyleCommand}" InputGestureText="Y"/>
        </MenuItem>
        <MenuItem Header="_Window">
            <MenuItem Header="_Load Layout..." Command="{x:Static editor:ProjectEditorCommands.LoadWindowLayoutCommand}" InputGestureText=""/>
            <Separator/>
            <MenuItem Header="_Save Layout..." Command="{x:Static editor:ProjectEditorCommands.SaveWindowLayoutCommand}" InputGestureText=""/>
            <Separator/>
            <MenuItem Header="_Reset Layout" Command="{x:Static editor:ProjectEditorCommands.ResetWindowLayoutCommand}" InputGestureText=""/>
        </MenuItem>
    </Menu>
</UserControl>
