<!-- Copyright (c) Wiesław Šoltés. All rights reserved. -->
<!-- Licensed under the MIT license. See LICENSE file in the project root for full license information. -->
<UserControl x:Class="Core2D.Avalonia.Views.EditorControl"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:behaviors="clr-namespace:Core2D.Avalonia.Behaviors;assembly=Core2D.Avalonia"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:Core2D.Avalonia;assembly=Core2D.Avalonia"
             xmlns:converters="clr-namespace:Core2D.Avalonia.Converters;assembly=Core2D.Avalonia"
             xmlns:Editor="clr-namespace:Core2D.Editor;assembly=Core2D.Editor"
             xmlns:Designer="clr-namespace:Core2D.Editor.Designer;assembly=Core2D.Editor"
             xmlns:paz="clr-namespace:Avalonia.Controls.PanAndZoom;assembly=Avalonia.Controls.PanAndZoom"
             xmlns:data="clr-namespace:Core2D.Avalonia.Views.Data;assembly=Core2D.Avalonia"
             xmlns:path="clr-namespace:Core2D.Avalonia.Views.Path;assembly=Core2D.Avalonia"
             xmlns:containers="clr-namespace:Core2D.Avalonia.Views.Containers;assembly=Core2D.Avalonia"
             xmlns:settings="clr-namespace:Core2D.Avalonia.Views.Settings;assembly=Core2D.Avalonia"
             xmlns:shapes="clr-namespace:Core2D.Avalonia.Views.Shapes;assembly=Core2D.Avalonia"
             xmlns:state="clr-namespace:Core2D.Avalonia.Views.State;assembly=Core2D.Avalonia"
             xmlns:style="clr-namespace:Core2D.Avalonia.Views.Style;assembly=Core2D.Avalonia"
             xmlns:editor="clr-namespace:Core2D.Avalonia.Views.Editor;assembly=Core2D.Avalonia"
             xmlns:views="clr-namespace:Core2D.Avalonia.Views;assembly=Core2D.Avalonia"
             Design.DataContext="{x:Static Designer:DesignerContext.Editor}"
             Design.Width="1200" Design.Height="540">
    <Grid Name="rootPanel" ColumnDefinitions="180,Auto,*,Auto,240" RowDefinitions="*,Auto" Margin="6,6,6,2">
        <GridSplitter Name="leftPanelVSplitter" Classes="vertical" Grid.Column="1" Grid.Row="0" Width="6"/>
        <Grid Name="containerPanel" Grid.Row="0" Grid.Column="2">
            <Border Classes="container">
                <Border Classes="transparent" ClipToBounds="True">
                    <paz:ZoomBorder Name="zoomBorder" Stretch="None" ZoomSpeed="1.2" PanButton="Right" EnableInput="{Binding IsToolIdle}" Background="Transparent" ClipToBounds="False" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <views:ContainerControl Name="containerControl" Renderer="{Binding Renderers[0]}" Container="{Binding Project.CurrentContainer}" ClipToBounds="False">
                            <i:Interaction.Behaviors>
                                <behaviors:DropBehavior Editor="{Binding}"/>
                            </i:Interaction.Behaviors>
                        </views:ContainerControl>
                    </paz:ZoomBorder>
                </Border>
            </Border>
        </Grid>
        <Grid Name="leftPanel" RowDefinitions="50*,Auto,50*" Grid.Column="0" Grid.Row="0">
            <Border Name="leftPanelTop" Classes="leftTop" Grid.Row="0">
                <TabControl Classes="bottom">
                    <i:Interaction.Behaviors>
                        <behaviors:DropBehavior Editor="{Binding}"/>
                    </i:Interaction.Behaviors>
                    <TabItem Classes="property">
                        <TabItem.Header>
                            <TextBlock Text="Project" Classes="drag">
                                <i:Interaction.Behaviors>
                                    <behaviors:DragBehavior/>
                                </i:Interaction.Behaviors>
                            </TextBlock>
                        </TabItem.Header>
                        <containers:ProjectControl DataContext="{Binding Project}"/>
                    </TabItem>
                    <TabItem Classes="property">
                        <TabItem.Header>
                            <TextBlock Text="Options" Classes="drag">
                                <i:Interaction.Behaviors>
                                    <behaviors:DragBehavior/>
                                </i:Interaction.Behaviors>
                            </TextBlock>
                        </TabItem.Header>
                        <ContentControl Content="{Binding Project.Options}"/>
                    </TabItem>
                    <TabItem Classes="property">
                        <TabItem.Header>
                            <TextBlock Text="Images" Classes="drag">
                                <i:Interaction.Behaviors>
                                    <behaviors:DragBehavior/>
                                </i:Interaction.Behaviors>
                            </TextBlock>
                        </TabItem.Header>
                        <containers:ImagesControl DataContext="{Binding Project}"/>
                    </TabItem>
                </TabControl>
            </Border>
            <GridSplitter Name="leftPanelHSplitter" Classes="horizontal" Grid.Row="1" Height="7"/>
            <Border Name="leftPanelBottom" Classes="leftBottom" Grid.Row="2">
                <TabControl Classes="bottom">
                    <TabItem Header="Groups" Classes="property">
                        <containers:GroupsControl DataContext="{Binding Project.CurrentGroupLibrary}"/>
                    </TabItem>
                    <TabItem Header="Databases" Classes="property">
                        <containers:DatabasesControl DataContext="{Binding Project}"/>
                    </TabItem>
                </TabControl>
            </Border>
        </Grid>
        <GridSplitter Name="rightPanelVSplitter" Classes="vertical" Grid.Column="3" Grid.Row="0" Width="6"/>
        <Grid Name="rightPanel" RowDefinitions="50*,Auto,50*" Grid.Column="4" Grid.Row="0">
            <Border Name="rightPanelTop" Classes="rightTop" Grid.Row="0">
                <TabControl Classes="bottom">
                    <TabItem Header="Styles" Classes="property">
                        <containers:StylesControl DataContext="{Binding Project.CurrentStyleLibrary}"/>
                    </TabItem>
                    <TabItem Header="Templates" Classes="property">
                        <containers:TemplatesControl DataContext="{Binding Project}"/>
                    </TabItem>
                    <TabItem Header="Container" Classes="property">
                        <ScrollViewer>
                            <ContentControl Content="{Binding Project.CurrentContainer}"/>
                        </ScrollViewer>
                    </TabItem>
                    <TabItem Header="Zoom" Classes="property" DataContext="{Binding #zoomBorder}">
                        <containers:ZoomControl/>
                    </TabItem>
                </TabControl>
            </Border>
            <GridSplitter Name="rightPanelHSplitter" Classes="horizontal" Grid.Row="1" Height="7"/>
            <Border Name="rightPanelBottom" Classes="rightBottom" Grid.Row="2">
                <TabControl Classes="bottom">
                    <TabItem Header="Tools" Classes="property">
                        <settings:ToolsControl DataContext="{Binding}"/>
                    </TabItem>
                    <TabItem Header="Shape" Classes="property">
                        <ScrollViewer>
                            <ContentControl Content="{Binding Project.CurrentContainer.CurrentShape}"/>
                        </ScrollViewer>
                    </TabItem>
                    <TabItem Header="Data" Classes="property">
                        <ScrollViewer>
                            <data:DataControl DataContext="{Binding Renderers[0].State.SelectedShape.Data}"/>
                        </ScrollViewer>
                    </TabItem>
                    <TabItem Header="Style" Classes="property">
                        <ScrollViewer>
                            <style:ShapeStyleControl DataContext="{Binding Project.CurrentStyleLibrary.Selected}"/>
                        </ScrollViewer>
                    </TabItem>
                    <TabItem Header="Template" Classes="property">
                        <ScrollViewer>
                            <ContentControl Content="{Binding Project.CurrentTemplate}"/>
                        </ScrollViewer>
                    </TabItem>
                </TabControl>
            </Border>
        </Grid>
        <Grid ColumnDefinitions="Auto,*" Grid.Column="0" Grid.ColumnSpan="5" Grid.Row="1" Margin="0,2,0,0">
            <TextBlock Name="statsPanel" Classes="stats" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center">
                <TextBlock.Text>
                    <MultiBinding Mode="OneWay" Converter="{x:Static converters:EditorToStatsMultiConverter.Instance}">
                        <Binding Path="Project.Documents.Length"/>
                        <Binding Path="Project.CurrentDocument.Pages.Length"/>
                        <Binding Path="Project.CurrentContainer.Layers.Length"/>
                        <Binding Path="Project.CurrentContainer.CurrentLayer.Shapes.Length"/>
                        <Binding Path="Renderers[0].State.SelectedShape" Converter="{x:Static converters:ObjectToObjectConverter.Instance}"/>
                        <Binding Path="Renderers[0].State.SelectedShapes" Converter="{x:Static converters:ObjectToObjectConverter.Instance}"/>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
            <WrapPanel Name="optionsPanel" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center">
                <DropDown Classes="tool" Items="{Binding Tools}" SelectedItem="{Binding CurrentTool, Mode=TwoWay}">
                    <DropDown.DataTemplates>
                        <DataTemplate>
                            <TextBlock Text="{Binding Title}"/>
                        </DataTemplate>
                    </DropDown.DataTemplates>
                </DropDown>
                <DropDown Classes="tool" Items="{Binding PathTools}" SelectedItem="{Binding CurrentPathTool, Mode=TwoWay}">
                    <DropDown.DataTemplates>
                        <DataTemplate>
                            <TextBlock Text="{Binding Title}"/>
                        </DataTemplate>
                    </DropDown.DataTemplates>
                    <DropDown.IsVisible>
                        <MultiBinding Mode="OneWay" Converter="{x:Static converters:ObjectEqualityMultiConverter.Instance}">
                            <Binding Path="CurrentTool.Title"/>
                            <Binding Source="Path"/>
                        </MultiBinding>
                    </DropDown.IsVisible>
                </DropDown>
                <CheckBox Classes="options" Content="Stroked" IsChecked="{Binding Project.Options.DefaultIsStroked, Mode=TwoWay}"/>
                <CheckBox Classes="options" Content="Filled" IsChecked="{Binding Project.Options.DefaultIsFilled, Mode=TwoWay}"/>
                <CheckBox Classes="options" Content="Closed" IsChecked="{Binding Project.Options.DefaultIsClosed, Mode=TwoWay}"/>
                <CheckBox Classes="options" Content="SmoothJoin" IsChecked="{Binding Project.Options.DefaultIsSmoothJoin, Mode=TwoWay}"/>
                <CheckBox Classes="options" Content="Snap" IsChecked="{Binding Project.Options.SnapToGrid, Mode=TwoWay}"/>
                <CheckBox Classes="options" Content="Connect" IsChecked="{Binding Project.Options.TryToConnect, Mode=TwoWay}"/>
                <CheckBox Classes="options" Content="CloneStyle" IsChecked="{Binding Project.Options.CloneStyle, Mode=TwoWay}"/>
            </WrapPanel>
        </Grid>
    </Grid>
</UserControl>
