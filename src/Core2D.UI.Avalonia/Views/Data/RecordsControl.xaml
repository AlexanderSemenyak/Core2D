<!-- Copyright (c) Wiesław Šoltés. All rights reserved. -->
<!-- Licensed under the MIT license. See LICENSE file in the project root for full license information. -->
<UserControl x:Class="Core2D.UI.Avalonia.Views.Data.RecordsControl"
             xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
             xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
             xmlns:id="clr-namespace:Dock.Avalonia;assembly=Dock.Avalonia"
             xmlns:converters="clr-namespace:Core2D.UI.Avalonia.Converters;assembly=Core2D.UI.Avalonia"
             xmlns:DataCore="clr-namespace:Core2D.Data;assembly=Core2D.Model"
             xmlns:Editor="clr-namespace:Core2D.Editor;assembly=Core2D.Editor"
             xmlns:Designer="clr-namespace:Core2D.Editor.Designer;assembly=Core2D.Editor"
             mc:Ignorable="d"
             d:DataContext="{x:Static Designer:DesignerContext.Database}"
             d:DesignWidth="250" d:DesignHeight="400">
    <UserControl.Styles>
        <Style Selector="DataGrid">
            <Setter Property="CanUserReorderColumns" Value="True"/>
            <Setter Property="CanUserResizeColumns" Value="True"/>
            <Setter Property="CanUserSortColumns" Value="True"/>
        </Style>
    </UserControl.Styles>
    <TabControl Classes="default">
        <TabItem Header="Records" Classes="property">
            <Grid RowDefinitions="Auto,*">
                <Menu Grid.Row="0" HorizontalAlignment="Right">
                    <MenuItem Header="apply" Command="{Binding $parent[Window].DataContext.OnApplyRecord}" CommandParameter="{Binding CurrentRecord}" IsVisible="{Binding !!CurrentRecord}"/>
                    <MenuItem Header="+" Command="{Binding $parent[Window].DataContext.OnAddRecord}" CommandParameter="{Binding}"/>
                    <MenuItem Header="&#727;" Command="{Binding $parent[Window].DataContext.OnRemoveRecord}" CommandParameter="{Binding CurrentRecord}" IsVisible="{Binding !!CurrentRecord}"/>
                </Menu>
                <ListBox x:Name="records" Items="{Binding Records}" SelectedItem="{Binding CurrentRecord, Mode=TwoWay}" VirtualizationMode="Simple" Grid.Row="1" Classes="default">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Vertical"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.KeyBindings>
                        <KeyBinding Command="{Binding $parent[Window].DataContext.OnAddRecord}" CommandParameter="{Binding #records.DataContext, Mode=OneWay}" Gesture="Ctrl+N"/>
                        <KeyBinding Command="{Binding $parent[Window].DataContext.OnRemoveRecord}" CommandParameter="{Binding #records.SelectedItem}" Gesture="Delete"/>
                    </ListBox.KeyBindings>
                    <ListBox.DataTemplates>
                        <DataTemplate DataType="DataCore:IRecord">
                            <TextBlock x:Name="record" Text="{Binding Mode=OneWay, Converter={StaticResource ObjectToTypeStringConverter}}" Classes="list drag">
                                <i:Interaction.Behaviors>
                                    <ia:EventTriggerBehavior EventName="DoubleTapped" SourceObject="{Binding #record}">
                                        <ia:InvokeCommandAction Command="{Binding $parent[Window].DataContext.OnApplyRecord}" CommandParameter="{Binding Mode=OneWay}"/>
                                    </ia:EventTriggerBehavior>
                                    <id:DragBehavior Context="{Binding}"/>
                                </i:Interaction.Behaviors>
                                <TextBlock.ContextMenu>
                                    <ContextMenu Classes="default">
                                        <MenuItem Header="_Delete" Command="{Binding $parent[Window].DataContext.OnRemoveRecord}" CommandParameter="{Binding Mode=OneWay}"/>
                                    </ContextMenu>
                                </TextBlock.ContextMenu>
                            </TextBlock>
                        </DataTemplate>
                    </ListBox.DataTemplates>
                </ListBox>
            </Grid>
        </TabItem>
        <TabItem Header="Columns">
            <Grid RowDefinitions="Auto,*">
                <Menu Grid.Row="0" HorizontalAlignment="Right">
                    <MenuItem Command="{Binding $parent[Window].DataContext.OnRemoveColumn}" CommandParameter="{Binding #columns.SelectedItem}" Header="&#727;"/>
                    <MenuItem Command="{Binding $parent[Window].DataContext.OnAddColumn}" CommandParameter="{Binding}" Header="+"/>
                </Menu>
                <DataGrid x:Name="columns" Items="{Binding Columns}" AutoGenerateColumns="False" Grid.Row="1">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}"/>
                        <DataGridTextColumn Header="Width" Binding="{Binding Width}"/>
                        <DataGridCheckBoxColumn Header="IsVisible" Binding="{Binding IsVisible}"/>
                        <DataGridTextColumn Header="Owner" Binding="{Binding Owner.Name}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Id" Binding="{Binding Id}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </TabItem>
        <TabItem Header="Rows">
            <Grid RowDefinitions="Auto,*">
                <Menu Grid.Row="1" HorizontalAlignment="Right">
                    <MenuItem Header="apply" Command="{Binding $parent[Window].DataContext.OnApplyRecord}" CommandParameter="{Binding CurrentRecord}" IsVisible="{Binding !!CurrentRecord}"/>
                    <MenuItem Header="+" Command="{Binding $parent[Window].DataContext.OnAddRecord}" CommandParameter="{Binding}"/>
                    <MenuItem Header="&#727;" Command="{Binding $parent[Window].DataContext.OnRemoveRecord}" CommandParameter="{Binding CurrentRecord}" IsVisible="{Binding !!CurrentRecord}"/>
                </Menu>
                <DataGrid x:Name="records" Items="{Binding Records}" SelectedItem="{Binding CurrentRecord}" AutoGenerateColumns="False" Grid.Row="1">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Owner" Binding="{Binding Owner.Name}" IsReadOnly="True"/>
                        <DataGridTextColumn Header="Id" Binding="{Binding Id}"/>
                    </DataGrid.Columns>
                    <DataGrid.RowDetailsTemplate>
                        <DataTemplate>
                            <DockPanel>
                                <DataGrid ItemsSource="{Binding Owner.Columns}" AutoGenerateColumns="False" HeadersVisibility="None" DockPanel.Dock="Left">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" IsReadOnly="True"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <DataGrid ItemsSource="{Binding Values}" AutoGenerateColumns="False" HeadersVisibility="None" DockPanel.Dock="Right">
                                    <DataGrid.Columns>
                                        <DataGridTextColumn Header="Content" Binding="{Binding Content}" IsReadOnly="False"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                            </DockPanel>
                        </DataTemplate>
                    </DataGrid.RowDetailsTemplate>
                </DataGrid>
            </Grid>
        </TabItem>
    </TabControl>
</UserControl>
