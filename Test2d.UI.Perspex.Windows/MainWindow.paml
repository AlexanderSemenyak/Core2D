<!-- Copyright (c) Wiesław Šoltés. All rights reserved. -->
<!-- Licensed under the MIT license. See LICENSE file in the project root for full license information. -->
<Window xmlns="https://github.com/perspex"
        xmlns:local="clr-namespace:TestPerspex;assembly=Test2d.UI.Perspex.Windows"
        xmlns:core="clr-namespace:Test2d;assembly=Test2d"
        Width="1260" Height="670"
        Title="Test2d">
    <Window.Styles>
        <Style Selector="TabItem.property">
            <Setter Property="TabItem.FontSize" Value="12" />
            <Setter Property="TabItem.FontWeight" Value="Normal" />
        </Style>
        <Style Selector="TextBlock.header">
            <Setter Property="TextBox.FontSize" Value="12" />
            <Setter Property="TextBox.FontWeight" Value="Bold" />
        </Style>
        <Style Selector="TextBlock.left">
            <Setter Property="TextBlock.TextAlignment" Value="Left" />
            <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
        </Style>
        <Style Selector="TextBox.left">
            <!--<Setter Property="TextBox.TextAlignment" Value="Left"/>-->
            <Setter Property="TextBox.VerticalAlignment" Value="Center" />
        </Style>
        <Style Selector="TextBlock.center">
            <Setter Property="TextBlock.TextAlignment" Value="Center" />
            <Setter Property="TextBlock.VerticalAlignment" Value="Center" />
        </Style>
        <Style Selector="TextBox.center">
            <Setter Property="TextBox.BorderBrush" Value="Transparent" />
            <!--<Setter Property="TextBox.TextAlignment" Value="Center"/>-->
            <Setter Property="TextBox.VerticalAlignment" Value="Center" />
        </Style>
        <Style Selector="CheckBox.default">
        </Style>
        <Style Selector="DropDown.default">
        </Style>
    </Window.Styles>
    <Window.DataTemplates>
        <!-- style -->
        <DataTemplate DataType="core:ArgbColor">
            <Grid RowDefinitions="Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,*">
                <TextBlock Text="A" Classes="left" Grid.Row="0" Grid.Column="0"/>
                <TextBox Text="{Binding Path=A, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                <TextBlock Text="R" Classes="left" Grid.Row="1" Grid.Column="0"/>
                <TextBox Text="{Binding Path=R, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                <TextBlock Text="G" Classes="left" Grid.Row="2" Grid.Column="0"/>
                <TextBox Text="{Binding Path=G, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                <TextBlock Text="B" Classes="left" Grid.Row="3" Grid.Column="0"/>
                <TextBox Text="{Binding Path=B, Mode=TwoWay}" Classes="left" Grid.Row="3" Grid.Column="1"/>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="core:ArrowStyle">
            <TabControl>
                <TabItem Header="Arrow" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="Arrow Type" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <DropDown Items="{Binding ArrowTypeValues}" SelectedItem="{Binding Path=ArrowType, Mode=TwoWay}" Classes="default" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="IsStroked" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        <TextBlock Text="IsFilled" Classes="left" Grid.Row="2" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsFilled, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                        <TextBlock Text="RadiusX" Classes="left" Grid.Row="3" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=RadiusX, Mode=TwoWay}" Classes="left" Grid.Row="3" Grid.Column="1"/>
                        <TextBlock Text="RadiusY" Classes="left" Grid.Row="4" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=RadiusY, Mode=TwoWay}" Classes="left" Grid.Row="4" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Base" Classes="property">
                    <StackPanel>
                        <Grid RowDefinitions="Auto" ColumnDefinitions="Auto,*">
                            <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="Stroke" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding Stroke}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="Fill" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding Fill}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,*">
                            <TextBlock Text="Thickness" Classes="left" Grid.Row="0" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=Thickness, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                            <TextBlock Text="Line Cap" Classes="left" Grid.Row="1" Grid.Column="0"/>
                            <DropDown Items="{Binding LineCapValues}" SelectedItem="{Binding Path=LineCap, Mode=TwoWay}" Classes="default" Grid.Row="1" Grid.Column="1"/>
                            <TextBlock Text="Dashes" Classes="left" Grid.Row="2" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=Dashes, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                            <TextBlock Text="Dash Offset" Classes="left" Grid.Row="3" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=DashOffset, Mode=TwoWay}" Classes="left" Grid.Row="3" Grid.Column="1"/>
                        </Grid>
                    </StackPanel>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:FontStyle">
            <StackPanel>
                <CheckBox Content="Regular" IsChecked="{Binding Path=Regular, Mode=TwoWay}"/>
                <CheckBox Content="Bold" IsChecked="{Binding Path=Bold, Mode=TwoWay}"/>
                <CheckBox Content="Italic" IsChecked="{Binding Path=Italic, Mode=TwoWay}"/>
                <CheckBox Content="Underline" IsChecked="{Binding Path=Underline, Mode=TwoWay}"/>
                <CheckBox Content="Strikeout" IsChecked="{Binding Path=Strikeout, Mode=TwoWay}"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate DataType="core:TextStyle">
            <StackPanel>
                <Grid RowDefinitions="Auto" ColumnDefinitions="Auto,*">
                    <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                    <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                </Grid>
                <Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,*">
                    <TextBlock Text="FontName" Classes="left" Grid.Row="0" Grid.Column="0"/>
                    <TextBox Text="{Binding Path=FontName, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                    <TextBlock Text="FontFile" Classes="left" Grid.Row="1" Grid.Column="0"/>
                    <TextBox Text="{Binding Path=FontFile, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                    <TextBlock Text="FontSize" Classes="left" Grid.Row="2" Grid.Column="0"/>
                    <TextBox Text="{Binding Path=FontSize, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                    <TextBlock Text="FontStyle" Classes="left" Grid.Row="3" Grid.Column="0"/>
                    <ContentControl Content="{Binding FontStyle}" Grid.Row="3" Grid.Column="1"/>
                    <TextBlock Text="HAlignment" Classes="left" Grid.Row="4" Grid.Column="0"/>
                    <DropDown Items="{Binding TextHAlignmentValues}" SelectedItem="{Binding Path=TextHAlignment, Mode=TwoWay}" Classes="default" Grid.Row="4" Grid.Column="1"/>
                    <TextBlock Text="VAlignment" Classes="left" Grid.Row="5" Grid.Column="0"/>
                    <DropDown Items="{Binding TextVAlignmentValues}" SelectedItem="{Binding Path=TextVAlignment, Mode=TwoWay}" Classes="default" Grid.Row="5" Grid.Column="1"/>
                </Grid>
            </StackPanel>
        </DataTemplate>
        <DataTemplate DataType="core:LineFixedLength">
            <Grid RowDefinitions="Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,*">
                <TextBlock Text="Flags" Classes="left" Grid.Row="0" Grid.Column="0"/>
                <StackPanel Grid.Row="0" Grid.Column="1">
                    <CheckBox Content="Disabled" IsChecked="{Binding Path=Disabled, Mode=TwoWay}"/>
                    <CheckBox Content="Start" IsChecked="{Binding Path=Start, Mode=TwoWay}"/>
                    <CheckBox Content="End" IsChecked="{Binding Path=End, Mode=TwoWay}"/>
                    <CheckBox Content="Vertical" IsChecked="{Binding Path=Vertical, Mode=TwoWay}"/>
                    <CheckBox Content="Horizontal" IsChecked="{Binding Path=Horizontal, Mode=TwoWay}"/>
                    <CheckBox Content="All" IsChecked="{Binding Path=All, Mode=TwoWay}"/>
                </StackPanel>
                <TextBlock Text="Length" Classes="left" Grid.Row="1" Grid.Column="0"/>
                <TextBox Text="{Binding Path=Length, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                <TextBlock Text="StartTrigger" Classes="left" Grid.Row="2" Grid.Column="0"/>
                <ContentControl Content="{Binding StartTrigger}" Grid.Row="2" Grid.Column="1"/>
                <TextBlock Text="EndTrigger" Classes="left" Grid.Row="3" Grid.Column="0"/>
                <ContentControl Content="{Binding EndTrigger}" Grid.Row="3" Grid.Column="1"/>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="core:LineStyle">
            <StackPanel>
                <Grid RowDefinitions="Auto" ColumnDefinitions="Auto,*">
                    <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                    <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                </Grid>
                <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                    <TextBlock Text="FixedLength" Classes="header" Grid.Row="0" Grid.Column="0"/>
                    <ContentControl Content="{Binding FixedLength}" Grid.Row="1" Grid.Column="0"/>
                </Grid>
            </StackPanel>
        </DataTemplate>
        <DataTemplate DataType="core:ShapeStyle">
            <TabControl>
                <TabItem Header="Base" Classes="property">
                    <StackPanel>
                        <Grid RowDefinitions="Auto" ColumnDefinitions="Auto,*">
                            <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="Stroke" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding Stroke}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="Fill" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding Fill}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,*">
                            <TextBlock Text="Thickness" Classes="left" Grid.Row="0" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=Thickness, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                            <TextBlock Text="Line Cap" Classes="left" Grid.Row="1" Grid.Column="0"/>
                            <DropDown Items="{Binding LineCapValues}" SelectedItem="{Binding Path=LineCap, Mode=TwoWay}" Classes="default" Grid.Row="1" Grid.Column="1"/>
                            <TextBlock Text="Dashes" Classes="left" Grid.Row="2" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=Dashes, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                            <TextBlock Text="Dash Offset" Classes="left" Grid.Row="3" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=DashOffset, Mode=TwoWay}" Classes="left" Grid.Row="3" Grid.Column="1"/>
                        </Grid>
                    </StackPanel>
                </TabItem>
                <TabItem Header="Text" Classes="property">
                    <ContentControl Content="{Binding TextStyle}"/>
                </TabItem>
                <TabItem Header="Line" Classes="property">
                    <StackPanel>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="StartArrowStyle" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding StartArrowStyle}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="EndArrowStyle" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding EndArrowStyle}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="FixedLength" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding LineStyle}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                    </StackPanel>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <!-- data -->
        <DataTemplate DataType="core:Record">
            <Grid RowDefinitions="Auto,*" ColumnDefinitions="50*,Auto,50*" Grid.Row="1" Grid.Column="0">
                <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Width="10"/>
                <TextBlock Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" Text="Name"/>
                <TextBlock Grid.Column="2" Grid.Row="0" VerticalAlignment="Center" Text="Value"/>
                <ItemsControl VerticalAlignment="Stretch" Grid.Column="0" Grid.Row="1" Items="{Binding Columns}">
                    <ItemsControl.DataTemplates>
                        <DataTemplate DataType="core:Column">
                            <Grid VerticalAlignment="Top">
                                <TextBox VerticalAlignment="Center" Text="{Binding Path=Name, Mode=TwoWay}"/>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.DataTemplates>
                </ItemsControl>
                <ItemsControl VerticalAlignment="Stretch" Grid.Column="2" Grid.Row="1" Items="{Binding Values}">
                    <ItemsControl.DataTemplates>
                        <DataTemplate DataType="core:Value">
                            <Grid VerticalAlignment="Top">
                                <TextBox VerticalAlignment="Center" Text="{Binding Path=Content, Mode=TwoWay}"/>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.DataTemplates>
                </ItemsControl>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="core:Database">
            <!-- 
            <StackPanel>
                <Grid ColumnDefinitions="60,*" RowDefinitions="Auto">
                    <TextBlock 
                        Text="Name" 
                        Style="{StaticResource TextBlockLeftStyleKey}"
                        Grid.Row="0" 
                        Grid.Column="0">
                    </TextBlock>
                    <TextBox 
                        Text="{Binding Name}" 
                        BorderBrush="{x:Null}" 
                        Style="{StaticResource TextBoxLeftStyleKey}" 
                        Grid.Row="0" 
                        Grid.Column="1">
                    </TextBox>
                </Grid>
                <Expander Header="Columns" IsExpanded="True">
                    <Grid RowDefinitions="Auto,Auto,*,Auto">
                        <Control Template="{StaticResource ColumnsMenuControlTemplateKey}" Grid.Row="0" Margin="2,0,2,0"/>
                        <Grid ColumnDefinitions="*,30" RowDefinitions="Auto,Auto,*" Height="Auto" VerticalAlignment="Top" Grid.Row="1">
                            <TextBlock 
                                Grid.Column="0" 
                                Grid.Row="0"
                                Margin="5,2,5,2" 
                                VerticalAlignment="Center" 
                                Text="Name">
                            </TextBlock>
                        </Grid>
                        <ItemsControl 
                            x:Name="columnsItemsControls"
                            VerticalContentAlignment="Stretch" 
                            VerticalAlignment="Stretch" 
                            Grid.Row="2"
                            ItemsSource="{Binding Columns}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid ColumnDefinitions="*,30" RowDefinitions="Auto,Auto,*" Height="Auto" VerticalAlignment="Top">
                                        <TextBox 
                                            Grid.Column="0" 
                                            Grid.Row="0"
                                            Margin="5,2,5,2" 
                                            VerticalAlignment="Center" 
                                            Text="{Binding Path=Name, Mode=TwoWay}">
                                        </TextBox>
                                        <Button 
                                            Grid.Column="1" 
                                            Grid.Row="0" 
                                            Margin="5,2,5,2" 
                                            VerticalAlignment="Center" 
                                            Content="-" 
                                            Command="{Binding DataContext.Commands.RemoveColumnCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                                            <Button.CommandParameter>
                                                <MultiBinding Converter="{StaticResource ColumnParameterConverter}">
                                                    <Binding Path="DataContext" ElementName="columnsItemsControls"/>
                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                                                </MultiBinding>
                                            </Button.CommandParameter>
                                        </Button>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </Expander>
                <Expander Header="Current Record" IsExpanded="True">
                    <ContentControl Content="{Binding CurrentRecord}"/>
                </Expander>
            </StackPanel>
            -->
        </DataTemplate> 
        <DataTemplate DataType="core:Data">
            <TabControl>
                <TabItem Header="Record" Classes="property">
                    <!--
                    <Grid RowDefinitions="Auto,*">
                        <Control Template="{StaticResource RecordMenuControlTemplateKey}" Grid.Row="0" Margin="2,0,2,0"/>
                        <ContentControl Content="{Binding Record}" Grid.Row="1"/>
                    </Grid>
                    -->
                    <ContentControl Content="{Binding Record}"/>
                </TabItem>
                <TabItem Header="Bindings" Classes="property">
                    <!-- 
                    <Grid ColumnDefinitions="40*,Auto,60*" RowDefinitions="Auto,Auto,*">
                        <Control Template="{StaticResource BindingsMenuControlTemplateKey}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Margin="2,0,2,0"/>
                        <GridSplitter 
                            Grid.Column="1" 
                            Grid.Row="1"
                            Grid.RowSpan="2"
                            Width="10" 
                            Background="Transparent" >
                        </GridSplitter>
                        <TextBlock 
                            Grid.Column="0" 
                            Grid.Row="1" 
                            Margin="5,2,0,2" 
                            VerticalAlignment="Center" 
                            Text="Property">
                        </TextBlock>
                        <TextBlock 
                            Grid.Column="2" 
                            Grid.Row="1" 
                            Margin="0,2,5,2" 
                            VerticalAlignment="Center" 
                            Text="Path">
                        </TextBlock>
                        <ItemsControl 
                            VerticalContentAlignment="Stretch" 
                            VerticalAlignment="Stretch" 
                            Grid.Column="0"
                            Grid.Row="2"
                            ItemsSource="{Binding Bindings}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Height="Auto" VerticalAlignment="Top">
                                        <TextBox 
                                            Margin="5,2,0,2" 
                                            VerticalAlignment="Center" 
                                            Text="{Binding Path=Property, Mode=TwoWay}">
                                        </TextBox>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <ItemsControl 
                            x:Name="bindingsItemsControls"
                            VerticalContentAlignment="Stretch" 
                            VerticalAlignment="Stretch" 
                            Grid.Column="2" 
                            Grid.Row="2"
                            ItemsSource="{Binding Bindings}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid ColumnDefinitions="*,30" Height="Auto" VerticalAlignment="Top">
                                        <TextBox 
                                            Grid.Column="0" 
                                            Margin="0,2,5,2" 
                                            VerticalAlignment="Center" 
                                            Text="{Binding Path=Path, Mode=TwoWay}">
                                        </TextBox>
                                        <Button 
                                            Grid.Column="1" 
                                            Margin="5,0,5,0" 
                                            VerticalAlignment="Center" 
                                            Content="-" 
                                            Command="{Binding DataContext.Commands.RemoveBindingCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                                            <Button.CommandParameter>
                                                <MultiBinding Converter="{StaticResource ShapeBindingParameterConverter}">
                                                    <Binding Path="DataContext" ElementName="bindingsItemsControls"/>
                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                                                </MultiBinding>
                                            </Button.CommandParameter>
                                        </Button>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                    -->
                </TabItem>
                <TabItem Header="Properties" Classes="property">
                    <!-- 
                    <Grid ColumnDefinitions="40*,Auto,60*" RowDefinitions="Auto,Auto,*">
                        <Control 
                            Template="{StaticResource PropertiesMenuControlTemplateKey}" 
                            Grid.Row="0" 
                            Grid.Column="0" 
                            Grid.ColumnSpan="3" 
                            Margin="2,0,2,0">
                        </Control>
                        <GridSplitter 
                            Grid.Column="1" 
                            Grid.Row="1"
                            Grid.RowSpan="2"
                            Width="10" 
                            Background="Transparent">
                        </GridSplitter>
                        <TextBlock 
                            Grid.Column="0" 
                            Grid.Row="1" 
                            Margin="5,2,0,2" 
                            VerticalAlignment="Center" 
                            Text="Name">
                        </TextBlock>
                        <TextBlock 
                            Grid.Column="2" 
                            Grid.Row="1" 
                            Margin="0,2,5,2" 
                            VerticalAlignment="Center"
                            Text="Value">
                        </TextBlock>
                        <ItemsControl 
                            VerticalContentAlignment="Stretch" 
                            VerticalAlignment="Stretch" 
                            Grid.Column="0" 
                            Grid.Row="2"
                            ItemsSource="{Binding Properties}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Height="Auto" VerticalAlignment="Top">
                                        <TextBox 
                                            Margin="5,2,0,2" 
                                            VerticalAlignment="Center" 
                                            Text="{Binding Path=Name, Mode=TwoWay}">
                                        </TextBox>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                        <ItemsControl 
                            x:Name="propertiesItemsControls"
                            VerticalContentAlignment="Stretch" 
                            VerticalAlignment="Stretch" 
                            Grid.Column="2" 
                            Grid.Row="2"
                            ItemsSource="{Binding Properties">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Height="Auto" VerticalAlignment="Top">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="30"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBox 
                                            Grid.Column="0" 
                                            Margin="0,2,5,2" 
                                            VerticalAlignment="Center" 
                                            Text="{Binding Path=Value, Mode=TwoWay}">
                                        </TextBox>
                                        <Button 
                                            Grid.Column="1" 
                                            Margin="5,0,5,0" 
                                            VerticalAlignment="Center" 
                                            Content="-" 
                                            Command="{Binding DataContext.Commands.RemovePropertyCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                                            <Button.CommandParameter>
                                                <MultiBinding Converter="{StaticResource ShapePropertyParameterConverter}">
                                                    <Binding Path="DataContext" ElementName="propertiesItemsControls"/>
                                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                                                </MultiBinding>
                                            </Button.CommandParameter>
                                        </Button>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                    -->
                </TabItem>
            </TabControl>
        </DataTemplate>       
        <!-- state -->
        <DataTemplate DataType="core:ShapeState">
            <StackPanel>
                <CheckBox Content="Default" IsChecked="{Binding Path=Default, Mode=TwoWay}"/>
                <CheckBox Content="Visible" IsChecked="{Binding Path=Visible, Mode=TwoWay}"/>
                <CheckBox Content="Printable" IsChecked="{Binding Path=Printable, Mode=TwoWay}"/>
                <CheckBox Content="Locked" IsChecked="{Binding Path=Locked, Mode=TwoWay}"/>
                <CheckBox Content="Connector" IsChecked="{Binding Path=Connector, Mode=TwoWay}"/>
                <CheckBox Content="None" IsChecked="{Binding Path=None, Mode=TwoWay}"/>
                <CheckBox Content="Standalone" IsChecked="{Binding Path=Standalone, Mode=TwoWay}"/>
                <CheckBox Content="Input" IsChecked="{Binding Path=Input, Mode=TwoWay}"/>
                <CheckBox Content="Output" IsChecked="{Binding Path=Output, Mode=TwoWay}"/>
            </StackPanel>
        </DataTemplate>
        <!-- shapes -->
        <DataTemplate DataType="core:XPoint">
            <TabControl>
                <TabItem Header="Point" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="X" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=X, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        <TextBlock Text="Y" Classes="left" Grid.Row="2" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Y, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="State" Classes="property">
                    <ContentControl Content="{Binding State}"/>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ContentControl Content="{Binding Data}"/>
                </TabItem>
                <TabItem Header="Shape" Classes="property">
                    <ContentControl Content="{Binding Shape}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XLine">
            <TabControl>
                <TabItem Header="Line" Classes="property">
                    <StackPanel>
                        <Grid RowDefinitions="Auto,Auto" ColumnDefinitions="Auto,*">
                            <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                            <TextBlock Text="IsStroked" Classes="left" Grid.Row="1" Grid.Column="0"/>
                            <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="Start" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding Start}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="End" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding End}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                    </StackPanel>
                </TabItem>
                <TabItem Header="State" Classes="property">
                    <ContentControl Content="{Binding State}"/>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ContentControl Content="{Binding Data}"/>
                </TabItem>
                <TabItem Header="Style" Classes="property">
                    <ContentControl Content="{Binding Style}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XText">
            <TabControl>
                <TabItem Header="Text" Classes="property">
                    <StackPanel>
                        <Grid RowDefinitions="Auto,Auto" ColumnDefinitions="Auto,*">
                            <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                            <TextBlock Text="Text" Classes="left" Grid.Row="1" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=Text, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="TopLeft" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding TopLeft}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="BottomRight" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding BottomRight}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                    </StackPanel>
                </TabItem>
                <TabItem Header="State" Classes="property">
                    <ContentControl Content="{Binding State}"/>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ContentControl Content="{Binding Data}"/>
                </TabItem>
                <TabItem Header="Style" Classes="property">
                    <ContentControl Content="{Binding Style}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XRectangle">
            <TabControl>
                <TabItem Header="Rectangle" Classes="property">
                    <StackPanel>
                        <Grid RowDefinitions="Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,*">
                            <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                            <TextBlock Text="IsStroked" Classes="left" Grid.Row="1" Grid.Column="0"/>
                            <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                            <TextBlock Text="IsFilled" Classes="left" Grid.Row="2" Grid.Column="0"/>
                            <CheckBox IsChecked="{Binding Path=IsFilled, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                            <TextBlock Text="Text" Classes="left" Grid.Row="3" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=Text, Mode=TwoWay}" Classes="left" Grid.Row="3" Grid.Column="1"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="TopLeft" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding TopLeft}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="BottomRight" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding BottomRight}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                    </StackPanel>
                </TabItem>
                <TabItem Header="Grid" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="IsGrid" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsGrid, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="OffsetX" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=OffsetX, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        <TextBlock Text="OffsetY" Classes="left" Grid.Row="2" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=OffsetY, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                        <TextBlock Text="CellWidth" Classes="left" Grid.Row="3" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=CellWidth, Mode=TwoWay}" Classes="left" Grid.Row="3" Grid.Column="1"/>
                        <TextBlock Text="CellHeight" Classes="left" Grid.Row="4" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=CellHeight, Mode=TwoWay}" Classes="left" Grid.Row="4" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="State" Classes="property">
                    <ContentControl Content="{Binding State}"/>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ContentControl Content="{Binding Data}"/>
                </TabItem>
                <TabItem Header="Style" Classes="property">
                    <ContentControl Content="{Binding Style}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XEllipse">
            <TabControl>
                <TabItem Header="Ellipse" Classes="property">
                    <StackPanel>
                        <Grid RowDefinitions="Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,*">
                            <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                            <TextBlock Text="IsStroked" Classes="left" Grid.Row="1" Grid.Column="0"/>
                            <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                            <TextBlock Text="IsFilled" Classes="left" Grid.Row="2" Grid.Column="0"/>
                            <CheckBox IsChecked="{Binding Path=IsFilled, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                            <TextBlock Text="Text" Classes="left" Grid.Row="3" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=Text, Mode=TwoWay}" Classes="left" Grid.Row="3" Grid.Column="1"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="TopLeft" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding TopLeft}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="BottomRight" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding BottomRight}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                    </StackPanel>
                </TabItem>
                <TabItem Header="State" Classes="property">
                    <ContentControl Content="{Binding State}"/>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ContentControl Content="{Binding Data}"/>
                </TabItem>
                <TabItem Header="Style" Classes="property">
                    <ContentControl Content="{Binding Style}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XImage">
            <TabControl>
                <TabItem Header="Image" Classes="property">
                    <StackPanel>
                        <Grid RowDefinitions="Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,*">
                            <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                            <TextBlock Text="IsStroked" Classes="left" Grid.Row="1" Grid.Column="0"/>
                            <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                            <TextBlock Text="IsFilled" Classes="left" Grid.Row="2" Grid.Column="0"/>
                            <CheckBox IsChecked="{Binding Path=IsFilled, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                            <TextBlock Text="Path" Classes="left" Grid.Row="3" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=Path, Mode=TwoWay}" Classes="left" Grid.Row="3" Grid.Column="1"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="TopLeft" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding TopLeft}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="BottomRight" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding BottomRight}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                    </StackPanel>
                </TabItem>
                <TabItem Header="State" Classes="property">
                    <ContentControl Content="{Binding State}"/>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ContentControl Content="{Binding Data}"/>
                </TabItem>
                <TabItem Header="Style" Classes="property">
                    <ContentControl Content="{Binding Style}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XArc">
            <TabControl>
                <TabItem Header="Arc" Classes="property">
                    <StackPanel>
                        <Grid RowDefinitions="Auto,Auto,Auto" ColumnDefinitions="Auto,*">
                            <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                            <TextBlock Text="IsStroked" Classes="left" Grid.Row="1" Grid.Column="0"/>
                            <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                            <TextBlock Text="IsFilled" Classes="left" Grid.Row="2" Grid.Column="0"/>
                            <CheckBox IsChecked="{Binding Path=IsFilled, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="Point1" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding Point1}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="Point2" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding Point2}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="Point3" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding Point3}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="Point4" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding Point4}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                    </StackPanel>
                </TabItem>
                <TabItem Header="State" Classes="property">
                    <ContentControl Content="{Binding State}"/>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ContentControl Content="{Binding Data}"/>
                </TabItem>
                <TabItem Header="Style" Classes="property">
                    <ContentControl Content="{Binding Style}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XBezier">
            <TabControl>
                <TabItem Header="Bezier" Classes="property">
                    <StackPanel>
                        <Grid RowDefinitions="Auto,Auto,Auto" ColumnDefinitions="Auto,*">
                            <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                            <TextBlock Text="IsStroked" Classes="left" Grid.Row="1" Grid.Column="0"/>
                            <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                            <TextBlock Text="IsFilled" Classes="left" Grid.Row="2" Grid.Column="0"/>
                            <CheckBox IsChecked="{Binding Path=IsFilled, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="Point1" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding Point1}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="Point2" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding Point2}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="Point3" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding Point3}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="Point4" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding Point4}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                    </StackPanel>
                </TabItem>
                <TabItem Header="State" Classes="property">
                    <ContentControl Content="{Binding State}"/>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ContentControl Content="{Binding Data}"/>
                </TabItem>
                <TabItem Header="Style" Classes="property">
                    <ContentControl Content="{Binding Style}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XQBezier">
            <TabControl>
                <TabItem Header="QBezier" Classes="property">
                    <StackPanel>
                        <Grid RowDefinitions="Auto,Auto,Auto" ColumnDefinitions="Auto,*">
                            <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                            <TextBlock Text="IsStroked" Classes="left" Grid.Row="1" Grid.Column="0"/>
                            <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                            <TextBlock Text="IsFilled" Classes="left" Grid.Row="2" Grid.Column="0"/>
                            <CheckBox IsChecked="{Binding Path=IsFilled, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="Point1" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding Point1}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="Point2" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding Point2}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="Point3" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <ContentControl Content="{Binding Point3}" Grid.Row="1" Grid.Column="0"/>
                        </Grid>
                    </StackPanel>
                </TabItem>
                <TabItem Header="State" Classes="property">
                    <ContentControl Content="{Binding State}"/>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ContentControl Content="{Binding Data}"/>
                </TabItem>
                <TabItem Header="Style" Classes="property">
                    <ContentControl Content="{Binding Style}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XGroup">
            <TabControl>
                <TabItem Header="Group" Classes="property">
                    <StackPanel>
                        <Grid RowDefinitions="Auto" ColumnDefinitions="Auto,*">
                            <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        </Grid>
                        <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                            <TextBlock Text="Properties" Classes="header" Grid.Row="0" Grid.Column="0"/>
                            <Grid RowDefinitions="Auto,*" ColumnDefinitions="50*,Auto,50*" Grid.Row="1" Grid.Column="0">
                                <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Width="10"/>
                                <TextBlock Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" Text="Name"/>
                                <TextBlock Grid.Column="2" Grid.Row="0" VerticalAlignment="Center" Text="Value"/>
                                <ItemsControl VerticalAlignment="Stretch" Grid.Column="0" Grid.Row="1" Items="{Binding ShapesProperties}">
                                    <ItemsControl.DataTemplates>
                                        <DataTemplate DataType="core:ShapeProperty">
                                            <Grid VerticalAlignment="Top">
                                                <TextBox VerticalAlignment="Center" Text="{Binding Path=Name, Mode=TwoWay}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.DataTemplates>
                                </ItemsControl>
                                <ItemsControl VerticalAlignment="Stretch" Grid.Column="2" Grid.Row="1" Items="{Binding ShapesProperties}">
                                    <ItemsControl.DataTemplates>
                                        <DataTemplate DataType="core:ShapeProperty">
                                            <Grid VerticalAlignment="Top">
                                                <TextBox VerticalAlignment="Center" Text="{Binding Path=Value, Mode=TwoWay}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.DataTemplates>
                                </ItemsControl>
                            </Grid>
                        </Grid>
                    </StackPanel>
                </TabItem>
                <TabItem Header="State" Classes="property">
                    <ContentControl Content="{Binding State}"/>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ContentControl Content="{Binding Data}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XPath">
            <TabControl>
                <TabItem Header="Path" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="IsStroked" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        <TextBlock Text="IsFilled" Classes="left" Grid.Row="2" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsFilled, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Geometry" Classes="property">
                    <ContentControl Content="{Binding Geometry}"/>
                </TabItem>
                <TabItem Header="State" Classes="property">
                    <ContentControl Content="{Binding State}"/>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ContentControl Content="{Binding Data}"/>
                </TabItem>
                <TabItem Header="Style" Classes="property">
                    <ContentControl Content="{Binding Style}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <!-- path -->  
        <DataTemplate DataType="core:XPathSize">
            <Grid RowDefinitions="Auto,Auto" ColumnDefinitions="Auto,*">
                <TextBlock Text="Width" Classes="left" Grid.Row="0" Grid.Column="0"/>
                <TextBox Text="{Binding Path=Width, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                <TextBlock Text="Height" Classes="left" Grid.Row="1" Grid.Column="0"/>
                <TextBox Text="{Binding Path=Height, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="core:XArcSegment">
            <TabControl>
                <TabItem Header="ArcSegment" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="IsStroked" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="IsSmoothJoin" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsSmoothJoin, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        <TextBlock Text="RotationAngle" Classes="left" Grid.Row="2" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=RotationAngle, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                        <TextBlock Text="IsLargeArc" Classes="left" Grid.Row="3" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsLargeArc, Mode=TwoWay}" Classes="left" Grid.Row="3" Grid.Column="1"/>
                        <TextBlock Text="SweepDirection" Classes="left" Grid.Row="4" Grid.Column="0"/>
                        <DropDown Items="{Binding XSweepDirectionValues}" SelectedItem="{Binding Path=SweepDirection, Mode=TwoWay}" Classes="default" Grid.Row="4" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Point" Classes="property">
                    <ContentControl Content="{Binding Point}"/>
                </TabItem>
                <TabItem Header="Size" Classes="property">
                    <ContentControl Content="{Binding Size}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XBezierSegment">
            <TabControl>
                <TabItem Header="BezierSegment" Classes="property">
                    <Grid RowDefinitions="Auto,Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="IsStroked" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="IsSmoothJoin" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsSmoothJoin, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Point1" Classes="property">
                    <ContentControl Content="{Binding Point1}"/>
                </TabItem>
                <TabItem Header="Point2" Classes="property">
                    <ContentControl Content="{Binding Point2}"/>
                </TabItem>
                <TabItem Header="Point3" Classes="property">
                    <ContentControl Content="{Binding Point3}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XLineSegment">
            <TabControl>
                <TabItem Header="LineSegment" Classes="property">
                    <Grid RowDefinitions="Auto,Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="IsStroked" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="IsSmoothJoin" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsSmoothJoin, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Point" Classes="property">
                    <ContentControl Content="{Binding Point}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
    </Window.DataTemplates>
    <Grid RowDefinitions="Auto,*" ColumnDefinitions="150,*,230">
        <Menu Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3">
            <MenuItem Header="_File">
                <MenuItem Header="_New" HotKey="Ctrl+N" Command="{Binding Commands.NewCommand}" />
                <!--<Separator/>-->
                <MenuItem Header="_Open" HotKey="Ctrl+O" Command="{Binding Commands.OpenCommand}" />
                <!--<Separator/>-->
                <MenuItem Header="_Close" HotKey="Ctrl+F4" Command="{Binding Commands.CloseCommand}" />
                <!--<Separator/>-->
                <MenuItem Header="_Save" HotKey="Ctrl+S" Command="{Binding Commands.SaveCommand}" />
                <MenuItem Header="Save _As" HotKey="Ctrl+Shift+S" Command="{Binding Commands.SaveAsCommand}" />
                <!--<Separator/>-->
                <MenuItem Header="_Export" HotKey="Ctrl+E" Command="{Binding Commands.ExportCommand}" />
                <!--<Separator/>-->
                <MenuItem Header="I_mport">
                    <MenuItem
                        Header="_Style..."
                        Command="{Binding Commands.ImportStyleCommand}"
                        CommandParameter="{Binding Editor.Project.CurrentStyleLibrary}">
                    </MenuItem>
                    <MenuItem
                        Header="S_tyles..."
                        Command="{Binding Commands.ImportStylesCommand}"
                        CommandParameter="{Binding Editor.Project.CurrentStyleLibrary}">
                    </MenuItem>
                    <!--<Separator/>-->
                    <MenuItem
                        Header="St_yle Library..."
                        Command="{Binding Commands.ImportStyleLibraryCommand}"
                        CommandParameter="{Binding Editor.Project}">
                    </MenuItem>
                    <MenuItem
                        Header="Sty_le Libraries..."
                        Command="{Binding Commands.ImportStyleLibrariesCommand}"
                        CommandParameter="{Binding Editor.Project}">
                    </MenuItem>
                    <!--<Separator/>-->
                    <MenuItem
                        Header="_Group..."
                        Command="{Binding Commands.ImportGroupCommand}"
                        CommandParameter="{Binding Editor.Project.CurrentGroupLibrary}">
                    </MenuItem>
                    <MenuItem
                        Header="G_roups..."
                        Command="{Binding Commands.ImportGroupsCommand}"
                        CommandParameter="{Binding Editor.Project.CurrentGroupLibrary}">
                    </MenuItem>
                    <!--<Separator/>-->
                    <MenuItem
                        Header="Gr_oup Library..."
                        Command="{Binding Commands.ImportGroupLibraryCommand}"
                        CommandParameter="{Binding Editor.Project}">
                    </MenuItem>
                    <MenuItem
                        Header="Gro_up Libraries..."
                        Command="{Binding Commands.ImportGroupLibrariesCommand}"
                        CommandParameter="{Binding Editor.Project}">
                    </MenuItem>
                    <!--<Separator/>-->
                    <MenuItem
                        Header="_Template..."
                        Command="{Binding Commands.ImportTemplateCommand}"
                        CommandParameter="{Binding Editor.Project}">
                    </MenuItem>
                    <MenuItem
                        Header="T_emplates..."
                        Command="{Binding Commands.ImportTemplatesCommand}"
                        CommandParameter="{Binding Editor.Project}">
                    </MenuItem>
                </MenuItem>
                <!--<Separator/>-->
                <MenuItem Header="Expor_t">
                    <MenuItem
                        Header="_Style..."
                        Command="{Binding Commands.ExportStyleCommand}"
                        CommandParameter="{Binding Editor.Project.CurrentStyleLibrary.CurrentStyle}">
                    </MenuItem>
                    <MenuItem
                        Header="S_tyles..."
                        Command="{Binding Commands.ExportStylesCommand}"
                        CommandParameter="{Binding Editor.Project.CurrentStyleLibrary}">
                    </MenuItem>
                    <!--<Separator/>-->
                    <MenuItem
                        Header="St_yle Library..."
                        Command="{Binding Commands.ExportStyleLibraryCommand}"
                        CommandParameter="{Binding Editor.Project.CurrentStyleLibrary}">
                    </MenuItem>
                    <MenuItem
                        Header="Sty_le Libraries..."
                        Command="{Binding Commands.ExportStyleLibrariesCommand}"
                        CommandParameter="{Binding Editor.Project}">
                    </MenuItem>
                    <!--<Separator/>-->
                    <MenuItem
                        Header="_Group..."
                        Command="{Binding Commands.ExportGroupCommand}"
                        CommandParameter="{Binding Editor.Project.CurrentGroupLibrary.CurrentGroup}">
                    </MenuItem>
                    <MenuItem
                        Header="G_roups..."
                        Command="{Binding Commands.ExportGroupsCommand}"
                        CommandParameter="{Binding Editor.Project.CurrentGroupLibrary}">
                    </MenuItem>
                    <!--<Separator/>-->
                    <MenuItem
                        Header="Gr_oup Library..."
                        Command="{Binding Commands.ExportGroupLibraryCommand}"
                        CommandParameter="{Binding Editor.Project.CurrentGroupLibrary}">
                    </MenuItem>
                    <MenuItem
                        Header="Gro_up Libraries..."
                        Command="{Binding Commands.ExportGroupLibrariesCommand}"
                        CommandParameter="{Binding Editor.Project}">
                    </MenuItem>
                    <!--<Separator/>-->
                    <MenuItem
                        Header="_Template..."
                        Command="{Binding Commands.ExportTemplateCommand}"
                        CommandParameter="{Binding Editor.Project.CurrentTemplate}">
                    </MenuItem>
                    <MenuItem
                        Header="T_emplates..."
                        Command="{Binding Commands.ExportTemplatesCommand}"
                        CommandParameter="{Binding Editor.Project}">
                    </MenuItem>
                </MenuItem>
                <!--<Separator/>-->
                <MenuItem Header="_Recent" Items="{Binding RecentProjects}">
                    <MenuItem.DataTemplates>
                        <DataTemplate DataType="core:RecentProject">
                            <TextBlock Text="{Binding Name}" ToolTip.Tip="{Binding Path=Path}"/>
                        </DataTemplate>
                    </MenuItem.DataTemplates>
                    <!--
                    <MenuItem.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Command" Value="{Binding DataContext.Commands.OpenCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            <Setter Property="CommandParameter" Value="{Binding Path}"/>
                        </Style>
                    </MenuItem.ItemContainerStyle>
                    -->
                </MenuItem>
                <!--<Separator/>-->
                <MenuItem Header="E_xit" HotKey="Alt+F4" Command="{Binding Commands.ExitCommand}" />
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="_Undo" HotKey="Ctrl+Z" Command="{Binding Commands.UndoCommand}" />
                <MenuItem Header="_Redo" HotKey="Ctrl+Y" Command="{Binding Commands.RedoCommand}" />
                <!--<Separator/>-->
                <MenuItem Header="Cu_t" HotKey="Ctrl+X" Command="{Binding Commands.CutCommand}" />
                <MenuItem Header="_Copy" HotKey="Ctrl+C" Command="{Binding Commands.CopyCommand}" />
                <MenuItem Header="_Paste" HotKey="Ctrl+V" Command="{Binding Commands.PasteCommand}" />
                <MenuItem Header="_Delete" HotKey="Delete" Command="{Binding Commands.DeleteCommand}" />
                <!--<Separator/>-->
                <MenuItem Header="Select _All" HotKey="Ctrl+A" Command="{Binding Commands.SelectAllCommand}" />
                <MenuItem Header="De_select All" HotKey="Escape" Command="{Binding Commands.DeselectAllCommand}" />
                <!--<Separator/>-->
                <MenuItem Header="Cl_ear All" Command="{Binding Commands.ClearAllCommand}" />
                <!--<Separator/>-->
                <MenuItem Header="_Group" HotKey="Ctrl+G" Command="{Binding Commands.GroupCommand}" />
                <MenuItem Header="U_ngroup" HotKey="Ctrl+U" Command="{Binding Commands.UngroupCommand}" />
                <!--<Separator/>-->
                <MenuItem Header="_Order">
                    <MenuItem Header="Send to _Back" HotKey="Shift+-" Command="{Binding Commands.SendToBackCommand}" />
                    <MenuItem Header="Send Ba_ckward" HotKey="-" Command="{Binding Commands.SendBackwardCommand}" />
                    <!--<Separator/>-->
                    <MenuItem Header="Bring Fo_rward" HotKey="+" Command="{Binding Commands.BringForwardCommand}" />
                    <MenuItem Header="Bring to _Front" HotKey="Shift++" Command="{Binding Commands.BringToFrontCommand}" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_View">
                <MenuItem Header="_Zoom">
                    <MenuItem Header="_Reset Zoom" HotKey="Z" Command="{Binding Commands.ZoomResetCommand}" />
                    <!--<Separator/>-->
                    <MenuItem Header="Zoom to _Extent" HotKey="X" Command="{Binding Commands.ZoomExtentCommand}" />
                </MenuItem>
            </MenuItem>
            <MenuItem Header="_Tool">
                <MenuItem Header="_None" HotKey="N" Command="{Binding Commands.ToolNoneCommand}" />
                <!--<Separator/>-->
                <MenuItem Header="_Selection" HotKey="S" Command="{Binding Commands.ToolSelectionCommand}" />
                <!--<Separator/>-->
                <MenuItem Header="_Point" HotKey="P" Command="{Binding Commands.ToolPointCommand}" />
                <!--<Separator/>-->
                <MenuItem Header="_Line" HotKey="L" Command="{Binding Commands.ToolLineCommand}" />
                <MenuItem Header="_Arc" HotKey="A" Command="{Binding Commands.ToolArcCommand}" />
                <MenuItem Header="_Bezier" HotKey="B" Command="{Binding Commands.ToolBezierCommand}" />
                <MenuItem Header="_QBezier" HotKey="Q" Command="{Binding Commands.ToolQBezierCommand}" />
                <!--<Separator/>-->
                <MenuItem Header="Pat_h" HotKey="H" Command="{Binding Commands.ToolPathCommand}" />
                <MenuItem Header="Path T_ool">
                    <MenuItem Header="_Line" Command="{Binding Commands.ToolLineCommand}" />
                    <MenuItem Header="_Arc" Command="{Binding Commands.ToolArcCommand}" />
                    <MenuItem Header="_Bezier" Command="{Binding Commands.ToolBezierCommand}" />
                    <MenuItem Header="_QBezier" Command="{Binding Commands.ToolQBezierCommand}" />
                    <!--<Separator/>-->
                    <MenuItem Header="_Move" HotKey="M" Command="{Binding Commands.ToolMoveCommand}" />
                </MenuItem>
                <!--<Separator/>-->
                <MenuItem Header="_Rectangle" HotKey="R" Command="{Binding Commands.ToolRectangleCommand}" />
                <MenuItem Header="_Ellipse" HotKey="E" Command="{Binding Commands.ToolEllipseCommand}" />
                <!--<Separator/>-->
                <MenuItem Header="_Text" HotKey="T" Command="{Binding Commands.ToolTextCommand}" />
                <!--<Separator/>-->
                <MenuItem Header="_Image" HotKey="I" Command="{Binding Commands.ToolImageCommand}" />
            </MenuItem>
            <MenuItem Header="_Data">
                <MenuItem Header="_Import..." Command="{Binding Commands.ImportDataCommand}"/>
                <!--<Separator/>-->
                <MenuItem Header="_Export..." Command="{Binding Commands.ExportDataCommand}"/>
                <!--<Separator/>-->
                <MenuItem Header="_Update..." Command="{Binding Commands.UpdateDataCommand}"/>
            </MenuItem>
            <MenuItem Header="Te_mplate" Items="{Binding Editor.Project.Templates}">
                <MenuItem.DataTemplates>
                    <DataTemplate DataType="core:Container">
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </MenuItem.DataTemplates>
            </MenuItem>
            <MenuItem Header="_Options">
                <MenuItem Header="Default is Stro_ked" HotKey="K" Command="{Binding Commands.DefaultIsStrokedCommand}" />
                <MenuItem Header="Default is _Filled" HotKey="F" Command="{Binding Commands.DefaultIsFilledCommand}" />
                <!--<Separator/>-->
                <MenuItem Header="Default is Close_d" HotKey="D" Command="{Binding Commands.DefaultIsClosedCommand}" />
                <MenuItem Header="Default is Smooth _Join" HotKey="J" Command="{Binding Commands.DefaultIsSmoothJoinCommand}" />
                <!--<Separator/>-->
                <MenuItem Header="Snap to _Grid" HotKey="G" Command="{Binding Commands.SnapToGridCommand}" />
                <!--<Separator/>-->
                <MenuItem Header="Try To _Connect" HotKey="C" Command="{Binding Commands.TryToConnectCommand}" />
            </MenuItem>
        </Menu>
        <Grid RowDefinitions="40*,30*,30*" Grid.Row="1" Grid.Column="0">
            <TreeView Items="{Binding Editor.Project.Documents}" Grid.Row="0">
                <TreeView.DataTemplates>
                    <TreeDataTemplate DataType="core:Document" ItemsSource="{Binding Containers}">
                        <TextBlock Text="{Binding Name}" />
                    </TreeDataTemplate>
                    <DataTemplate DataType="core:Container">
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </TreeView.DataTemplates>
            </TreeView>
            <ListBox Items="{Binding Editor.Project.Documents}" SelectedItem="{Binding Path=Editor.Project.CurrentDocument, Mode=TwoWay}" Grid.Row="1">
                <ListBox.DataTemplates>
                    <DataTemplate DataType="core:Document">
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </ListBox.DataTemplates>
            </ListBox>
            <ListBox Items="{Binding Editor.Project.CurrentDocument.Containers}" SelectedItem="{Binding Path=Editor.Project.CurrentContainer, Mode=TwoWay}" Grid.Row="2">
                <ListBox.DataTemplates>
                    <DataTemplate DataType="core:Container">
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </ListBox.DataTemplates>
            </ListBox>
        </Grid>
        <Grid Grid.Row="1" Grid.Column="1" ClipToBounds="True">
            <local:Drawable>
                <!--
                <local:Drawable.KeyBindings>
                    <KeyBinding Gesture="N" Command="{Binding Commands.ToolNoneCommand}"/>
                </local:Drawable.KeyBindings>
                -->
            </local:Drawable>
        </Grid>
        <Grid RowDefinitions="Auto,50*,50*" Grid.Row="1" Grid.Column="2">
            <DropDown Items="{Binding Editor.Project.StyleLibraries}" SelectedItem="{Binding Path=Editor.Project.CurrentStyleLibrary, Mode=TwoWay}" Grid.Row="0">
                <DropDown.DataTemplates>
                    <DataTemplate DataType="core:StyleLibrary">
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </DropDown.DataTemplates>
            </DropDown>
            <ListBox Items="{Binding Editor.Project.CurrentStyleLibrary.Styles}" SelectedItem="{Binding Path=Editor.Project.CurrentStyleLibrary.CurrentStyle, Mode=TwoWay}" Grid.Row="1">
                <ListBox.DataTemplates>
                    <DataTemplate DataType="core:ShapeStyle">
                        <TextBlock Text="{Binding Name}" />
                    </DataTemplate>
                </ListBox.DataTemplates>
            </ListBox>
            <ScrollViewer Grid.Row="2">
                <ContentControl Content="{Binding Editor.Project.CurrentContainer.CurrentShape}"/>
            </ScrollViewer>
        </Grid>
    </Grid>
</Window>
