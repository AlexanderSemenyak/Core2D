<!-- Copyright (c) Wiesław Šoltés. All rights reserved. -->
<!-- Licensed under the MIT license. See LICENSE file in the project root for full license information. -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:sys="clr-namespace:System;assembly=mscorlib" 
                    xmlns:core="clr-namespace:Core2D;assembly=Core2D" 
                    xmlns:converters="clr-namespace:Core2D.UI.Wpf.Converters" 
                    xmlns:controls="clr-namespace:Core2D.UI.Wpf.Controls" 
                    xmlns:p="clr-namespace:Core2D.UI.Wpf.Properties">
    <!-- Converters -->
    <converters:ArgbColorToBrushConverter x:Key="ArgbColorToBrushConverter"/>
    <converters:ArgbColorToBrushMultiConverter x:Key="ArgbColorToBrushMultiConverter"/>
    <converters:BooleanToStringConverter x:Key="BooleanToStarConverter" FalseValue="" TrueValue="*"/>
    <converters:EnumToBooleanConverter x:Key="EnumToBooleanConverter"/>
    <converters:ObjectEqualityConverter x:Key="ObjectEqualityConverter"/>
    <!-- Brushes -->
    <SolidColorBrush x:Key="BackgroundColor" Color="White"/>
    <DrawingBrush x:Key="CheckerBoard" Viewport="0,0,20,20" ViewportUnits="Absolute" Stretch="None" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="DarkGray">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0,10,10"/>
                            <RectangleGeometry Rect="10,10,10,10"/>
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="LightGray">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="10,0,10,10"/>
                            <RectangleGeometry Rect="0,10,10,10"/>
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <!-- Menus -->
    <ControlTemplate x:Key="PropertiesMenuControlTemplateKey">
        <Menu Background="Transparent" HorizontalAlignment="Right">
            <MenuItem Command="{x:Static core:Commands.AddPropertyCommand}" CommandParameter="{Binding}" Header="+"/>
        </Menu>
    </ControlTemplate>
    <ControlTemplate x:Key="RecordMenuControlTemplateKey">
        <Menu Background="Transparent" HorizontalAlignment="Right">
            <MenuItem Command="{x:Static core:Commands.ResetRecordCommand}" CommandParameter="{Binding}" Header="X"/>
        </Menu>
    </ControlTemplate>
    <ControlTemplate x:Key="ColumnsMenuControlTemplateKey">
        <Menu Background="Transparent" HorizontalAlignment="Right">
            <MenuItem Command="{x:Static core:Commands.AddColumnCommand}" CommandParameter="{Binding}" Header="+"/>
        </Menu>
    </ControlTemplate>
    <!-- Context Menus -->
    <ContextMenu x:Key="ContainerContextMenuKey" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
        <MenuItem Header="Te_mplate" Tag="{Binding Path=DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" ItemsSource="{Binding Editor.Project.Templates}">
            <MenuItem.ItemContainerStyle>
                <Style TargetType="MenuItem">
                    <Setter Property="Header" Value="{Binding Name}"/>
                    <Setter Property="Command" Value="{x:Static core:Commands.ApplyTemplateCommand}"/>
                    <Setter Property="CommandParameter" Value="{Binding}"/>
                    <Setter Property="IsCheckable" Value="True"/>
                    <Setter Property="IsChecked" Value="False"/>
                    <Style.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource ObjectEqualityConverter}">
                                    <Binding Path="Tag.Editor.Project.CurrentContainer.Template" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}"/>
                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter Property="IsChecked" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </MenuItem.ItemContainerStyle>
        </MenuItem>
        <Separator/>
        <MenuItem Header="Insert Container Bef_ore" InputGestureText="" Command="{x:Static core:Commands.InsertContainerBeforeCommand}" CommandParameter="{Binding}"/>
        <MenuItem Header="Insert Container Aft_er" InputGestureText="" Command="{x:Static core:Commands.InsertContainerAfterCommand}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="Cu_t" InputGestureText="Ctrl+X" Command="{x:Static core:Commands.CutCommand}" CommandParameter="{Binding}"/>
        <MenuItem Header="_Copy" InputGestureText="Ctrl+C" Command="{x:Static core:Commands.CopyCommand}" CommandParameter="{Binding}"/>
        <MenuItem Header="_Paste" InputGestureText="Ctrl+V" Command="{x:Static core:Commands.PasteCommand}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="_Delete" InputGestureText="Del" Command="{x:Static core:Commands.DeleteCommand}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="E_xport" InputGestureText="Ctrl+E" Command="{x:Static core:Commands.ExportCommand}" CommandParameter="{Binding}"/>
    </ContextMenu>
    <ContextMenu x:Key="DocumentContextMenuKey" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
        <MenuItem Header="_Add Container" InputGestureText="Ctrl+N" Command="{x:Static core:Commands.AddContainerCommand}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="Insert Document Bef_ore" InputGestureText="" Command="{x:Static core:Commands.InsertDocumentBeforeCommand}" CommandParameter="{Binding}"/>
        <MenuItem Header="Insert Document Aft_er" InputGestureText="" Command="{x:Static core:Commands.InsertDocumentAfterCommand}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="Cu_t" InputGestureText="Ctrl+X" Command="{x:Static core:Commands.CutCommand}" CommandParameter="{Binding}"/>
        <MenuItem Header="_Copy" InputGestureText="Ctrl+C" Command="{x:Static core:Commands.CopyCommand}" CommandParameter="{Binding}"/>
        <MenuItem Header="_Paste" InputGestureText="Ctrl+V" Command="{x:Static core:Commands.PasteCommand}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="_Delete" InputGestureText="Del" Command="{x:Static core:Commands.DeleteCommand}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="E_xport" InputGestureText="Ctrl+E" Command="{x:Static core:Commands.ExportCommand}" CommandParameter="{Binding}"/>
    </ContextMenu>
    <ContextMenu x:Key="PojectContextMenuKey" DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
        <MenuItem Header="_Add Document" InputGestureText="Ctrl+N" Command="{x:Static core:Commands.AddDocumentCommand}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="E_xport" InputGestureText="Ctrl+E" Command="{x:Static core:Commands.ExportCommand}" CommandParameter="{Binding}"/>
    </ContextMenu>
    <!-- Styles --> 
    <Style x:Key="TextBlockLeftStyleKey" TargetType="TextBlock">
        <Setter Property="Margin" Value="5,2,5,2"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="TextBoxLeftStyleKey" TargetType="TextBox">
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Margin" Value="5,2,5,2"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="TextBlockCenterStyleKey" TargetType="TextBlock">
        <Setter Property="Margin" Value="5,2,5,2"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="TextBoxCenterStyleKey" TargetType="TextBox">
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Margin" Value="5,2,5,2"/>
        <Setter Property="TextAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="CheckBoxStyleKey" TargetType="CheckBox">
        <Setter Property="Margin" Value="5,2,5,2"/>
    </Style>
    <Style x:Key="ComboBoxStyleKey" TargetType="ComboBox">
        <Setter Property="Margin" Value="5,2,5,2"/>
    </Style>
    <Style x:Key="SliderStyleKey" TargetType="Slider">
        <Setter Property="Margin" Value="5,2,5,2"/>
    </Style>
    <!-- Style -->
    <DataTemplate DataType="{x:Type core:ArgbColor}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="40"/>
            </Grid.ColumnDefinitions>
            <Rectangle Fill="{StaticResource CheckerBoard}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Margin="5,2,5,2" Height="20"/>
            <Rectangle Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Margin="5,2,5,2" Height="20">
                <Rectangle.Fill>
                    <MultiBinding Converter="{StaticResource ArgbColorToBrushMultiConverter}">
                        <Binding Path="DataContext.A" RelativeSource="{RelativeSource Self}"/>
                        <Binding Path="DataContext.R" RelativeSource="{RelativeSource Self}"/>
                        <Binding Path="DataContext.G" RelativeSource="{RelativeSource Self}"/>
                        <Binding Path="DataContext.B" RelativeSource="{RelativeSource Self}"/>
                    </MultiBinding>
                </Rectangle.Fill>
            </Rectangle>
            <TextBlock Text="A" Style="{StaticResource TextBlockCenterStyleKey}" Grid.Row="1" Grid.Column="0"/>
            <TextBlock Text="R" Style="{StaticResource TextBlockCenterStyleKey}" Grid.Row="2" Grid.Column="0"/>
            <TextBlock Text="G" Style="{StaticResource TextBlockCenterStyleKey}" Grid.Row="3" Grid.Column="0"/>
            <TextBlock Text="B" Style="{StaticResource TextBlockCenterStyleKey}" Grid.Row="4" Grid.Column="0"/>
            <Slider Value="{Binding A}" Style="{StaticResource SliderStyleKey}" Minimum="0" Maximum="255" TickFrequency="1" IsSnapToTickEnabled="True" Grid.Row="1" Grid.Column="1"/>
            <Slider Value="{Binding R}" Style="{StaticResource SliderStyleKey}" Minimum="0" Maximum="255" TickFrequency="1" IsSnapToTickEnabled="True" Grid.Row="2" Grid.Column="1"/>
            <Slider Value="{Binding G}" Style="{StaticResource SliderStyleKey}" Minimum="0" Maximum="255" TickFrequency="1" IsSnapToTickEnabled="True" Grid.Row="3" Grid.Column="1"/>
            <Slider Value="{Binding B}" Style="{StaticResource SliderStyleKey}" Minimum="0" Maximum="255" TickFrequency="1" IsSnapToTickEnabled="True" Grid.Row="4" Grid.Column="1"/>
            <TextBox Text="{Binding A, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxCenterStyleKey}" Grid.Row="1" Grid.Column="2"/>
            <TextBox Text="{Binding R, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxCenterStyleKey}" Grid.Row="2" Grid.Column="2"/>
            <TextBox Text="{Binding G, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxCenterStyleKey}" Grid.Row="3" Grid.Column="2"/>
            <TextBox Text="{Binding B, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxCenterStyleKey}" Grid.Row="4" Grid.Column="2"/>
        </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:ArrowStyle}">
        <TabControl>
            <TabItem Header="Arrow">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Arrow Type" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                    <TextBlock Text="IsStroked" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="1" Grid.Column="0"/>
                    <TextBlock Text="IsFilled" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="2" Grid.Column="0"/>
                    <TextBlock Text="RadiusX" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="3" Grid.Column="0"/>
                    <TextBlock Text="RadiusY" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="4" Grid.Column="0"/>
                    <ComboBox ItemsSource="{x:Static core:Enums.ArrowTypeValues}" SelectedItem="{Binding ArrowType}" Style="{StaticResource ComboBoxStyleKey}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"/>
                    <CheckBox Content="" IsChecked="{Binding IsStroked}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                    <CheckBox Content="" IsChecked="{Binding IsFilled}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"/>
                    <Slider Value="{Binding RadiusX}" Style="{StaticResource SliderStyleKey}" Minimum="0" Maximum="15" TickFrequency="0.1" SmallChange="0.1" LargeChange="1" IsSnapToTickEnabled="True" Grid.Row="3" Grid.Column="1"/>
                    <Slider Value="{Binding RadiusY}" Style="{StaticResource SliderStyleKey}" Minimum="0" Maximum="15" TickFrequency="0.1" SmallChange="0.1" LargeChange="1" IsSnapToTickEnabled="True" Grid.Row="4" Grid.Column="1"/>
                    <TextBox Text="{Binding RadiusX, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxCenterStyleKey}" Grid.Row="3" Grid.Column="2"/>
                    <TextBox Text="{Binding RadiusY, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxCenterStyleKey}" Grid.Row="4" Grid.Column="2"/>
                </Grid>
            </TabItem>
            <TabItem Header="Style">
                <StackPanel>
                    <Expander Header="Stroke" IsExpanded="False">
                        <ContentControl Content="{Binding Stroke}"/>
                    </Expander>
                    <Expander Header="Fill" IsExpanded="False">
                        <ContentControl Content="{Binding Fill}"/>
                    </Expander>
                    <Expander Header="Thickness" IsExpanded="False">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="40"/>
                            </Grid.ColumnDefinitions>
                            <Slider Value="{Binding Thickness}" Style="{StaticResource SliderStyleKey}" Minimum="0" Maximum="50" TickFrequency="0.1" SmallChange="0.1" LargeChange="1" IsSnapToTickEnabled="True" Grid.Row="0" Grid.Column="0"/>
                            <TextBox Text="{Binding Thickness, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxCenterStyleKey}" Grid.Row="0" Grid.Column="1"/>
                        </Grid>
                    </Expander>
                    <Expander Header="Cap" IsExpanded="False">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="90"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="40"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Line Cap" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                            <ComboBox ItemsSource="{x:Static core:Enums.LineCapValues}" SelectedItem="{Binding LineCap}" Style="{StaticResource ComboBoxStyleKey}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"/>
                        </Grid>
                    </Expander>
                    <Expander Header="Dash" IsExpanded="False">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="90"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="40"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Dashes" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                            <TextBlock Text="Dash Offset" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="1" Grid.Column="0"/>
                            <TextBox Text="{Binding Dashes}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"/>
                            <Slider Value="{Binding DashOffset}" Style="{StaticResource SliderStyleKey}" Minimum="0" Maximum="15" TickFrequency="0.1" SmallChange="0.1" LargeChange="1" IsSnapToTickEnabled="True" Grid.Row="1" Grid.Column="1"/>
                            <TextBox Text="{Binding DashOffset, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxCenterStyleKey}" Grid.Row="1" Grid.Column="2"/>
                        </Grid>
                    </Expander>
                </StackPanel>
            </TabItem>
        </TabControl>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:FontStyle}">
        <StackPanel Margin="5,2,5,2">
            <CheckBox Content="Regular" Margin="1" IsChecked="{Binding Regular}"/>
            <CheckBox Content="Bold" Margin="1" IsChecked="{Binding Bold}"/>
            <CheckBox Content="Italic" Margin="1" IsChecked="{Binding Italic}"/>
            <CheckBox Content="Underline" Margin="1" IsChecked="{Binding Underline}"/>
            <CheckBox Content="Strikeout" Margin="1" IsChecked="{Binding Strikeout}"/>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:TextStyle}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="90"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="40"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="FontName" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
            <TextBlock Text="FontFile" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="1" Grid.Column="0"/>
            <TextBlock Text="FontSize" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="2" Grid.Column="0"/>
            <TextBlock Text="FontStyle" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="3" Grid.Column="0"/>
            <TextBlock Text="HAlignment" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="4" Grid.Column="0"/>
            <TextBlock Text="VAlignment" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="5" Grid.Column="0"/>
            <Slider Value="{Binding FontSize}" Style="{StaticResource SliderStyleKey}" Minimum="0" Maximum="72" TickFrequency="1" IsSnapToTickEnabled="True" Grid.Row="2" Grid.Column="1"/>
            <TextBox Text="{Binding FontName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"/>
            <TextBox Text="{Binding FontFile, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
            <TextBox Text="{Binding FontSize, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxCenterStyleKey}" Grid.Row="2" Grid.Column="2"/>
            <ContentControl Content="{Binding FontStyle}" Margin="5,2,5,2" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2"/>
            <ComboBox ItemsSource="{x:Static core:Enums.TextHAlignmentValues}" SelectedItem="{Binding TextHAlignment}" Style="{StaticResource ComboBoxStyleKey}" Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2"/>
            <ComboBox ItemsSource="{x:Static core:Enums.TextVAlignmentValues}" SelectedItem="{Binding TextVAlignment}" Style="{StaticResource ComboBoxStyleKey}" Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2"/>
        </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:LineStyle}">
        <TabControl>
            <TabItem Header="Flags">
                <StackPanel Margin="5,2,5,2" DataContext="{Binding FixedLength}">
                    <CheckBox Content="Disabled" Margin="1" IsChecked="{Binding Disabled}"/>
                    <CheckBox Content="Start" Margin="1" IsChecked="{Binding Start}"/>
                    <CheckBox Content="End" Margin="1" IsChecked="{Binding End}"/>
                    <CheckBox Content="Vertical" Margin="1" IsChecked="{Binding Vertical}"/>
                    <CheckBox Content="Horizontal" Margin="1" IsChecked="{Binding Horizontal}"/>
                    <CheckBox Content="All" Margin="1" IsChecked="{Binding All}"/>
                </StackPanel>
            </TabItem>
            <TabItem Header="Length">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <Slider Value="{Binding FixedLength.Length}" Style="{StaticResource SliderStyleKey}" Minimum="0" Maximum="30" TickFrequency="0.1" SmallChange="0.1" LargeChange="1" IsSnapToTickEnabled="True" Grid.Column="0"/>
                    <TextBox Text="{Binding FixedLength.Length, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxCenterStyleKey}" Grid.Column="1"/>
                </Grid>
            </TabItem>
            <TabItem Header="StartTrigger">
                <ContentControl Content="{Binding FixedLength.StartTrigger}"/>
            </TabItem>
            <TabItem Header="EndTrigger">
                <ContentControl Content="{Binding FixedLength.EndTrigger}"/>
            </TabItem>
        </TabControl>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:ShapeStyle}">
        <TabControl>
            <TabItem Header="Base">
                <StackPanel>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Name" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{x:Null}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="0" Grid.Column="1"/>
                    </Grid>
                    <Expander Header="Stroke" IsExpanded="False">
                        <ContentControl Content="{Binding Stroke}"/>
                    </Expander>
                    <Expander Header="Fill" IsExpanded="False">
                        <ContentControl Content="{Binding Fill}"/>
                    </Expander>
                    <Expander Header="Thickness" IsExpanded="False">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="40"/>
                            </Grid.ColumnDefinitions>
                            <Slider Value="{Binding Thickness}" Style="{StaticResource SliderStyleKey}" Minimum="0" Maximum="50" TickFrequency="0.1" SmallChange="0.1" LargeChange="1" IsSnapToTickEnabled="True" Grid.Row="0" Grid.Column="0"/>
                            <TextBox Text="{Binding Thickness, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxCenterStyleKey}" Grid.Row="0" Grid.Column="1"/>
                        </Grid>
                    </Expander>
                    <Expander Header="Cap" IsExpanded="False">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="90"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="40"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Line Cap" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                            <ComboBox ItemsSource="{x:Static core:Enums.LineCapValues}" SelectedItem="{Binding LineCap}" Style="{StaticResource ComboBoxStyleKey}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"/>
                        </Grid>
                    </Expander>
                    <Expander Header="Dash" IsExpanded="False">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="90"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="40"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="Dashes" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                            <TextBlock Text="Dash Offset" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="1" Grid.Column="0"/>
                            <TextBox Text="{Binding Dashes}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"/>
                            <Slider Value="{Binding DashOffset}" Style="{StaticResource SliderStyleKey}" Minimum="0" Maximum="15" TickFrequency="0.1" SmallChange="0.1" LargeChange="1" IsSnapToTickEnabled="True" Grid.Row="1" Grid.Column="1"/>
                            <TextBox Text="{Binding DashOffset, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxCenterStyleKey}" Grid.Row="1" Grid.Column="2"/>
                        </Grid>
                    </Expander>
                </StackPanel>
            </TabItem>
            <TabItem Header="Text">
                <ContentControl Content="{Binding TextStyle}"/>
            </TabItem>
            <TabItem Header="Line">
                <StackPanel>
                    <Expander Header="Start Arrow" IsExpanded="False">
                        <ContentControl Content="{Binding StartArrowStyle}"/>
                    </Expander>
                    <Expander Header="End Arrow" IsExpanded="False">
                        <ContentControl Content="{Binding EndArrowStyle}"/>
                    </Expander>
                    <Expander Header="FixedLength" IsExpanded="False">
                        <ContentControl Content="{Binding LineStyle}"/>
                    </Expander>
                </StackPanel>
            </TabItem>
        </TabControl>
    </DataTemplate>
    <!-- Data -->
    <DataTemplate DataType="{x:Type core:Record}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="60*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Width="10" Background="Transparent" ResizeBehavior="PreviousAndNext" ShowsPreview="True"/>
            <TextBlock Grid.Column="0" Grid.Row="0" Margin="5,2,0,2" VerticalAlignment="Center" Text="Name">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock Grid.Column="2" Grid.Row="0" Margin="0,2,5,2" VerticalAlignment="Center" Text="Value">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <ItemsControl VerticalContentAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1" Grid.Column="0" ItemsSource="{Binding Columns, UpdateSourceTrigger=PropertyChanged}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Height="Auto" VerticalAlignment="Top">
                            <TextBox Margin="5,2,0,2" VerticalAlignment="Center" Text="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <ItemsControl VerticalContentAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1" Grid.Column="2" ItemsSource="{Binding Values, UpdateSourceTrigger=PropertyChanged}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Height="Auto" VerticalAlignment="Top">
                            <TextBox Margin="0,2,5,2" VerticalAlignment="Center" Text="{Binding Path=Content, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:Database}">
        <StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Name" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{x:Null}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="0" Grid.Column="1"/>
                <TabControl Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
                    <TabItem Header="Columns">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Control Template="{StaticResource ColumnsMenuControlTemplateKey}" Grid.Row="0" Margin="2,0,2,0"/>
                            <Grid Height="Auto" VerticalAlignment="Top" Grid.Row="1">
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Columns.Length, FallbackValue=0}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="30"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Column="0" Grid.Row="0" Margin="5,2,5,2" VerticalAlignment="Center" Text="Name"/>
                            </Grid>
                            <ItemsControl x:Name="columnsItemsControls" VerticalContentAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="2" ItemsSource="{Binding Columns, UpdateSourceTrigger=PropertyChanged}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Height="Auto" VerticalAlignment="Top">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="30"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>
                                            <TextBox Grid.Column="0" Grid.Row="0" Margin="5,2,5,2" VerticalAlignment="Center" Text="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            <Button Grid.Column="1" Grid.Row="0" Margin="5,2,5,2" VerticalAlignment="Center" Content="-" Command="{x:Static core:Commands.RemoveColumnCommand}" CommandParameter="{Binding}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </TabItem>
                    <TabItem Header="Current Record">
                        <ContentControl Content="{Binding CurrentRecord}"/>
                    </TabItem>
                </TabControl>
            </Grid>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:Data}">
        <TabControl>
            <TabItem Header="Record">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Control Template="{StaticResource RecordMenuControlTemplateKey}" Grid.Row="0" Margin="2,0,2,0"/>
                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                        <ContentControl Content="{Binding Record}"/>
                    </ScrollViewer>
                </Grid>
            </TabItem>
            <TabItem Header="Properties">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="40*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="60*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Control Template="{StaticResource PropertiesMenuControlTemplateKey}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3" Margin="2,0,2,0"/>
                    <GridSplitter Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Width="10" Background="Transparent" ResizeBehavior="PreviousAndNext" ShowsPreview="True"/>
                    <TextBlock Grid.Column="0" Grid.Row="1" Margin="5,2,0,2" VerticalAlignment="Center" Text="Name">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Properties.Length, FallbackValue=0}" Value="0">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <TextBlock Grid.Column="2" Grid.Row="1" Margin="0,2,5,2" VerticalAlignment="Center" Text="Value">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Visibility" Value="Visible"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Properties.Length, FallbackValue=0}" Value="0">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                    <ItemsControl VerticalContentAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="0" Grid.Row="2" ItemsSource="{Binding Properties, UpdateSourceTrigger=PropertyChanged}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Height="Auto" VerticalAlignment="Top">
                                    <TextBox Margin="5,2,0,2" VerticalAlignment="Center" Text="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <ItemsControl x:Name="propertiesItemsControls" VerticalContentAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="2" Grid.Row="2" ItemsSource="{Binding Properties, UpdateSourceTrigger=PropertyChanged}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Height="Auto" VerticalAlignment="Top">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="30"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Margin="0,2,5,2" VerticalAlignment="Center" Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    <Button Grid.Column="1" Margin="5,0,5,0" VerticalAlignment="Center" Content="-" Command="{x:Static core:Commands.RemovePropertyCommand}" CommandParameter="{Binding}"/>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>
            </TabItem>
        </TabControl>
    </DataTemplate>
    <!-- State -->
    <DataTemplate DataType="{x:Type core:ShapeState}">
        <StackPanel Margin="5,2,5,2">
            <CheckBox Content="Default" Margin="1" IsChecked="{Binding Default}"/>
            <CheckBox Content="Visible" Margin="1" IsChecked="{Binding Visible}"/>
            <CheckBox Content="Printable" Margin="1" IsChecked="{Binding Printable}"/>
            <CheckBox Content="Locked" Margin="1" IsChecked="{Binding Locked}"/>
            <CheckBox Content="Connector" Margin="1" IsChecked="{Binding Connector}"/>
            <CheckBox Content="None" Margin="1" IsChecked="{Binding None}"/>
            <CheckBox Content="Standalone" Margin="1" IsChecked="{Binding Standalone}"/>
            <CheckBox Content="Input" Margin="1" IsChecked="{Binding Input}"/>
            <CheckBox Content="Output" Margin="1" IsChecked="{Binding Output}"/>
        </StackPanel>
    </DataTemplate>
    <!-- Shapes -->
    <DataTemplate DataType="{x:Type core:XPoint}">
        <TabControl>
            <TabItem Header="Point">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Name" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{x:Null}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="0" Grid.Column="1"/>
                    <TextBlock Text="X" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="1" Grid.Column="0"/>
                    <TextBox Text="{Binding X, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="1" Grid.Column="1"/>
                    <TextBlock Text="Y" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="2" Grid.Column="0"/>
                    <TextBox Text="{Binding Y, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="2" Grid.Column="1"/>
                </Grid>
            </TabItem>
            <TabItem Header="State">
                <ContentControl Content="{Binding State}"/>
            </TabItem>
            <TabItem Header="Data">
                <ContentControl Content="{Binding Data}"/>
            </TabItem>
            <TabItem Header="Shape">
                <ContentControl Content="{Binding Shape}"/>
            </TabItem>
        </TabControl>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XLine}">
        <TabControl>
            <TabItem Header="Line">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Name" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{x:Null}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="0" Grid.Column="1"/>
                    <TextBlock Text="IsStroked" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="1" Grid.Column="0"/>
                    <CheckBox Content="" IsChecked="{Binding IsStroked}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="1" Grid.Column="1"/>
                    <TabControl Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
                        <TabItem Header="Start">
                            <ContentControl Content="{Binding Start}"/>
                        </TabItem>
                        <TabItem Header="End">
                            <ContentControl Content="{Binding End}"/>
                        </TabItem>
                    </TabControl>
                </Grid>
            </TabItem>
            <TabItem Header="State">
                <ContentControl Content="{Binding State}"/>
            </TabItem>
            <TabItem Header="Data">
                <ContentControl Content="{Binding Data}"/>
            </TabItem>
            <TabItem Header="Style">
                <ContentControl Content="{Binding Style}"/>
            </TabItem>
        </TabControl>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XText}">
        <TabControl>
            <TabItem Header="Text">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Name" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{x:Null}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="0" Grid.Column="1"/>
                    <TextBlock Text="Text" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="1" Grid.Column="0"/>
                    <ComboBox IsEditable="True" Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ComboBoxStyleKey}" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center">
                        <ComboBoxItem>{0}</ComboBoxItem>
                        <ComboBoxItem>{0} {1}</ComboBoxItem>
                        <ComboBoxItem>{0} {1} {2}</ComboBoxItem>
                        <ComboBoxItem>{Column0}</ComboBoxItem>
                        <ComboBoxItem>{Column1}</ComboBoxItem>
                        <ComboBoxItem>{Column2}</ComboBoxItem>
                        <ComboBoxItem>{Column3}</ComboBoxItem>
                    </ComboBox>
                    <TabControl Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
                        <TabItem Header="TopLeft">
                            <ContentControl Content="{Binding TopLeft}"/>
                        </TabItem>
                        <TabItem Header="BottomRight">
                            <ContentControl Content="{Binding BottomRight}"/>
                        </TabItem>
                    </TabControl>
                </Grid>
            </TabItem>
            <TabItem Header="State">
                <ContentControl Content="{Binding State}"/>
            </TabItem>
            <TabItem Header="Data">
                <ContentControl Content="{Binding Data}"/>
            </TabItem>
            <TabItem Header="Style">
                <ContentControl Content="{Binding Style}"/>
            </TabItem>
        </TabControl>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XRectangle}">
        <TabControl>
            <TabItem Header="Rectangle">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Name" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{x:Null}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="0" Grid.Column="1"/>
                    <TextBlock Text="IsStroked" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="1" Grid.Column="0"/>
                    <CheckBox Content="" IsChecked="{Binding IsStroked}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="1" Grid.Column="1"/>
                    <TextBlock Text="IsFilled" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="2" Grid.Column="0"/>
                    <CheckBox Content="" IsChecked="{Binding IsFilled}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="2" Grid.Column="1"/>
                    <TextBlock Text="Text" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="3" Grid.Column="0"/>
                    <ComboBox IsEditable="True" Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ComboBoxStyleKey}" Grid.Row="3" Grid.Column="1" VerticalAlignment="Center">
                        <ComboBoxItem>{0}</ComboBoxItem>
                        <ComboBoxItem>{0} {1}</ComboBoxItem>
                        <ComboBoxItem>{0} {1} {2}</ComboBoxItem>
                        <ComboBoxItem>{Column0}</ComboBoxItem>
                        <ComboBoxItem>{Column1}</ComboBoxItem>
                        <ComboBoxItem>{Column2}</ComboBoxItem>
                        <ComboBoxItem>{Column3}</ComboBoxItem>
                    </ComboBox>
                    <TabControl Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2">
                        <TabItem Header="TopLeft">
                            <ContentControl Content="{Binding TopLeft}"/>
                        </TabItem>
                        <TabItem Header="BottomRight">
                            <ContentControl Content="{Binding BottomRight}"/>
                        </TabItem>
                    </TabControl>
                </Grid>
            </TabItem>
            <TabItem Header="Grid">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="70"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="IsGrid" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                    <TextBlock Text="OffsetX" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="1" Grid.Column="0"/>
                    <TextBlock Text="OffsetY" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="2" Grid.Column="0"/>
                    <TextBlock Text="CellWidth" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="3" Grid.Column="0"/>
                    <TextBlock Text="CellHeight" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="4" Grid.Column="0"/>
                    <CheckBox Content="" IsChecked="{Binding IsGrid}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"/>
                    <Slider Value="{Binding OffsetX}" Style="{StaticResource SliderStyleKey}" Minimum="0" Maximum="60" TickFrequency="0.1" SmallChange="0.1" LargeChange="1" IsSnapToTickEnabled="True" Grid.Row="1" Grid.Column="1"/>
                    <Slider Value="{Binding OffsetY}" Style="{StaticResource SliderStyleKey}" Minimum="0" Maximum="60" TickFrequency="0.1" SmallChange="0.1" LargeChange="1" IsSnapToTickEnabled="True" Grid.Row="2" Grid.Column="1"/>
                    <Slider Value="{Binding CellWidth}" Style="{StaticResource SliderStyleKey}" Minimum="0" Maximum="60" TickFrequency="0.1" SmallChange="0.1" LargeChange="1" IsSnapToTickEnabled="True" Grid.Row="3" Grid.Column="1"/>
                    <Slider Value="{Binding CellHeight}" Style="{StaticResource SliderStyleKey}" Minimum="0" Maximum="60" TickFrequency="0.1" SmallChange="0.1" LargeChange="1" IsSnapToTickEnabled="True" Grid.Row="4" Grid.Column="1"/>
                    <TextBox Text="{Binding OffsetX, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxCenterStyleKey}" Grid.Row="1" Grid.Column="2"/>
                    <TextBox Text="{Binding OffsetY, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxCenterStyleKey}" Grid.Row="2" Grid.Column="2"/>
                    <TextBox Text="{Binding CellWidth, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxCenterStyleKey}" Grid.Row="3" Grid.Column="2"/>
                    <TextBox Text="{Binding CellHeight, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxCenterStyleKey}" Grid.Row="4" Grid.Column="2"/>
                </Grid>
            </TabItem>
            <TabItem Header="State">
                <ContentControl Content="{Binding State}"/>
            </TabItem>
            <TabItem Header="Data">
                <ContentControl Content="{Binding Data}"/>
            </TabItem>
            <TabItem Header="Style">
                <ContentControl Content="{Binding Style}"/>
            </TabItem>
        </TabControl>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XEllipse}">
        <TabControl>
            <TabItem Header="Ellipse">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Name" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{x:Null}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="0" Grid.Column="1"/>
                    <TextBlock Text="IsStroked" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="1" Grid.Column="0"/>
                    <CheckBox Content="" IsChecked="{Binding IsStroked}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="1" Grid.Column="1"/>
                    <TextBlock Text="IsFilled" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="2" Grid.Column="0"/>
                    <CheckBox Content="" IsChecked="{Binding IsFilled}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="2" Grid.Column="1"/>
                    <TextBlock Text="Text" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="3" Grid.Column="0"/>
                    <ComboBox IsEditable="True" Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ComboBoxStyleKey}" Grid.Row="3" Grid.Column="1" VerticalAlignment="Center">
                        <ComboBoxItem>{0}</ComboBoxItem>
                        <ComboBoxItem>{0} {1}</ComboBoxItem>
                        <ComboBoxItem>{0} {1} {2}</ComboBoxItem>
                        <ComboBoxItem>{Column0}</ComboBoxItem>
                        <ComboBoxItem>{Column1}</ComboBoxItem>
                        <ComboBoxItem>{Column2}</ComboBoxItem>
                        <ComboBoxItem>{Column3}</ComboBoxItem>
                    </ComboBox>
                    <TabControl Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2">
                        <TabItem Header="TopLeft">
                            <ContentControl Content="{Binding TopLeft}"/>
                        </TabItem>
                        <TabItem Header="BottomRight">
                            <ContentControl Content="{Binding BottomRight}"/>
                        </TabItem>
                    </TabControl>
                </Grid>
            </TabItem>
            <TabItem Header="State">
                <ContentControl Content="{Binding State}"/>
            </TabItem>
            <TabItem Header="Data">
                <ContentControl Content="{Binding Data}"/>
            </TabItem>
            <TabItem Header="Style">
                <ContentControl Content="{Binding Style}"/>
            </TabItem>
        </TabControl>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XImage}">
        <StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Name" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{x:Null}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Style" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <ComboBox ItemsSource="{Binding Path=DataContext.Editor.Project.CurrentStyleLibrary.Items, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" SelectedItem="{Binding Path=DataContext.Style, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}}}" Style="{StaticResource ComboBoxStyleKey}" Grid.Row="0" Grid.Column="1">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsStroked" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsStroked}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsFilled" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsFilled}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Text" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <ComboBox IsEditable="True" Text="{Binding Text, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource ComboBoxStyleKey}" Grid.Row="0" Grid.Column="1" VerticalAlignment="Center">
                    <ComboBoxItem>{0}</ComboBoxItem>
                    <ComboBoxItem>{0} {1}</ComboBoxItem>
                    <ComboBoxItem>{0} {1} {2}</ComboBoxItem>
                    <ComboBoxItem>{Column0}</ComboBoxItem>
                    <ComboBoxItem>{Column1}</ComboBoxItem>
                    <ComboBoxItem>{Column2}</ComboBoxItem>
                    <ComboBoxItem>{Column3}</ComboBoxItem>
                </ComboBox>
            </Grid>
            <Expander Header="Key">
                <Grid>
                    <TextBox Text="{Binding Key, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxLeftStyleKey}"/>
                </Grid>
            </Expander>
            <Expander Header="TopLeft">
                <ContentControl Content="{Binding TopLeft}"/>
            </Expander>
            <Expander Header="BottomRight">
                <ContentControl Content="{Binding BottomRight}"/>
            </Expander>
            <Expander Header="State">
                <ContentControl Content="{Binding State}"/>
            </Expander>
            <Expander Header="Data">
                <ContentControl Content="{Binding Data}"/>
            </Expander>
            <Expander Header="Style">
                <ContentControl Content="{Binding Style}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XArc}">
        <StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Name" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{x:Null}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Style" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <ComboBox ItemsSource="{Binding Path=DataContext.Editor.Project.CurrentStyleLibrary.Items, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" SelectedItem="{Binding Path=DataContext.Style, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}}}" Style="{StaticResource ComboBoxStyleKey}" Grid.Row="0" Grid.Column="1">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsStroked" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsStroked}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsFilled" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsFilled}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Expander Header="Point1">
                <ContentControl Content="{Binding Point1}"/>
            </Expander>
            <Expander Header="Point2">
                <ContentControl Content="{Binding Point2}"/>
            </Expander>
            <Expander Header="Point3">
                <ContentControl Content="{Binding Point3}"/>
            </Expander>
            <Expander Header="Point4">
                <ContentControl Content="{Binding Point4}"/>
            </Expander>
            <Expander Header="State">
                <ContentControl Content="{Binding State}"/>
            </Expander>
            <Expander Header="Data">
                <ContentControl Content="{Binding Data}"/>
            </Expander>
            <Expander Header="Style">
                <ContentControl Content="{Binding Style}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XBezier}">
        <StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Name" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{x:Null}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Style" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <ComboBox ItemsSource="{Binding Path=DataContext.Editor.Project.CurrentStyleLibrary.Items, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" SelectedItem="{Binding Path=DataContext.Style, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}}}" Style="{StaticResource ComboBoxStyleKey}" Grid.Row="0" Grid.Column="1">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsStroked" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsStroked}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsFilled" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsFilled}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Expander Header="Point1">
                <ContentControl Content="{Binding Point1}"/>
            </Expander>
            <Expander Header="Point2">
                <ContentControl Content="{Binding Point2}"/>
            </Expander>
            <Expander Header="Point3">
                <ContentControl Content="{Binding Point3}"/>
            </Expander>
            <Expander Header="Point4">
                <ContentControl Content="{Binding Point4}"/>
            </Expander>
            <Expander Header="State">
                <ContentControl Content="{Binding State}"/>
            </Expander>
            <Expander Header="Data">
                <ContentControl Content="{Binding Data}"/>
            </Expander>
            <Expander Header="Style">
                <ContentControl Content="{Binding Style}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XQBezier}">
        <StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Name" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{x:Null}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Style" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <ComboBox ItemsSource="{Binding Path=DataContext.Editor.Project.CurrentStyleLibrary.Items, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" SelectedItem="{Binding Path=DataContext.Style, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}}}" Style="{StaticResource ComboBoxStyleKey}" Grid.Row="0" Grid.Column="1">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsStroked" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsStroked}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsFilled" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsFilled}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Expander Header="Point1">
                <ContentControl Content="{Binding Point1}"/>
            </Expander>
            <Expander Header="Point2">
                <ContentControl Content="{Binding Point2}"/>
            </Expander>
            <Expander Header="Point3">
                <ContentControl Content="{Binding Point3}"/>
            </Expander>
            <Expander Header="State">
                <ContentControl Content="{Binding State}"/>
            </Expander>
            <Expander Header="Data">
                <ContentControl Content="{Binding Data}"/>
            </Expander>
            <Expander Header="Style">
                <ContentControl Content="{Binding Style}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XGroup}">
        <TabControl>
            <TabItem Header="Group">
                <StackPanel>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Text="Name" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{x:Null}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="0" Grid.Column="1"/>
                    </Grid>
                    <Expander Header="Properties" IsExpanded="True">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="50*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Width="10" Background="Transparent" ResizeBehavior="PreviousAndNext" ShowsPreview="True"/>
                            <TextBlock Grid.Column="0" Grid.Row="0" Margin="5,2,0,2" VerticalAlignment="Center" Text="Name">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ShapesProperties.Length, FallbackValue=0}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBlock Grid.Column="2" Grid.Row="0" Margin="0,2,5,2" VerticalAlignment="Center" Text="Value">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ShapesProperties.Length, FallbackValue=0}" Value="0">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <ItemsControl VerticalContentAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="0" Grid.Row="1" ItemsSource="{Binding ShapesProperties, UpdateSourceTrigger=PropertyChanged}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Height="Auto" VerticalAlignment="Top">
                                            <TextBox Margin="5,2,0,2" VerticalAlignment="Center" Text="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                            <ItemsControl VerticalContentAlignment="Stretch" VerticalAlignment="Stretch" Grid.Column="2" Grid.Row="1" ItemsSource="{Binding ShapesProperties, UpdateSourceTrigger=PropertyChanged}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Height="Auto" VerticalAlignment="Top">
                                            <TextBox Margin="0,2,5,2" VerticalAlignment="Center" Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </Grid>
                    </Expander>
                    <Expander Header="State">
                        <ContentControl Content="{Binding State}"/>
                    </Expander>
                    <Expander Header="Data">
                        <ContentControl Content="{Binding Data}"/>
                    </Expander>
                </StackPanel>
            </TabItem>
            <TabItem Header="Shapes">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <controls:GroupShapesDragAndDropListBox x:Name="shapesListBox" Tag="{Binding DataContext.Editor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" ItemsSource="{Binding Shapes}" BorderBrush="{x:Null}" Grid.Row="0">
                        <controls:GroupShapesDragAndDropListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" Margin="0,5,0,5"/>
                            </DataTemplate>
                        </controls:GroupShapesDragAndDropListBox.ItemTemplate>
                    </controls:GroupShapesDragAndDropListBox>
                    <ContentControl Content="{Binding ElementName=shapesListBox, Path=SelectedItem}" Grid.Row="1" Margin="5,2,5,2"/>
                </Grid>
            </TabItem>
            <TabItem Header="Connectors">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <controls:GroupConnectorsDragAndDropListBox x:Name="connectorsListBox" Tag="{Binding DataContext.Editor, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" ItemsSource="{Binding Connectors}" BorderBrush="{x:Null}" Grid.Row="0">
                        <controls:GroupConnectorsDragAndDropListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" Margin="0,5,0,5"/>
                            </DataTemplate>
                        </controls:GroupConnectorsDragAndDropListBox.ItemTemplate>
                    </controls:GroupConnectorsDragAndDropListBox>
                    <ContentControl Content="{Binding ElementName=connectorsListBox, Path=SelectedItem}" Grid.Row="1" Margin="5,2,5,2"/>
                </Grid>
            </TabItem>
        </TabControl>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XPath}">
        <StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Name" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{x:Null}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Style" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <ComboBox ItemsSource="{Binding Path=DataContext.Editor.Project.CurrentStyleLibrary.Items, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" SelectedItem="{Binding Path=DataContext.Style, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}}}" Style="{StaticResource ComboBoxStyleKey}" Grid.Row="0" Grid.Column="1">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsStroked" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsStroked}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsFilled" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsFilled}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Expander Header="Geometry">
                <ContentControl Content="{Binding Geometry}"/>
            </Expander>
            <Expander Header="State">
                <ContentControl Content="{Binding State}"/>
            </Expander>
            <Expander Header="Data">
                <ContentControl Content="{Binding Data}"/>
            </Expander>
            <Expander Header="Style">
                <ContentControl Content="{Binding Style}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <!-- Path -->
    <DataTemplate DataType="{x:Type core:XPathSize}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="90"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="40"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Width" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
            <TextBlock Text="Height" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="1" Grid.Column="0"/>
            <TextBox Text="{Binding Width, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"/>
            <TextBox Text="{Binding Height, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
        </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XArcSegment}">
        <StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsStroked" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsStroked}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsSmoothJoin" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsSmoothJoin}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="90"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="40"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="RotationAngle" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <TextBlock Text="IsLargeArc" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="1" Grid.Column="0"/>
                <TextBlock Text="SweepDirection" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="2" Grid.Column="0"/>
                <TextBox Text="{Binding RotationAngle, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"/>
                <CheckBox Content="" IsChecked="{Binding IsLargeArc}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                <ComboBox ItemsSource="{x:Static core:Enums.XSweepDirectionValues}" SelectedItem="{Binding SweepDirection}" Style="{StaticResource ComboBoxStyleKey}" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"/>
            </Grid>
            <Expander Header="Point">
                <ContentControl Content="{Binding Point}"/>
            </Expander>
            <Expander Header="Size">
                <ContentControl Content="{Binding Size}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XBezierSegment}">
        <StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsStroked" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsStroked}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsSmoothJoin" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsSmoothJoin}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Expander Header="Point1">
                <ContentControl Content="{Binding Point1}"/>
            </Expander>
            <Expander Header="Point2">
                <ContentControl Content="{Binding Point2}"/>
            </Expander>
            <Expander Header="Point3">
                <ContentControl Content="{Binding Point3}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XLineSegment}">
        <StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsStroked" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsStroked}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsSmoothJoin" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsSmoothJoin}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Expander Header="Point">
                <ContentControl Content="{Binding Point}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XPolyBezierSegment}">
        <StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsStroked" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsStroked}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsSmoothJoin" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsSmoothJoin}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Expander Header="Points">
                <ListBox ItemsSource="{Binding Points}" BorderBrush="{x:Null}" BorderThickness="0" HorizontalContentAlignment="Stretch" Height="140"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XPolyLineSegment}">
        <StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsStroked" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsStroked}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsSmoothJoin" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsSmoothJoin}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Expander Header="Points">
                <ListBox ItemsSource="{Binding Points}" BorderBrush="{x:Null}" HorizontalContentAlignment="Stretch" Height="140"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XPolyQuadraticBezierSegment}">
        <StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsStroked" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsStroked}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsSmoothJoin" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsSmoothJoin}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Expander Header="Points">
                <ListBox ItemsSource="{Binding Points}" BorderBrush="{x:Null}" HorizontalContentAlignment="Stretch" Height="140"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XQuadraticBezierSegment}">
        <StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsStroked" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsStroked}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsSmoothJoin" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsSmoothJoin}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Expander Header="Point1">
                <ContentControl Content="{Binding Point1}"/>
            </Expander>
            <Expander Header="Point2">
                <ContentControl Content="{Binding Point2}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XPathFigure}">
        <StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsFilled" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsFilled}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="IsClosed" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <CheckBox Content="" IsChecked="{Binding IsClosed}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Expander Header="StartPoint">
                <ContentControl Content="{Binding StartPoint}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XPathGeometry}">
        <StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="90"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="40"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="FillRule" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <ComboBox ItemsSource="{x:Static core:Enums.XFillRuleValues}" SelectedItem="{Binding FillRule}" Style="{StaticResource ComboBoxStyleKey}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"/>
            </Grid>
            <TabControl>
                <TabItem Header="Figures">
                    <TreeView x:Name="tree" ItemsSource="{Binding Figures}" Margin="5,2,5,2">
                        <TreeView.ItemContainerStyle>
                            <Style TargetType="TreeViewItem">
                                <Setter Property="IsExpanded" Value="True"/>
                            </Style>
                        </TreeView.ItemContainerStyle>
                        <TreeView.ItemTemplate>
                            <HierarchicalDataTemplate ItemsSource="{Binding Segments}">
                                <HierarchicalDataTemplate.ItemContainerStyle>
                                    <Style TargetType="TreeViewItem">
                                        <Setter Property="IsExpanded" Value="True"/>
                                    </Style>
                                </HierarchicalDataTemplate.ItemContainerStyle>
                                <HierarchicalDataTemplate.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}"/>
                                    </DataTemplate>
                                </HierarchicalDataTemplate.ItemTemplate>
                                <TextBlock Text="{Binding}"/>
                            </HierarchicalDataTemplate>
                        </TreeView.ItemTemplate>
                    </TreeView>
                </TabItem>
                <TabItem Header="Selected">
                    <ContentControl Content="{Binding}" DataContext="{Binding ElementName=tree, Path=SelectedItem}" Margin="5,5,5,5" Grid.Column="2"/>
                </TabItem>
            </TabControl>
        </StackPanel>
    </DataTemplate>
    <!-- Project -->
    <DataTemplate DataType="{x:Type core:Options}">
        <TabControl>
            <TabItem Header="{x:Static p:Resources.OptionsHeaderGeneral}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{x:Static p:Resources.OptionsSnapToGrid}" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                    <TextBlock Text="{x:Static p:Resources.OptionsSnapX}" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="1" Grid.Column="0"/>
                    <TextBlock Text="{x:Static p:Resources.OptionsSnapY}" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="2" Grid.Column="0"/>
                    <TextBlock Text="{x:Static p:Resources.OptionsHitTreshold}" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="3" Grid.Column="0"/>
                    <TextBlock Text="{x:Static p:Resources.OptionsMoveMode}" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="4" Grid.Column="0"/>
                    <TextBlock Text="{x:Static p:Resources.OptionsTryToConnect}" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="5" Grid.Column="0"/>
                    <CheckBox Content="" IsChecked="{Binding SnapToGrid}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"/>
                    <TextBox Text="{Binding SnapX, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                    <TextBox Text="{Binding SnapY, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"/>
                    <TextBox Text="{Binding HitTreshold, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2"/>
                    <ComboBox ItemsSource="{x:Static core:Enums.MoveModeValues}" SelectedItem="{Binding MoveMode}" Style="{StaticResource ComboBoxStyleKey}" Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2"/>
                    <CheckBox Content="" IsChecked="{Binding TryToConnect}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2"/>
                </Grid>
            </TabItem>
            <TabItem Header="{x:Static p:Resources.OptionsHeaderDefaults}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="{x:Static p:Resources.OptionsDefaultIsStroked}" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                    <TextBlock Text="{x:Static p:Resources.OptionsDefaultIsFilled}" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="1" Grid.Column="0"/>
                    <TextBlock Text="{x:Static p:Resources.OptionsDefaultIsClosed}" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="2" Grid.Column="0"/>
                    <TextBlock Text="{x:Static p:Resources.OptionsDefaultIsSmoothJoin}" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="3" Grid.Column="0"/>
                    <TextBlock Text="{x:Static p:Resources.OptionsDefaultFillRule}" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="4" Grid.Column="0"/>
                    <CheckBox Content="" IsChecked="{Binding DefaultIsStroked}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"/>
                    <CheckBox Content="" IsChecked="{Binding DefaultIsFilled}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                    <CheckBox Content="" IsChecked="{Binding DefaultIsClosed}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"/>
                    <CheckBox Content="" IsChecked="{Binding DefaultIsSmoothJoin}" Style="{StaticResource CheckBoxStyleKey}" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2"/>
                    <ComboBox ItemsSource="{x:Static core:Enums.XFillRuleValues}" SelectedItem="{Binding DefaultFillRule}" Style="{StaticResource ComboBoxStyleKey}" Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2"/>
                </Grid>
            </TabItem>
            <TabItem Header="{x:Static p:Resources.OptionsHeaderAdvanced}">
                <StackPanel>
                    <Expander Header="{x:Static p:Resources.OptionsPointShape}">
                        <ContentControl Content="{Binding PointShape}"/>
                    </Expander>
                    <Expander Header="{x:Static p:Resources.OptionsPointStyle}">
                        <ContentControl Content="{Binding PointStyle}"/>
                    </Expander>
                    <Expander Header="{x:Static p:Resources.OptionsSelectionStyle}">
                        <ContentControl Content="{Binding SelectionStyle}"/>
                    </Expander>
                    <Expander Header="{x:Static p:Resources.OptionsHelperStyle}">
                        <ContentControl Content="{Binding HelperStyle}"/>
                    </Expander>
                </StackPanel>
            </TabItem>
        </TabControl>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:Project}">
        <StackPanel>
            <Expander Header="{x:Static p:Resources.ProjectOptions}" IsExpanded="False">
                <ContentControl Content="{Binding Options}"/>
            </Expander>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="40"/>
                </Grid.ColumnDefinitions>
                <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2"/>
            </Grid>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:Document}">
        <StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{x:Static p:Resources.DocumentName}" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:Container}">
        <StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{x:Static p:Resources.ContainerName}" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" BorderBrush="{x:Null}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="0" Grid.Column="1"/>
            </Grid>
            <Grid>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsTemplate}" Value="False">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="60"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="{x:Static p:Resources.ContainerWidth}" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="0" Grid.Column="0"/>
                <TextBlock Text="{x:Static p:Resources.ContainerHeight}" Style="{StaticResource TextBlockLeftStyleKey}" Grid.Row="1" Grid.Column="0"/>
                <TextBox Text="{Binding Width, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="0" Grid.Column="1"/>
                <TextBox Text="{Binding Height, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxLeftStyleKey}" Grid.Row="1" Grid.Column="1"/>
            </Grid>
            <Expander Header="{x:Static p:Resources.ContainerBackground}">
                <Expander.Style>
                    <Style TargetType="Expander">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsTemplate}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Expander.Style>
                <ContentControl Content="{Binding Background}"/>
            </Expander>
            <Expander Header="{x:Static p:Resources.ContainerTemplate}">
                <Expander.Style>
                    <Style TargetType="Expander">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsTemplate}" Value="False">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Expander.Style>
                <StackPanel>
                    <ComboBox ItemsSource="{Binding Path=DataContext.Editor.Project.Templates, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" SelectedItem="{Binding Path=DataContext.Template, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type StackPanel}}}" Style="{StaticResource ComboBoxStyleKey}">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ContentControl Content="{Binding Template}"/>
                </StackPanel>
            </Expander>
            <Expander Header="{x:Static p:Resources.ContainerProperties}" IsExpanded="True">
                <ContentControl Content="{Binding Data}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
</ResourceDictionary>
