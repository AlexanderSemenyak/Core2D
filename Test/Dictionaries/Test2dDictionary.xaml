<!-- Copyright (c) Wiesław Šoltés. All rights reserved. -->
<!-- Licensed under the MIT license. See LICENSE file in the project root for full license information. -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:core="clr-namespace:Test2d;assembly=Test2d"
                    xmlns:converters="clr-namespace:Test.Converters"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib">
    <converters:DoubleToStringConverter x:Key="DoubleToStringConverter"/>
    <converters:FlagsEnumConverter x:Key="FlagsEnumConverter"/>
    <converters:ObjectEqualityConverter x:Key="ObjectEqualityConverter"/>
    <converters:ShapePropertyParameterConverter x:Key="ShapePropertyParameterConverter"/>
    <ObjectDataProvider x:Key="TextHAlignmentValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="core:TextHAlignment"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="TextVAlignmentValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="core:TextVAlignment"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="ArrowTypeValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="core:ArrowType"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="LineCapValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="core:LineCap"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ControlTemplate x:Key="FontStyleControlTemplateKey">
        <StackPanel>
            <CheckBox Content="Regular" Margin="1"
                      IsChecked="{Binding Path=FontStyle, Converter={StaticResource FlagsEnumConverter}, ConverterParameter={x:Static core:FontStyle.Regular}}">
            </CheckBox>
            <CheckBox Content="Bold" Margin="1"
                      IsChecked="{Binding Path=FontStyle, Converter={StaticResource FlagsEnumConverter}, ConverterParameter={x:Static core:FontStyle.Bold}}">
            </CheckBox>
            <CheckBox Content="Italic" Margin="1"
                      IsChecked="{Binding Path=FontStyle, Converter={StaticResource FlagsEnumConverter}, ConverterParameter={x:Static core:FontStyle.Italic}}">
            </CheckBox>
            <CheckBox Content="Underline" Margin="1"
                      IsChecked="{Binding Path=FontStyle, Converter={StaticResource FlagsEnumConverter}, ConverterParameter={x:Static core:FontStyle.Underline}}">
            </CheckBox>
            <CheckBox Content="Strikeout" Margin="1"
                      IsChecked="{Binding Path=FontStyle, Converter={StaticResource FlagsEnumConverter}, ConverterParameter={x:Static core:FontStyle.Strikeout}}">
            </CheckBox>
        </StackPanel>
    </ControlTemplate>
    <DataTemplate DataType="{x:Type core:ArgbColor}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="A" 
                       Margin="0,0,2,0" 
                       Grid.Row="0"
                       Grid.Column="0" 
                       TextAlignment="Center" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBlock Text="R" 
                       Margin="0,0,2,0" 
                       Grid.Row="1" 
                       Grid.Column="0" 
                       TextAlignment="Center" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBlock Text="G" 
                       Margin="0,0,2,0" 
                       Grid.Row="2" 
                       Grid.Column="0" 
                       TextAlignment="Center" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBlock Text="B" 
                       Margin="0,0,2,0" 
                       Grid.Row="3" 
                       Grid.Column="0" 
                       TextAlignment="Center" 
                       VerticalAlignment="Center">
            </TextBlock>
            <Slider Value="{Binding A}" 
                    Minimum="0" 
                    Maximum="255" 
                    TickFrequency="1" 
                    IsSnapToTickEnabled="True" 
                    Grid.Row="0" 
                    Grid.Column="1" 
                    Margin="1">
            </Slider>
            <Slider Value="{Binding R}" 
                    Minimum="0" 
                    Maximum="255" 
                    TickFrequency="1" 
                    IsSnapToTickEnabled="True" 
                    Grid.Row="1" 
                    Grid.Column="1" 
                    Margin="1">
            </Slider>
            <Slider Value="{Binding G}" 
                    Minimum="0" 
                    Maximum="255" 
                    TickFrequency="1" 
                    IsSnapToTickEnabled="True" 
                    Grid.Row="2" 
                    Grid.Column="1" 
                    Margin="1">
            </Slider>
            <Slider Value="{Binding B}" 
                    Minimum="0" 
                    Maximum="255" 
                    TickFrequency="1" 
                    IsSnapToTickEnabled="True" 
                    Grid.Row="3" 
                    Grid.Column="1" 
                    Margin="1">
            </Slider>
            <TextBox Text="{Binding A, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                     BorderBrush="{x:Null}" 
                     Grid.Row="0" 
                     Grid.Column="2" 
                     TextAlignment="Center" 
                     VerticalAlignment="Center">
            </TextBox>
            <TextBox Text="{Binding R, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                     BorderBrush="{x:Null}" 
                     Grid.Row="1" 
                     Grid.Column="2" 
                     TextAlignment="Center" 
                     VerticalAlignment="Center">
            </TextBox>
            <TextBox Text="{Binding G, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                     BorderBrush="{x:Null}" 
                     Grid.Row="2" 
                     Grid.Column="2" 
                     TextAlignment="Center" 
                     VerticalAlignment="Center">
            </TextBox>
            <TextBox Text="{Binding B, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                     BorderBrush="{x:Null}" 
                     Grid.Row="3" 
                     Grid.Column="2" 
                     TextAlignment="Center" 
                     VerticalAlignment="Center">
            </TextBox>
        </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:ArrowStyle}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="90"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Arrow Type" 
                       Margin="0,0,2,0" 
                       Grid.Row="0"
                       Grid.Column="0" 
                       TextAlignment="Left" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBlock Text="IsFilled" 
                       Margin="0,0,2,0" 
                       Grid.Row="1"
                       Grid.Column="0" 
                       TextAlignment="Left" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBlock Text="RadiusX" 
                       Margin="0,0,2,0" 
                       Grid.Row="2" 
                       Grid.Column="0" 
                       TextAlignment="Left" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBlock Text="RadiusY" 
                       Margin="0,0,2,0" 
                       Grid.Row="3" 
                       Grid.Column="0" 
                       TextAlignment="Left" 
                       VerticalAlignment="Center">
            </TextBlock>
            <ComboBox ItemsSource="{Binding Source={StaticResource ResourceKey=ArrowTypeValues}}" 
                      SelectedItem="{Binding ArrowType}" 
                      Grid.Row="0" 
                      Grid.Column="1" 
                      Grid.ColumnSpan="2"
                      Margin="0,1,0,1">
            </ComboBox>
            <CheckBox Content=""
                      IsChecked="{Binding IsFilled}"
                      Grid.Row="1" 
                      Grid.Column="1" 
                      Grid.ColumnSpan="2"
                      Margin="0,1,0,1">
            </CheckBox>
            <Slider Value="{Binding RadiusX}" 
                    Minimum="0" 
                    Maximum="15" 
                    TickFrequency="0.1" 
                    SmallChange="0.1"
                    LargeChange="1"
                    IsSnapToTickEnabled="True" 
                    Grid.Row="2" 
                    Grid.Column="1" 
                    Margin="1">
            </Slider>
            <Slider Value="{Binding RadiusY}" 
                    Minimum="0" 
                    Maximum="15" 
                    TickFrequency="0.1" 
                    SmallChange="0.1"
                    LargeChange="1"
                    IsSnapToTickEnabled="True" 
                    Grid.Row="3" 
                    Grid.Column="1" 
                    Margin="1">
            </Slider>
            <TextBox Text="{Binding RadiusX, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                     BorderBrush="{x:Null}" 
                     Grid.Row="2" 
                     Grid.Column="2" 
                     TextAlignment="Center" 
                     VerticalAlignment="Center">
            </TextBox>
            <TextBox Text="{Binding RadiusY, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                     BorderBrush="{x:Null}" 
                     Grid.Row="3" 
                     Grid.Column="2" 
                     TextAlignment="Center" 
                     VerticalAlignment="Center">
            </TextBox>
        </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:TextStyle}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="90"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="FontName" 
                       Margin="0,0,2,0" 
                       Grid.Row="0"
                       Grid.Column="0" 
                       TextAlignment="Left" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBlock Text="FontFile" 
                       Margin="0,0,2,0" 
                       Grid.Row="1"
                       Grid.Column="0" 
                       TextAlignment="Left" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBlock Text="FontSize" 
                       Margin="0,0,2,0" 
                       Grid.Row="2" 
                       Grid.Column="0" 
                       TextAlignment="Left" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBlock Text="FontStyle" 
                       Margin="0,0,2,0" 
                       Grid.Row="3" 
                       Grid.Column="0" 
                       TextAlignment="Left" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBlock Text="HAlignment" 
                       Margin="0,0,2,0" 
                       Grid.Row="4" 
                       Grid.Column="0" 
                       TextAlignment="Left" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBlock Text="VAlignment" 
                       Margin="0,0,2,0" 
                       Grid.Row="5" 
                       Grid.Column="0" 
                       TextAlignment="Left" 
                       VerticalAlignment="Center">
            </TextBlock>
            <Slider Value="{Binding FontSize}" 
                    Minimum="0" 
                    Maximum="72" 
                    TickFrequency="1" 
                    IsSnapToTickEnabled="True" 
                    Grid.Row="2" 
                    Grid.Column="1" 
                    Margin="1">
            </Slider>
            <TextBox Text="{Binding FontName, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                     BorderBrush="{x:Null}" 
                     Grid.Row="0" 
                     Grid.Column="1" 
                     Grid.ColumnSpan="2"
                     TextAlignment="Left" 
                     VerticalAlignment="Center">
            </TextBox>
            <TextBox Text="{Binding FontFile, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                     BorderBrush="{x:Null}" 
                     Grid.Row="1" 
                     Grid.Column="1" 
                     Grid.ColumnSpan="2"
                     TextAlignment="Left" 
                     VerticalAlignment="Center">
            </TextBox>
            <TextBox Text="{Binding FontSize, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                     BorderBrush="{x:Null}" 
                     Grid.Row="2" 
                     Grid.Column="2" 
                     TextAlignment="Center" 
                     VerticalAlignment="Center">
            </TextBox>
            <Control Template="{StaticResource FontStyleControlTemplateKey}"
                     Grid.Row="3" 
                     Grid.Column="1"
                     Grid.ColumnSpan="2">
            </Control>
            <ComboBox ItemsSource="{Binding Source={StaticResource ResourceKey=TextHAlignmentValues}}" 
                      SelectedItem="{Binding TextHAlignment}" 
                      Grid.Row="4" 
                      Grid.Column="1" 
                      Grid.ColumnSpan="2"
                      Margin="0,1,0,1">
            </ComboBox>
            <ComboBox ItemsSource="{Binding Source={StaticResource ResourceKey=TextVAlignmentValues}}" 
                      SelectedItem="{Binding TextVAlignment}" 
                      Grid.Row="5" 
                      Grid.Column="1" 
                      Grid.ColumnSpan="2"
                      Margin="0,1,0,1">
            </ComboBox>
        </Grid>
    </DataTemplate>
    <ControlTemplate x:Key="StyleControlTemplateKey">
        <StackPanel>
            <Expander Header="Name" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Stroke" IsExpanded="False">
                <ContentControl Content="{Binding Stroke}"/>
            </Expander>
            <Expander Header="Fill" IsExpanded="False">
                <ContentControl Content="{Binding Fill}"/>
            </Expander>
            <Expander Header="Thickness" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <Slider Value="{Binding Thickness}" 
                            Minimum="0" 
                            Maximum="50" 
                            TickFrequency="0.1" 
                            SmallChange="0.1" 
                            LargeChange="1" 
                            IsSnapToTickEnabled="True" 
                            Grid.Row="0" 
                            Grid.Column="0" 
                            Margin="1">
                    </Slider>
                    <TextBox Text="{Binding Thickness, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="0" 
                             Grid.Column="1" 
                             TextAlignment="Center" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Text" IsExpanded="False">
                <ContentControl Content="{Binding TextStyle}"/>
            </Expander>
            <Expander Header="Line Start" IsExpanded="False">
                <ContentControl Content="{Binding LineStyle.StartArrowStyle}"/>
            </Expander>
            <Expander Header="Line End" IsExpanded="False">
                <ContentControl Content="{Binding LineStyle.EndArrowStyle}"/>
            </Expander>
            <Expander Header="Line" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Line Cap" 
                               Margin="0,0,2,0" 
                               Grid.Row="0"
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock Text="Dashes" 
                               Margin="0,0,2,0" 
                               Grid.Row="2" 
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock Text="Dash Offset" 
                               Margin="0,0,2,0" 
                               Grid.Row="3" 
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <ComboBox ItemsSource="{Binding Source={StaticResource ResourceKey=LineCapValues}}" 
                              SelectedItem="{Binding LineStyle.LineCap}" 
                              Grid.Row="0" 
                              Grid.Column="1" 
                              Grid.ColumnSpan="2"
                              Margin="0,1,0,1">
                    </ComboBox>
                    <Slider Value="{Binding LineStyle.DashOffset}" 
                            Minimum="0" 
                            Maximum="15" 
                            TickFrequency="0.1" 
                            SmallChange="0.1"
                            LargeChange="1"
                            IsSnapToTickEnabled="True" 
                            Grid.Row="3" 
                            Grid.Column="1" 
                            Margin="1">
                    </Slider>
                    <TextBox Text="{Binding LineStyle.Dashes, Converter={StaticResource DoubleToStringConverter}}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="2" 
                             Grid.Column="1" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Center" 
                             VerticalAlignment="Center">
                    </TextBox>
                    <TextBox Text="{Binding LineStyle.DashOffset, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="3" 
                             Grid.Column="2" 
                             TextAlignment="Center" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
        </StackPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="PropertiesControlTemplateKey">
         <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Menu Background="Transparent" HorizontalAlignment="Right" Grid.Row="0" Margin="2,0,2,0">
                <MenuItem Command="{Binding DataContext.Commands.AddPropertyCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                          CommandParameter="{Binding}" 
                          Header="+"/>
            </Menu>
            <ItemsControl x:Name="propertiesItemsControls"
                          VerticalContentAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1"
                          ItemsSource="{Binding Properties, UpdateSourceTrigger=PropertyChanged}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Height="Auto" VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="22"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBox Grid.Column="0" Grid.Row="0" Margin="2,1,2,1" VerticalAlignment="Center" 
                                     Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=500}"/>
                            <TextBox Grid.Column="1" Grid.Row="0" Margin="0,1,0,1" VerticalAlignment="Center" 
                                     Text="{Binding Data, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=500}"/>
                            <Button Grid.Column="2" Grid.Row="0" Margin="2,1,2,1" VerticalAlignment="Center" Content="-" 
                                    Command="{Binding DataContext.Commands.RemovePropertyCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                                <Button.CommandParameter>
                                    <MultiBinding Converter="{StaticResource ShapePropertyParameterConverter}">
                                        <Binding Path="DataContext" ElementName="propertiesItemsControls"/>
                                        <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                                    </MultiBinding>
                                </Button.CommandParameter>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="DatabaseControlTemplateKey">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Menu Background="Transparent" HorizontalAlignment="Right" Grid.Row="0" Margin="2,0,2,0">
                <MenuItem Command="{Binding DataContext.Commands.AddRecordCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                          CommandParameter="{Binding}" 
                          Header="+">

                </MenuItem>
            </Menu>
            <ItemsControl VerticalContentAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1"
                          ItemsSource="{Binding Database.Records, UpdateSourceTrigger=PropertyChanged}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Height="Auto" VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="22"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBox Grid.Column="0" Grid.Row="0" Margin="2,1,2,1" VerticalAlignment="Center" 
                                     IsReadOnly="True"
                                     Text="{Binding Key, Mode=OneWay, UpdateSourceTrigger=PropertyChanged, Delay=500}"/>
                            <TextBox Grid.Column="1" Grid.Row="0" Margin="0,1,0,1" VerticalAlignment="Center" 
                                     Text="{Binding Value.Data, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=500}"/>
                            <Button Grid.Column="2" Grid.Row="0" Margin="2,1,2,1" VerticalAlignment="Center" Content="-" 
                                    Command="{Binding DataContext.Commands.RemoveRecordCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                                    CommandParameter="{Binding}">
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="StateControlTemplateKey">
        <StackPanel>
            <CheckBox Content="Default" Margin="1"
                      IsChecked="{Binding Path=State, Converter={StaticResource FlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Default}}">
            </CheckBox>
            <CheckBox Content="Visible" Margin="1"
                      IsChecked="{Binding Path=State, Converter={StaticResource FlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Visible}}">
            </CheckBox>
            <CheckBox Content="Printable" Margin="1"
                      IsChecked="{Binding Path=State, Converter={StaticResource FlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Printable}}">
            </CheckBox>
            <CheckBox Content="Locked" Margin="1"
                      IsChecked="{Binding Path=State, Converter={StaticResource FlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Locked}}">
            </CheckBox>
            <CheckBox Content="Connector" Margin="1"
                      IsChecked="{Binding Path=State, Converter={StaticResource FlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Connector}}">
            </CheckBox>
            <CheckBox Content="None" Margin="1"
                      IsChecked="{Binding Path=State, Converter={StaticResource FlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.None}}">
            </CheckBox>
            <CheckBox Content="Standalone" Margin="1"
                      IsChecked="{Binding Path=State, Converter={StaticResource FlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Standalone}}">
            </CheckBox>
            <CheckBox Content="Input" Margin="1"
                      IsChecked="{Binding Path=State, Converter={StaticResource FlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Input}}">
            </CheckBox>
            <CheckBox Content="Output" Margin="1"
                      IsChecked="{Binding Path=State, Converter={StaticResource FlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Output}}">
            </CheckBox>
        </StackPanel>
    </ControlTemplate>
    <DataTemplate DataType="{x:Type core:ShapeStyle}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>
            <ComboBox ItemsSource="{Binding Path=DataContext.Editor.Project.CurrentStyleGroup.Styles, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                      SelectedItem="{Binding Path=DataContext.Style, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Expander}}}" 
                      Grid.Row="0" 
                      Grid.Column="0" 
                      Grid.ColumnSpan="2"
                      Margin="0,1,0,1">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XPoint}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="90"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="30"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="X" 
                       Margin="2" 
                       Grid.Row="0" 
                       Grid.Column="0" 
                       TextAlignment="Left" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBlock Text="Y" 
                       Margin="2" 
                       Grid.Row="1" 
                       Grid.Column="0" 
                       TextAlignment="Left" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBox Text="{Binding X, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                     BorderBrush="{x:Null}" 
                     Grid.Row="0" 
                     Grid.Column="1" 
                     Grid.ColumnSpan="2"
                     TextAlignment="Center" 
                     VerticalAlignment="Center">
            </TextBox>
            <TextBox Text="{Binding Y, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                     BorderBrush="{x:Null}" 
                     Grid.Row="1" 
                     Grid.Column="1" 
                     Grid.ColumnSpan="2"
                     TextAlignment="Center" 
                     VerticalAlignment="Center">
            </TextBox>
            <Expander Header="Shape" IsExpanded="False"
                      Grid.Row="2" 
                      Grid.Column="0" 
                      Grid.ColumnSpan="3">
                <ContentControl Content="{Binding Shape}"/>
            </Expander>
            <Expander Header="State" IsExpanded="True"
                      Grid.Row="3" 
                      Grid.Column="0"
                      Grid.ColumnSpan="3">
                <Control Template="{StaticResource StateControlTemplateKey}"/>
            </Expander>
            <Expander Header="Properties" IsExpanded="False" 
                      Grid.Row="4" 
                      Grid.Column="0"
                      Grid.ColumnSpan="3">
                <Control Template="{StaticResource PropertiesControlTemplateKey}"/>
            </Expander>
        </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XLine}">
        <StackPanel>
            <Expander Header="Style" IsExpanded="True">
                <ContentControl Content="{Binding Style}"/>
            </Expander>
            <Expander Header="Start" IsExpanded="False">
                <ContentControl Content="{Binding Start}"/>
            </Expander>
            <Expander Header="End" IsExpanded="False">
                <ContentControl Content="{Binding End}"/>
            </Expander>
            <Expander Header="State" IsExpanded="True">
                <Control Template="{StaticResource StateControlTemplateKey}"/>
            </Expander>
            <Expander Header="Properties" IsExpanded="True">
                <Control Template="{StaticResource PropertiesControlTemplateKey}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XRectangle}">
        <StackPanel>
            <Expander Header="Style" IsExpanded="True">
                <ContentControl Content="{Binding Style}"/>
            </Expander>
            <Expander Header="TopLeft" IsExpanded="False">
                <ContentControl Content="{Binding TopLeft}"/>
            </Expander>
            <Expander Header="BottomRight" IsExpanded="False">
                <ContentControl Content="{Binding BottomRight}"/>
            </Expander>
            <Expander Header="Fill" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="IsFilled" 
                               Margin="0,0,2,0" 
                               Grid.Row="0"
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox Content=""
                              IsChecked="{Binding IsFilled}"
                              Grid.Row="0" 
                              Grid.Column="1" 
                              Grid.ColumnSpan="2"
                              Margin="0,1,0,1">
                    </CheckBox>
                </Grid>
            </Expander>
            <Expander Header="State" IsExpanded="True">
                <Control Template="{StaticResource StateControlTemplateKey}"/>
            </Expander>
            <Expander Header="Properties" IsExpanded="True">
                <Control Template="{StaticResource PropertiesControlTemplateKey}"/>
            </Expander> 
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XEllipse}">
        <StackPanel>
            <Expander Header="Style" IsExpanded="True">
                <ContentControl Content="{Binding Style}"/>
            </Expander>
            <Expander Header="TopLeft" IsExpanded="False">
                <ContentControl Content="{Binding TopLeft}"/>
            </Expander>
            <Expander Header="BottomRight" IsExpanded="False">
                <ContentControl Content="{Binding BottomRight}"/>
            </Expander>
            <Expander Header="Fill" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="IsFilled" 
                               Margin="0,0,2,0" 
                               Grid.Row="0"
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox Content=""
                              IsChecked="{Binding IsFilled}"
                              Grid.Row="0" 
                              Grid.Column="1" 
                              Grid.ColumnSpan="2"
                              Margin="0,1,0,1">
                    </CheckBox>
                </Grid>
            </Expander>
            <Expander Header="State" IsExpanded="True">
                <Control Template="{StaticResource StateControlTemplateKey}"/>
            </Expander>
            <Expander Header="Properties" IsExpanded="True">
                <Control Template="{StaticResource PropertiesControlTemplateKey}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XArc}">
        <StackPanel>
            <Expander Header="Style" IsExpanded="True">
                <ContentControl Content="{Binding Style}"/>
            </Expander>
            <Expander Header="Point1" IsExpanded="False">
                <ContentControl Content="{Binding Point1}"/>
            </Expander>
            <Expander Header="Point2" IsExpanded="False">
                <ContentControl Content="{Binding Point2}"/>
            </Expander>
            <Expander Header="Point3" IsExpanded="False">
                <ContentControl Content="{Binding Point3}"/>
            </Expander>
            <Expander Header="Point4" IsExpanded="False">
                <ContentControl Content="{Binding Point4}"/>
            </Expander>
            <Expander Header="Fill" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="IsFilled" 
                               Margin="0,0,2,0" 
                               Grid.Row="0"
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox Content=""
                              IsChecked="{Binding IsFilled}"
                              Grid.Row="0" 
                              Grid.Column="1" 
                              Grid.ColumnSpan="2"
                              Margin="0,1,0,1">
                    </CheckBox>
                </Grid>
            </Expander>
            <Expander Header="State" IsExpanded="True">
                <Control Template="{StaticResource StateControlTemplateKey}"/>
            </Expander>
            <Expander Header="Properties" IsExpanded="True">
                <Control Template="{StaticResource PropertiesControlTemplateKey}"/>
            </Expander> 
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XBezier}">
        <StackPanel>
            <Expander Header="Style" IsExpanded="True">
                <ContentControl Content="{Binding Style}"/>
            </Expander>
            <Expander Header="Point1" IsExpanded="False">
                <ContentControl Content="{Binding Point1}"/>
            </Expander>
            <Expander Header="Point2" IsExpanded="False">
                <ContentControl Content="{Binding Point2}"/>
            </Expander>
            <Expander Header="Point3" IsExpanded="False">
                <ContentControl Content="{Binding Point3}"/>
            </Expander>
            <Expander Header="Point4" IsExpanded="False">
                <ContentControl Content="{Binding Point4}"/>
            </Expander>
            <Expander Header="Fill" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="IsFilled" 
                               Margin="0,0,2,0" 
                               Grid.Row="0"
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox Content=""
                              IsChecked="{Binding IsFilled}"
                              Grid.Row="0" 
                              Grid.Column="1" 
                              Grid.ColumnSpan="2"
                              Margin="0,1,0,1">
                    </CheckBox>
                </Grid>
            </Expander>
            <Expander Header="State" IsExpanded="True">
                <Control Template="{StaticResource StateControlTemplateKey}"/>
            </Expander>
            <Expander Header="Properties" IsExpanded="True">
                <Control Template="{StaticResource PropertiesControlTemplateKey}"/>
            </Expander> 
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XQBezier}">
        <StackPanel>
            <Expander Header="Style" IsExpanded="True">
                <ContentControl Content="{Binding Style}"/>
            </Expander>
            <Expander Header="Point1" IsExpanded="False">
                <ContentControl Content="{Binding Point1}"/>
            </Expander>
            <Expander Header="Point2" IsExpanded="False">
                <ContentControl Content="{Binding Point2}"/>
            </Expander>
            <Expander Header="Point3" IsExpanded="False">
                <ContentControl Content="{Binding Point3}"/>
            </Expander>
            <Expander Header="Fill" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="IsFilled" 
                               Margin="0,0,2,0" 
                               Grid.Row="0"
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox Content=""
                              IsChecked="{Binding IsFilled}"
                              Grid.Row="0" 
                              Grid.Column="1" 
                              Grid.ColumnSpan="2"
                              Margin="0,1,0,1">
                    </CheckBox>
                </Grid>
            </Expander>
            <Expander Header="State" IsExpanded="True">
                <Control Template="{StaticResource StateControlTemplateKey}"/>
            </Expander>
            <Expander Header="Properties" IsExpanded="True">
                <Control Template="{StaticResource PropertiesControlTemplateKey}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XText}">
        <StackPanel>
            <Expander Header="Style" IsExpanded="True">
                <ContentControl Content="{Binding Style}"/>
            </Expander>
            <Expander Header="TopLeft" IsExpanded="False">
                <ContentControl Content="{Binding TopLeft}"/>
            </Expander>
            <Expander Header="BottomRight" IsExpanded="False">
                <ContentControl Content="{Binding BottomRight}"/>
            </Expander>
            <Expander Header="Fill" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="IsFilled" 
                               Margin="0,0,2,0" 
                               Grid.Row="0"
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox Content=""
                              IsChecked="{Binding IsFilled}"
                              Grid.Row="0" 
                              Grid.Column="1" 
                              Grid.ColumnSpan="2"
                              Margin="0,1,0,1">
                    </CheckBox>
                </Grid>
            </Expander>
            <Expander Header="Text" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Text, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="TextBinding" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding TextBinding, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="State" IsExpanded="True">
                <Control Template="{StaticResource StateControlTemplateKey}"/>
            </Expander>
            <Expander Header="Properties" IsExpanded="True">
                <Control Template="{StaticResource PropertiesControlTemplateKey}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XImage}">
        <StackPanel>
            <Expander Header="Style" IsExpanded="True">
                <ContentControl Content="{Binding Style}"/>
            </Expander>
            <Expander Header="TopLeft" IsExpanded="False">
                <ContentControl Content="{Binding TopLeft}"/>
            </Expander>
            <Expander Header="BottomRight" IsExpanded="False">
                <ContentControl Content="{Binding BottomRight}"/>
            </Expander>
            <Expander Header="Path" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Path, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Fill" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="IsFilled" 
                               Margin="0,0,2,0" 
                               Grid.Row="0"
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox Content=""
                              IsChecked="{Binding IsFilled}"
                              Grid.Row="0" 
                              Grid.Column="1" 
                              Grid.ColumnSpan="2"
                              Margin="0,1,0,1">
                    </CheckBox>
                </Grid>
            </Expander>
            <Expander Header="State" IsExpanded="True">
                <Control Template="{StaticResource StateControlTemplateKey}"/>
            </Expander>
            <Expander Header="Properties" IsExpanded="True">
                <Control Template="{StaticResource PropertiesControlTemplateKey}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XGroup}">
        <StackPanel>
            <Expander Header="Name" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Shapes" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <ListBox x:Name="shapesListBox"
                             ItemsSource="{Binding Shapes}"
                             BorderBrush="{x:Null}"
                             Grid.Row="0">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" Margin="0,5,0,5"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <ContentControl Content="{Binding ElementName=shapesListBox, Path=SelectedItem}" 
                                    Grid.Row="1" Margin="2">
                    </ContentControl>
                </Grid>
            </Expander>
            <Expander Header="Connectors" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <ListBox x:Name="connectorsListBox"
                             ItemsSource="{Binding Connectors}"
                             BorderBrush="{x:Null}"
                             Grid.Row="0">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" Margin="0,5,0,5"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <ContentControl Content="{Binding ElementName=connectorsListBox, Path=SelectedItem}" 
                                    Grid.Row="1" Margin="2">
                    </ContentControl>
                </Grid>
            </Expander>
            <Expander Header="State" IsExpanded="True">
                <Control Template="{StaticResource StateControlTemplateKey}"/>
            </Expander>
            <Expander Header="Properties" IsExpanded="True">
                <Control Template="{StaticResource PropertiesControlTemplateKey}"/>
            </Expander>
            <Expander Header="Database" IsExpanded="True">
                <Control Template="{StaticResource DatabaseControlTemplateKey}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <ContextMenu x:Key="ContainerContextMenu" 
                 DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
        <MenuItem Header="Te_mplate" 
                  Tag="{Binding Path=DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                  DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" ItemsSource="{Binding Editor.Project.Templates}">
            <MenuItem.ItemContainerStyle>
                <Style TargetType="MenuItem">
                    <Setter Property="Header" Value="{Binding Name}"/>
                    <Setter Property="Command" Value="{Binding Path=Tag.Commands.ApplyTemplateCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}, FallbackValue={x:Null}}"/>
                    <Setter Property="CommandParameter" Value="{Binding}"/>
                    <Setter Property="IsCheckable" Value="True"/>
                    <Setter Property="IsChecked" Value="False"/>
                    <Style.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource ObjectEqualityConverter}">
                                    <Binding Path="Tag.Editor.Project.CurrentContainer.Template" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}"/>
                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter Property="IsChecked" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </MenuItem.ItemContainerStyle>
        </MenuItem>
        <Separator/>
        <MenuItem Header="Insert Container Bef_ore" InputGestureText="" Command="{Binding DataContext.Commands.InsertContainerBeforeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <MenuItem Header="Insert Container Aft_er" InputGestureText="" Command="{Binding DataContext.Commands.InsertContainerAfterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="Cu_t" InputGestureText="Ctrl+X" Command="{Binding DataContext.Commands.CutCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <MenuItem Header="_Copy" InputGestureText="Ctrl+C" Command="{Binding DataContext.Commands.CopyCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <MenuItem Header="_Paste" InputGestureText="Ctrl+V" Command="{Binding DataContext.Commands.PasteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="_Delete" InputGestureText="Del" Command="{Binding DataContext.Commands.DeleteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="E_xport" InputGestureText="Ctrl+E" Command="{Binding DataContext.Commands.ExportCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
    </ContextMenu>
    <ContextMenu x:Key="DocumentContextMenu" 
                 DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
        <MenuItem Header="_Add Container" InputGestureText="Ctrl+N" Command="{Binding DataContext.Commands.AddContainerCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="Insert Document Bef_ore" InputGestureText="" Command="{Binding DataContext.Commands.InsertDocumentBeforeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <MenuItem Header="Insert Document Aft_er" InputGestureText="" Command="{Binding DataContext.Commands.InsertDocumentAfterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="Cu_t" InputGestureText="Ctrl+X" Command="{Binding DataContext.Commands.CutCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <MenuItem Header="_Copy" InputGestureText="Ctrl+C" Command="{Binding DataContext.Commands.CopyCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <MenuItem Header="_Paste" InputGestureText="Ctrl+V" Command="{Binding DataContext.Commands.PasteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="_Delete" InputGestureText="Del" Command="{Binding DataContext.Commands.DeleteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="E_xport" InputGestureText="Ctrl+E" Command="{Binding DataContext.Commands.ExportCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
    </ContextMenu>
    <ContextMenu x:Key="PojectContextMenu" 
                 DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
        <MenuItem Header="_Add Document" InputGestureText="Ctrl+N" Command="{Binding DataContext.Commands.AddDocumentCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="E_xport" InputGestureText="Ctrl+E" Command="{Binding DataContext.Commands.ExportCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
    </ContextMenu>
    <DataTemplate DataType="{x:Type core:Container}">
        <StackPanel>
            <Expander Header="Name" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Size" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Width" 
                               Margin="2" 
                               Grid.Row="0" 
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock Text="Height" 
                               Margin="2" 
                               Grid.Row="1" 
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <TextBox Text="{Binding Width, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="0" 
                             Grid.Column="1" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Center" 
                             VerticalAlignment="Center">
                    </TextBox>
                    <TextBox Text="{Binding Height, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="1" 
                             Grid.Column="1" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Center" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Background" IsExpanded="False">
                <ContentControl Content="{Binding Background}"/>
            </Expander>
            <Expander Header="Template" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox ItemsSource="{Binding Path=DataContext.Editor.Project.Templates, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                              SelectedItem="{Binding Path=DataContext.Template, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Expander}}}" 
                              Grid.Row="0" 
                              Grid.Column="0" 
                              Grid.ColumnSpan="2"
                              Margin="0,1,0,1">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </Grid>
            </Expander>
            <Expander Header="Properties" IsExpanded="True">
                <Control Template="{StaticResource PropertiesControlTemplateKey}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:Document}">
        <StackPanel>
            <Expander Header="Name" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:Project}">
        <StackPanel>
            <Expander Header="Options" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="30"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="SnapToGrid" 
                               Margin="2" 
                               Grid.Row="0"
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock Text="SnapX" 
                               Margin="2" 
                               Grid.Row="1" 
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock Text="SnapY" 
                               Margin="2" 
                               Grid.Row="2" 
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock Text="HitTreshold" 
                               Margin="2" 
                               Grid.Row="3" 
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock Text="DefaultIsFilled" 
                               Margin="2" 
                               Grid.Row="4"
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock Text="TryToConnect" 
                               Margin="2" 
                               Grid.Row="5"
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox Content=""
                              IsChecked="{Binding Options.SnapToGrid}"
                              Grid.Row="0" 
                              Grid.Column="1" 
                              Grid.ColumnSpan="2"
                              Margin="0,2,0,2">
                    </CheckBox>
                    <TextBox Text="{Binding Options.SnapX, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="1" 
                             Grid.Column="1" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Center" 
                             VerticalAlignment="Center">
                    </TextBox>
                    <TextBox Text="{Binding Options.SnapY, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="2" 
                             Grid.Column="1" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Center" 
                             VerticalAlignment="Center">
                    </TextBox>
                    <TextBox Text="{Binding Options.HitTreshold, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="3" 
                             Grid.Column="1" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Center" 
                             VerticalAlignment="Center">
                    </TextBox>
                    <CheckBox Content=""
                              IsChecked="{Binding Options.DefaultIsFilled}"
                              Grid.Row="4" 
                              Grid.Column="1" 
                              Grid.ColumnSpan="2"
                              Margin="0,2,0,2">
                    </CheckBox>
                    <CheckBox Content=""
                              IsChecked="{Binding Options.TryToConnect}"
                              Grid.Row="5" 
                              Grid.Column="1" 
                              Grid.ColumnSpan="2"
                              Margin="0,2,0,2">
                    </CheckBox>  
                </Grid>
            </Expander>
            <!--
            <Expander Header="Selection" IsExpanded="False">
                <Control Template="{StaticResource StyleControlTemplateKey}" 
                         DataContext="{Binding Options.SelectionStyle}" 
                         Margin="2">
                </Control>
            </Expander>
            -->
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                         BorderBrush="{x:Null}" 
                         Grid.Row="0" 
                         Grid.Column="0" 
                         Grid.ColumnSpan="2"
                         TextAlignment="Left" 
                         VerticalAlignment="Center">
                </TextBox>
            </Grid>
        </StackPanel>
    </DataTemplate>
</ResourceDictionary>
