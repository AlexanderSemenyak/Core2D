<!-- Copyright (c) Wiesław Šoltés. All rights reserved. -->
<!-- Licensed under the MIT license. See LICENSE file in the project root for full license information. -->
<UserControl x:Class="Core2D.UI.Perspex.Desktop.Controls.EditorControl"
             xmlns="https://github.com/perspex"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Core2D.UI.Perspex.Desktop;assembly=Core2D.UI.Perspex.Desktop"
             xmlns:converters="clr-namespace:Core2D.UI.Perspex.Desktop.Converters;assembly=Core2D.UI.Perspex.Desktop"
             xmlns:controls="clr-namespace:Core2D.UI.Perspex.Desktop.Controls;assembly=Core2D.UI.Perspex.Desktop"
             xmlns:core="clr-namespace:Core2D;assembly=Core2D">
    <UserControl.Styles>
        <Style Selector="TextBlock.default">
            <Setter Property="Margin" Value="1"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style Selector="TextBlock.left">
            <Setter Property="Margin" Value="3,1,3,1"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style Selector="TextBlock.center">
            <Setter Property="Margin" Value="3,1,3,1"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style Selector="TextBlock.header">
            <Setter Property="Margin" Value="3,1,3,1"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Bold"/>
        </Style>
        <Style Selector="TextBox.default">
            <Setter Property="Margin" Value="3,1,3,1"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Background" Value="#FFDEDEDE"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style Selector="TextBox.left">
            <Setter Property="Margin" Value="3,1,3,1"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Background" Value="#FFDEDEDE"/>
            <!--<Setter Property="TextAlignment" Value="Left"/>-->
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style Selector="TextBox.center">
            <Setter Property="Margin" Value="3,1,3,1"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Background" Value="#FFDEDEDE"/>
            <!--<Setter Property="TextAlignment" Value="Center"/>-->
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style Selector="CheckBox.default">
            <Setter Property="Margin" Value="3,1,3,1"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style Selector="CheckBox.left">
            <Setter Property="Margin" Value="3,1,3,1"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style Selector="DropDown.default">
            <Setter Property="Margin" Value="3,1,3,1"/>
            <Setter Property="Background" Value="#FFDEDEDE"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style Selector="ListBox.default">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style Selector="TreeView.default">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style Selector="TabControl.default">
            <Setter Property="Margin" Value="0"/>
        </Style>
        <Style Selector="TabItem.property">
            <Setter Property="Margin" Value="3"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontWeight" Value="Normal"/>
        </Style>
        <Style Selector="Border.leftTop">
            <Setter Property="Margin" Value="4,6,0,4"/>
            <Setter Property="Padding" Value="3,3,3,3"/>
            <Setter Property="BorderBrush" Value="#FFACACAC"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        <Style Selector="Border.leftBottom">
            <Setter Property="Margin" Value="4,4,0,2"/>
            <Setter Property="Padding" Value="3,3,3,3"/>
            <Setter Property="BorderBrush" Value="#FFACACAC"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        <Style Selector="Border.rightTop">
            <Setter Property="Margin" Value="0,6,4,4"/>
            <Setter Property="Padding" Value="3,3,3,3"/>
            <Setter Property="BorderBrush" Value="#FFACACAC"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        <Style Selector="Border.rightBottom">
            <Setter Property="Margin" Value="0,4,4,2"/>
            <Setter Property="Padding" Value="3,3,3,3"/>
            <Setter Property="BorderBrush" Value="#FFACACAC"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        <Style Selector="Border.drawable">
            <Setter Property="Margin" Value="0,6,0,2"/>
            <Setter Property="Padding" Value="3,3,3,3"/>
            <Setter Property="BorderBrush" Value="#FFACACAC"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style>
        <Style Selector="Border.color">
            <Setter Property="Margin" Value="3,1,3,1"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
        </Style>
        <Style Selector="Button.default">
            <Setter Property="Margin" Value="3,0,3,0"/>
            <Setter Property="FontSize" Value="12"/>
        </Style>
        <Style Selector="ScrollBar.slider">
            <Setter Property="Visibility" Value="Visible"/>
            <Setter Property="Orientation" Value="Horizontal"/>
            <Setter Property="Height" Value="24"/>
            <Setter Property="Margin" Value="3,1,3,1"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
        </Style>
    </UserControl.Styles>
    <UserControl.DataTemplates>
        <!-- style -->
        <DataTemplate DataType="core:ArgbColor">
            <Grid RowDefinitions="20,Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,50,*">
                <Border Classes="color" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="3">
                    <Border.Background>
                        <MultiBinding Converter="{Static converters:ArgbColorToBrushMultiConverter.Instance}">
                            <Binding SourcePropertyPath="A"/>
                            <Binding SourcePropertyPath="R"/>
                            <Binding SourcePropertyPath="G"/>
                            <Binding SourcePropertyPath="B"/>
                        </MultiBinding>
                    </Border.Background>
                </Border>
                <TextBlock Text="A" Classes="left" Grid.Row="1" Grid.Column="0"/>
                <TextBox Text="{Binding Path=A, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                <ScrollBar Classes="slider" Minimum="0" Maximum="255" ViewportSize="10" Grid.Row="1" Grid.Column="2">
                    <ScrollBar.Value>
                        <Binding SourcePropertyPath="A" Mode="TwoWay"/>
                    </ScrollBar.Value>
                </ScrollBar>
                <TextBlock Text="R" Classes="left" Grid.Row="2" Grid.Column="0"/>
                <TextBox Text="{Binding Path=R, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>  
                <ScrollBar Classes="slider" Minimum="0" Maximum="255" ViewportSize="10" Grid.Row="2" Grid.Column="2">
                    <ScrollBar.Value>
                        <Binding SourcePropertyPath="R" Mode="TwoWay"/>
                    </ScrollBar.Value>
                </ScrollBar>
                <TextBlock Text="G" Classes="left" Grid.Row="3" Grid.Column="0"/>
                <TextBox Text="{Binding Path=G, Mode=TwoWay}" Classes="left" Grid.Row="3" Grid.Column="1"/>
                <ScrollBar Classes="slider" Minimum="0" Maximum="255" ViewportSize="10" Grid.Row="3" Grid.Column="2">
                    <ScrollBar.Value>
                        <Binding SourcePropertyPath="G" Mode="TwoWay"/>
                    </ScrollBar.Value>
                </ScrollBar>
                <TextBlock Text="B" Classes="left" Grid.Row="4" Grid.Column="0"/>
                <TextBox Text="{Binding Path=B, Mode=TwoWay}" Classes="left" Grid.Row="4" Grid.Column="1"/>
                <ScrollBar Classes="slider" Minimum="0" Maximum="255" ViewportSize="10" Grid.Row="4" Grid.Column="2">
                    <ScrollBar.Value>
                        <Binding SourcePropertyPath="B" Mode="TwoWay"/>
                    </ScrollBar.Value>
                </ScrollBar>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="core:ArrowStyle">
            <TabControl Classes="default">
                <TabItem Header="Arrow" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,50,*">
                        <TextBlock Text="Arrow Type" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <DropDown Items="{Binding Path=ArrowTypeValues}" SelectedItem="{Binding Path=ArrowType, Mode=TwoWay}" Classes="default" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"/>
                        <TextBlock Text="IsStroked" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                        <TextBlock Text="IsFilled" Classes="left" Grid.Row="2" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsFilled, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"/>
                        <TextBlock Text="RadiusX" Classes="left" Grid.Row="3" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=RadiusX, Mode=TwoWay}" Classes="left" Grid.Row="3" Grid.Column="1"/>
                        <ScrollBar Classes="slider" Minimum="0" Maximum="30" ViewportSize="1" Grid.Row="3" Grid.Column="2">
                            <ScrollBar.Value>
                                <Binding SourcePropertyPath="RadiusX" Mode="TwoWay" Converter="{Static converters:RoundedDoubleToDoubleConverter.Instance}"/>
                            </ScrollBar.Value>
                        </ScrollBar>
                        <TextBlock Text="RadiusY" Classes="left" Grid.Row="4" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=RadiusY, Mode=TwoWay}" Classes="left" Grid.Row="4" Grid.Column="1"/>
                        <ScrollBar Classes="slider" Minimum="0" Maximum="30" ViewportSize="1" Grid.Row="4" Grid.Column="2">
                            <ScrollBar.Value>
                                <Binding SourcePropertyPath="RadiusY" Mode="TwoWay" Converter="{Static converters:RoundedDoubleToDoubleConverter.Instance}"/>
                            </ScrollBar.Value>
                        </ScrollBar>
                    </Grid>
                </TabItem>
                <TabItem Header="Style" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,50,*">
                        <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"/>
                        <TextBlock Text="Thickness" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Thickness, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        <ScrollBar Classes="slider" Minimum="0" Maximum="30" ViewportSize="1" Grid.Row="1" Grid.Column="2">
                            <ScrollBar.Value>
                                <Binding SourcePropertyPath="Thickness" Mode="TwoWay" Converter="{Static converters:RoundedDoubleToDoubleConverter.Instance}"/>
                            </ScrollBar.Value>
                        </ScrollBar>
                        <TextBlock Text="Line Cap" Classes="left" Grid.Row="2" Grid.Column="0"/>
                        <DropDown Items="{Binding Path=LineCapValues}" SelectedItem="{Binding Path=LineCap, Mode=TwoWay}" Classes="default" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"/>
                        <TextBlock Text="Dashes" Classes="left" Grid.Row="3" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Dashes, Mode=TwoWay}" Classes="left" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2"/>
                        <TextBlock Text="Dash Offset" Classes="left" Grid.Row="4" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=DashOffset, Mode=TwoWay}" Classes="left" Grid.Row="4" Grid.Column="1"/>
                        <ScrollBar Classes="slider" Minimum="0" Maximum="20" ViewportSize="1" Grid.Row="4" Grid.Column="2">
                            <ScrollBar.Value>
                                <Binding SourcePropertyPath="DashOffset" Mode="TwoWay" Converter="{Static converters:RoundedDoubleToDoubleConverter.Instance}"/>
                            </ScrollBar.Value>
                        </ScrollBar>
                    </Grid>
                </TabItem>
                <TabItem Header="Stroke" Classes="property">
                    <ContentControl Content="{Binding Path=Stroke, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Fill" Classes="property">
                    <ContentControl Content="{Binding Path=Fill, Mode=TwoWay}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:FontStyle">
            <StackPanel>
                <CheckBox Content="Regular" IsChecked="{Binding Path=Regular, Mode=TwoWay}" Classes="default"/>
                <CheckBox Content="Bold" IsChecked="{Binding Path=Bold, Mode=TwoWay}" Classes="default"/>
                <CheckBox Content="Italic" IsChecked="{Binding Path=Italic, Mode=TwoWay}" Classes="default"/>
                <CheckBox Content="Underline" IsChecked="{Binding Path=Underline, Mode=TwoWay}" Classes="default"/>
                <CheckBox Content="Strikeout" IsChecked="{Binding Path=Strikeout, Mode=TwoWay}" Classes="default"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate DataType="core:TextStyle">
            <StackPanel>
                <Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,50,*">
                    <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                    <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"/>
                    <TextBlock Text="FontName" Classes="left" Grid.Row="1" Grid.Column="0"/>
                    <TextBox Text="{Binding Path=FontName, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"/>
                    <TextBlock Text="FontFile" Classes="left" Grid.Row="2" Grid.Column="0"/>
                    <TextBox Text="{Binding Path=FontFile, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"/>
                    <TextBlock Text="FontSize" Classes="left" Grid.Row="3" Grid.Column="0"/>
                    <TextBox Text="{Binding Path=FontSize, Mode=TwoWay}" Classes="left" Grid.Row="3" Grid.Column="1"/>
                    <ScrollBar Classes="slider" Minimum="0" Maximum="48" ViewportSize="1" Grid.Row="3" Grid.Column="2">
                        <ScrollBar.Value>
                            <Binding SourcePropertyPath="FontSize" Mode="TwoWay" Converter="{Static converters:RoundedDoubleToDoubleConverter.Instance}"/>
                        </ScrollBar.Value>
                    </ScrollBar>
                    <TextBlock Text="FontStyle" Classes="left" Grid.Row="4" Grid.Column="0"/>
                    <ContentControl Content="{Binding Path=FontStyle, Mode=TwoWay}" Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2"/>
                    <TextBlock Text="HAlignment" Classes="left" Grid.Row="5" Grid.Column="0"/>
                    <DropDown Items="{Binding Path=TextHAlignmentValues}" SelectedItem="{Binding Path=TextHAlignment, Mode=TwoWay}" Classes="default" Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2"/>
                    <TextBlock Text="VAlignment" Classes="left" Grid.Row="6" Grid.Column="0"/>
                    <DropDown Items="{Binding Path=TextVAlignmentValues}" SelectedItem="{Binding Path=TextVAlignment, Mode=TwoWay}" Classes="default" Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="2"/>
                </Grid>
            </StackPanel>
        </DataTemplate>
        <DataTemplate DataType="core:LineFixedLength">
            <TabControl Classes="default">
                <TabItem Header="FixedLength" Classes="property">
                    <Grid RowDefinitions="Auto,Auto" ColumnDefinitions="Auto,50,*">
                        <TextBlock Text="Length" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Length, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <ScrollBar Classes="slider" Minimum="0" Maximum="30" ViewportSize="1" Grid.Row="0" Grid.Column="2">
                            <ScrollBar.Value>
                                <Binding SourcePropertyPath="Length" Mode="TwoWay" Converter="{Static converters:RoundedDoubleToDoubleConverter.Instance}"/>
                            </ScrollBar.Value>
                        </ScrollBar>
                        <TextBlock Text="Flags" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <StackPanel Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2">
                            <CheckBox Content="Disabled" IsChecked="{Binding Path=Disabled, Mode=TwoWay}" Classes="default"/>
                            <CheckBox Content="Start" IsChecked="{Binding Path=Start, Mode=TwoWay}" Classes="default"/>
                            <CheckBox Content="End" IsChecked="{Binding Path=End, Mode=TwoWay}" Classes="default"/>
                            <CheckBox Content="Vertical" IsChecked="{Binding Path=Vertical, Mode=TwoWay}" Classes="default"/>
                            <CheckBox Content="Horizontal" IsChecked="{Binding Path=Horizontal, Mode=TwoWay}" Classes="default"/>
                            <CheckBox Content="All" IsChecked="{Binding Path=All, Mode=TwoWay}" Classes="default"/>
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="StartTrigger" Classes="property">
                    <ContentControl Content="{Binding Path=StartTrigger, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="EndTrigger" Classes="property">
                    <ContentControl Content="{Binding Path=EndTrigger, Mode=TwoWay}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:LineStyle">
            <TabControl Classes="default">
                <TabItem Header="LineStyle" Classes="property">
                    <Grid RowDefinitions="Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="FixedLength" Classes="property">
                    <ContentControl Content="{Binding Path=FixedLength, Mode=TwoWay}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:ShapeStyle">
            <TabControl Classes="default">
                <TabItem Header="Style" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,50,*">
                        <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"/>
                        <TextBlock Text="Thickness" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Thickness, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        <ScrollBar Classes="slider" Minimum="0" Maximum="30" ViewportSize="1" Grid.Row="1" Grid.Column="2">
                            <ScrollBar.Value>
                                <Binding SourcePropertyPath="Thickness" Mode="TwoWay" Converter="{Static converters:RoundedDoubleToDoubleConverter.Instance}"/>
                            </ScrollBar.Value>
                        </ScrollBar>
                        <TextBlock Text="Line Cap" Classes="left" Grid.Row="2" Grid.Column="0"/>
                        <DropDown Items="{Binding Path=LineCapValues}" SelectedItem="{Binding Path=LineCap, Mode=TwoWay}" Classes="default" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2"/>
                        <TextBlock Text="Dashes" Classes="left" Grid.Row="3" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Dashes, Mode=TwoWay}" Classes="left" Grid.Row="3" Grid.Column="1" Grid.ColumnSpan="2"/>
                        <TextBlock Text="Dash Offset" Classes="left" Grid.Row="4" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=DashOffset, Mode=TwoWay}" Classes="left" Grid.Row="4" Grid.Column="1"/>
                        <ScrollBar Classes="slider" Minimum="0" Maximum="20" ViewportSize="1" Grid.Row="4" Grid.Column="2">
                            <ScrollBar.Value>
                                <Binding SourcePropertyPath="DashOffset" Mode="TwoWay" Converter="{Static converters:RoundedDoubleToDoubleConverter.Instance}"/>
                            </ScrollBar.Value>
                        </ScrollBar>
                    </Grid>
                </TabItem>
                <TabItem Header="Stroke" Classes="property">
                    <ContentControl Content="{Binding Path=Stroke, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Fill" Classes="property">
                    <ContentControl Content="{Binding Path=Fill, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Text" Classes="property">
                    <ContentControl Content="{Binding Path=TextStyle, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Line" Classes="property">
                    <TabControl Classes="default">
                        <TabItem Header="StartArrow" Classes="property">
                            <ContentControl Content="{Binding Path=StartArrowStyle, Mode=TwoWay}"/>
                        </TabItem>
                        <TabItem Header="EndArrow" Classes="property">
                            <ContentControl Content="{Binding Path=EndArrowStyle, Mode=TwoWay}"/>
                        </TabItem>
                        <TabItem Header="LineStyle" Classes="property">
                            <ContentControl Content="{Binding Path=LineStyle, Mode=TwoWay}"/>
                        </TabItem>
                    </TabControl>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <!-- data -->
        <DataTemplate DataType="core:Record">
            <Grid RowDefinitions="Auto,*" ColumnDefinitions="50*,Auto,50*">
                <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Width="10"/>
                <TextBlock Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" Text="Name" Classes="default"/>
                <TextBlock Grid.Column="2" Grid.Row="0" VerticalAlignment="Center" Text="Value" Classes="default"/>
                <ItemsControl VerticalAlignment="Stretch" Grid.Column="0" Grid.Row="1" Items="{Binding Path=Columns}">
                    <ItemsControl.DataTemplates>
                        <DataTemplate DataType="core:Column">
                            <Grid VerticalAlignment="Top">
                                <TextBox VerticalAlignment="Center" Text="{Binding Path=Name, Mode=TwoWay}" Classes="default"/>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.DataTemplates>
                </ItemsControl>
                <ItemsControl VerticalAlignment="Stretch" Grid.Column="2" Grid.Row="1" Items="{Binding Path=Values}">
                    <ItemsControl.DataTemplates>
                        <DataTemplate DataType="core:Value">
                            <Grid VerticalAlignment="Top">
                                <TextBox VerticalAlignment="Center" Text="{Binding Path=Content, Mode=TwoWay}" Classes="default"/>
                            </Grid>
                        </DataTemplate>
                    </ItemsControl.DataTemplates>
                </ItemsControl>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="core:Database">
            <TabControl Classes="default">
                <TabItem Header="Database" Classes="property">
                    <Grid RowDefinitions="Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Columns" Classes="property">
                    <Grid RowDefinitions="Auto,*" ColumnDefinitions="*" >
                        <TextBlock Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" Text="Name" Classes="default"/>
                        <ItemsControl VerticalAlignment="Stretch" Grid.Column="0" Grid.Row="1" Items="{Binding Path=Columns}">
                            <ItemsControl.DataTemplates>
                                <DataTemplate DataType="core:Column">
                                    <Grid VerticalAlignment="Top" ColumnDefinitions="*,30">
                                        <TextBox VerticalAlignment="Center" Text="{Binding Path=Name, Mode=TwoWay}" Classes="default" Grid.Column="0"/>
                                        <Button VerticalAlignment="Center" Content="-" Classes="default" Grid.Column="1"/>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.DataTemplates>
                        </ItemsControl>
                    </Grid>
                </TabItem>
                <TabItem Header="Record" Classes="property">
                    <ContentControl Content="{Binding Path=CurrentRecord, Mode=TwoWay}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:Data">
            <TabControl Classes="default">
                <TabItem Header="Record" Classes="property">
                    <ContentControl Content="{Binding Path=Record, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Bindings" Classes="property">
                    <Grid RowDefinitions="Auto,*" ColumnDefinitions="50*,Auto,50*">
                        <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Width="10"/>
                        <TextBlock Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" Text="Property" Classes="default"/>
                        <TextBlock Grid.Column="2" Grid.Row="0" VerticalAlignment="Center" Text="Path" Classes="default"/>
                        <ItemsControl VerticalAlignment="Stretch" Grid.Column="0" Grid.Row="1" Items="{Binding Path=Bindings}">
                            <ItemsControl.DataTemplates>
                                <DataTemplate DataType="core:ShapeBinding">
                                    <Grid VerticalAlignment="Top">
                                        <TextBox VerticalAlignment="Center" Text="{Binding Path=Property, Mode=TwoWay}" Classes="default"/>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.DataTemplates>
                        </ItemsControl>
                        <ItemsControl VerticalAlignment="Stretch" Grid.Column="2" Grid.Row="1" Items="{Binding Path=Bindings}">
                            <ItemsControl.DataTemplates>
                                <DataTemplate DataType="core:ShapeBinding">
                                    <Grid VerticalAlignment="Top" ColumnDefinitions="*,30">
                                        <TextBox VerticalAlignment="Center" Text="{Binding Path=Path, Mode=TwoWay}" Classes="default" Grid.Column="0"/>
                                        <Button VerticalAlignment="Center" Content="-" Classes="default" Grid.Column="1"/>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.DataTemplates>
                        </ItemsControl>
                    </Grid>
                </TabItem>
                <TabItem Header="Properties" Classes="property">
                    <Grid RowDefinitions="Auto,*" ColumnDefinitions="50*,Auto,50*">
                        <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Width="10"/>
                        <TextBlock Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" Text="Name" Classes="default"/>
                        <TextBlock Grid.Column="2" Grid.Row="0" VerticalAlignment="Center" Text="Value" Classes="default"/>
                        <ItemsControl VerticalAlignment="Stretch" Grid.Column="0" Grid.Row="1" Items="{Binding Path=Properties}">
                            <ItemsControl.DataTemplates>
                                <DataTemplate DataType="core:ShapeProperty">
                                    <Grid VerticalAlignment="Top">
                                        <TextBox VerticalAlignment="Center" Text="{Binding Path=Name, Mode=TwoWay}" Classes="default"/>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.DataTemplates>
                        </ItemsControl>
                        <ItemsControl VerticalAlignment="Stretch" Grid.Column="2" Grid.Row="1" Items="{Binding Path=Properties}">
                            <ItemsControl.DataTemplates>
                                <DataTemplate DataType="core:ShapeProperty">
                                    <Grid VerticalAlignment="Top" ColumnDefinitions="*,30">
                                        <TextBox VerticalAlignment="Center" Text="{Binding Path=Value, Mode=TwoWay}" Classes="default" Grid.Column="0"/>
                                        <Button VerticalAlignment="Center" Content="-" Classes="default" Grid.Column="1"/>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.DataTemplates>
                        </ItemsControl>
                    </Grid>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <!-- state -->
        <DataTemplate DataType="core:ShapeState">
            <StackPanel>
                <CheckBox Content="Default" IsChecked="{Binding Path=Default, Mode=TwoWay}" Classes="default"/>
                <CheckBox Content="Visible" IsChecked="{Binding Path=Visible, Mode=TwoWay}" Classes="default"/>
                <CheckBox Content="Printable" IsChecked="{Binding Path=Printable, Mode=TwoWay}" Classes="default"/>
                <CheckBox Content="Locked" IsChecked="{Binding Path=Locked, Mode=TwoWay}" Classes="default"/>
                <CheckBox Content="Connector" IsChecked="{Binding Path=Connector, Mode=TwoWay}" Classes="default"/>
                <CheckBox Content="None" IsChecked="{Binding Path=None, Mode=TwoWay}" Classes="default"/>
                <CheckBox Content="Standalone" IsChecked="{Binding Path=Standalone, Mode=TwoWay}" Classes="default"/>
                <CheckBox Content="Input" IsChecked="{Binding Path=Input, Mode=TwoWay}" Classes="default"/>
                <CheckBox Content="Output" IsChecked="{Binding Path=Output, Mode=TwoWay}" Classes="default"/>
            </StackPanel>
        </DataTemplate>
        <!-- shapes -->
        <DataTemplate DataType="core:XPoint">
            <TabControl Classes="default">
                <TabItem Header="Point" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="X" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=X, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        <TextBlock Text="Y" Classes="left" Grid.Row="2" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Y, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="State" Classes="property">
                    <ContentControl Content="{Binding Path=State, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ContentControl Content="{Binding Path=Data, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Shape" Classes="property">
                    <ContentControl Content="{Binding Path=Shape, Mode=TwoWay}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XLine">
            <TabControl Classes="default">
                <TabItem Header="Line" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,*" ColumnDefinitions="Auto,*">
                        <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="IsStroked" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        <TabControl Classes="default" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
                            <TabItem Header="Start" Classes="property">
                                <ContentControl Content="{Binding Path=Start, Mode=TwoWay}"/>
                            </TabItem>
                            <TabItem Header="End" Classes="property">
                                <ContentControl Content="{Binding Path=End, Mode=TwoWay}"/>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </TabItem>
                <TabItem Header="State" Classes="property">
                    <ContentControl Content="{Binding Path=State, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ContentControl Content="{Binding Path=Data, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Style" Classes="property">
                    <ContentControl Content="{Binding Path=Style, Mode=TwoWay}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XText">
            <TabControl Classes="default">
                <TabItem Header="Text" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,*" ColumnDefinitions="Auto,*">
                        <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="Text" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Text, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        <TabControl Classes="default" Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2">
                            <TabItem Header="TopLeft" Classes="property">
                                <ContentControl Content="{Binding Path=TopLeft, Mode=TwoWay}"/>
                            </TabItem>
                            <TabItem Header="BottomRight" Classes="property">
                                <ContentControl Content="{Binding Path=BottomRight, Mode=TwoWay}"/>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </TabItem>
                <TabItem Header="State" Classes="property">
                    <ContentControl Content="{Binding Path=State, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ContentControl Content="{Binding Path=Data, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Style" Classes="property">
                    <ContentControl Content="{Binding Path=Style, Mode=TwoWay}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XRectangle">
            <TabControl Classes="default">
                <TabItem Header="Rectangle" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,Auto,Auto,*" ColumnDefinitions="Auto,*">
                        <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="IsStroked" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        <TextBlock Text="IsFilled" Classes="left" Grid.Row="2" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsFilled, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                        <TextBlock Text="Text" Classes="left" Grid.Row="3" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Text, Mode=TwoWay}" Classes="left" Grid.Row="3" Grid.Column="1"/>
                        <TabControl Classes="default" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2">
                            <TabItem Header="TopLeft" Classes="property">
                                <ContentControl Content="{Binding Path=TopLeft, Mode=TwoWay}"/>
                            </TabItem>
                            <TabItem Header="BottomRight" Classes="property">
                                <ContentControl Content="{Binding Path=BottomRight, Mode=TwoWay}"/>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </TabItem>
                <TabItem Header="Grid" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="IsGrid" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsGrid, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="OffsetX" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=OffsetX, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        <TextBlock Text="OffsetY" Classes="left" Grid.Row="2" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=OffsetY, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                        <TextBlock Text="CellWidth" Classes="left" Grid.Row="3" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=CellWidth, Mode=TwoWay}" Classes="left" Grid.Row="3" Grid.Column="1"/>
                        <TextBlock Text="CellHeight" Classes="left" Grid.Row="4" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=CellHeight, Mode=TwoWay}" Classes="left" Grid.Row="4" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="State" Classes="property">
                    <ContentControl Content="{Binding Path=State, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ContentControl Content="{Binding Path=Data, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Style" Classes="property">
                    <ContentControl Content="{Binding Path=Style, Mode=TwoWay}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XEllipse">
            <TabControl Classes="default">
                <TabItem Header="Ellipse" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,Auto,Auto,*" ColumnDefinitions="Auto,*">
                        <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="IsStroked" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        <TextBlock Text="IsFilled" Classes="left" Grid.Row="2" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsFilled, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                        <TextBlock Text="Text" Classes="left" Grid.Row="3" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Text, Mode=TwoWay}" Classes="left" Grid.Row="3" Grid.Column="1"/>
                        <TabControl Classes="default" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2">
                            <TabItem Header="TopLeft" Classes="property">
                                <ContentControl Content="{Binding Path=TopLeft, Mode=TwoWay}"/>
                            </TabItem>
                            <TabItem Header="BottomRight" Classes="property">
                                <ContentControl Content="{Binding Path=BottomRight, Mode=TwoWay}"/>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </TabItem>
                <TabItem Header="State" Classes="property">
                    <ContentControl Content="{Binding Path=State, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ContentControl Content="{Binding Path=Data, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Style" Classes="property">
                    <ContentControl Content="{Binding Path=Style, Mode=TwoWay}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XImage">
            <TabControl Classes="default">
                <TabItem Header="Image" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,Auto,Auto,*" ColumnDefinitions="Auto,*">
                        <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="IsStroked" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        <TextBlock Text="IsFilled" Classes="left" Grid.Row="2" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsFilled, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                        <TextBlock Text="Key" Classes="left" Grid.Row="3" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Key, Mode=TwoWay}" Classes="left" Grid.Row="3" Grid.Column="1"/>
                        <TabControl Classes="default" Grid.Row="4" Grid.Column="0" Grid.ColumnSpan="2">
                            <TabItem Header="TopLeft" Classes="property">
                                <ContentControl Content="{Binding Path=TopLeft, Mode=TwoWay}"/>
                            </TabItem>
                            <TabItem Header="BottomRight" Classes="property">
                                <ContentControl Content="{Binding Path=BottomRight, Mode=TwoWay}"/>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </TabItem>
                <TabItem Header="State" Classes="property">
                    <ContentControl Content="{Binding Path=State, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ContentControl Content="{Binding Path=Data, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Style" Classes="property">
                    <ContentControl Content="{Binding Path=Style, Mode=TwoWay}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XArc">
            <TabControl Classes="default">
                <TabItem Header="Arc" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,Auto,*" ColumnDefinitions="Auto,*">
                        <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="IsStroked" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        <TextBlock Text="IsFilled" Classes="left" Grid.Row="2" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsFilled, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                        <TabControl Classes="default" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2">
                            <TabItem Header="Point1" Classes="property">
                                <ContentControl Content="{Binding Path=Point1, Mode=TwoWay}"/>
                            </TabItem>
                            <TabItem Header="Point2" Classes="property">
                                <ContentControl Content="{Binding Path=Point2, Mode=TwoWay}"/>
                            </TabItem>
                            <TabItem Header="Point3" Classes="property">
                                <ContentControl Content="{Binding Path=Point3, Mode=TwoWay}"/>
                            </TabItem>
                            <TabItem Header="Point4" Classes="property">
                                <ContentControl Content="{Binding Path=Point4, Mode=TwoWay}"/>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </TabItem>
                <TabItem Header="State" Classes="property">
                    <ContentControl Content="{Binding Path=State, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ContentControl Content="{Binding Path=Data, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Style" Classes="property">
                    <ContentControl Content="{Binding Path=Style, Mode=TwoWay}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XBezier">
            <TabControl Classes="default">
                <TabItem Header="Bezier" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,Auto,*" ColumnDefinitions="Auto,*">
                        <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="IsStroked" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        <TextBlock Text="IsFilled" Classes="left" Grid.Row="2" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsFilled, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                        <TabControl Classes="default" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2">
                            <TabItem Header="Point1" Classes="property">
                                <ContentControl Content="{Binding Path=Point1, Mode=TwoWay}"/>
                            </TabItem>
                            <TabItem Header="Point2" Classes="property">
                                <ContentControl Content="{Binding Path=Point2, Mode=TwoWay}"/>
                            </TabItem>
                            <TabItem Header="Point3" Classes="property">
                                <ContentControl Content="{Binding Path=Point3, Mode=TwoWay}"/>
                            </TabItem>
                            <TabItem Header="Point4" Classes="property">
                                <ContentControl Content="{Binding Path=Point4, Mode=TwoWay}"/>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </TabItem>
                <TabItem Header="State" Classes="property">
                    <ContentControl Content="{Binding Path=State, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ContentControl Content="{Binding Path=Data, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Style" Classes="property">
                    <ContentControl Content="{Binding Path=Style, Mode=TwoWay}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XQBezier">
            <TabControl Classes="default">
                <TabItem Header="QBezier" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,Auto,*" ColumnDefinitions="Auto,*">
                        <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="IsStroked" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        <TextBlock Text="IsFilled" Classes="left" Grid.Row="2" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsFilled, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                        <TabControl Classes="default" Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2">
                            <TabItem Header="Point1" Classes="property">
                                <ContentControl Content="{Binding Path=Point1, Mode=TwoWay}"/>
                            </TabItem>
                            <TabItem Header="Point2" Classes="property">
                                <ContentControl Content="{Binding Path=Point2, Mode=TwoWay}"/>
                            </TabItem>
                            <TabItem Header="Point3" Classes="property">
                                <ContentControl Content="{Binding Path=Point3, Mode=TwoWay}"/>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </TabItem>
                <TabItem Header="State" Classes="property">
                    <ContentControl Content="{Binding Path=State, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ContentControl Content="{Binding Path=Data, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Style" Classes="property">
                    <ContentControl Content="{Binding Path=Style, Mode=TwoWay}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XGroup">
            <TabControl Classes="default">
                <TabItem Header="Group" Classes="property">
                    <Grid RowDefinitions="Auto,*" ColumnDefinitions="Auto,*">
                        <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TabControl Classes="default" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
                            <TabItem Header="Properties" Classes="property">
                                <Grid RowDefinitions="Auto,*" ColumnDefinitions="50*,Auto,50*">
                                    <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Width="10"/>
                                    <TextBlock Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" Text="Name" Classes="default"/>
                                    <TextBlock Grid.Column="2" Grid.Row="0" VerticalAlignment="Center" Text="Value" Classes="default"/>
                                    <ItemsControl VerticalAlignment="Stretch" Grid.Column="0" Grid.Row="1" Items="{Binding Path=ShapesProperties}">
                                        <ItemsControl.DataTemplates>
                                            <DataTemplate DataType="core:ShapeProperty">
                                                <Grid VerticalAlignment="Top">
                                                    <TextBox VerticalAlignment="Center" Text="{Binding Path=Name, Mode=TwoWay}" Classes="default"/>
                                                </Grid>
                                            </DataTemplate>
                                        </ItemsControl.DataTemplates>
                                    </ItemsControl>
                                    <ItemsControl VerticalAlignment="Stretch" Grid.Column="2" Grid.Row="1" Items="{Binding Path=ShapesProperties}">
                                        <ItemsControl.DataTemplates>
                                            <DataTemplate DataType="core:ShapeProperty">
                                                <Grid VerticalAlignment="Top">
                                                    <TextBox VerticalAlignment="Center" Text="{Binding Path=Value, Mode=TwoWay}" Classes="default"/>
                                                </Grid>
                                            </DataTemplate>
                                        </ItemsControl.DataTemplates>
                                    </ItemsControl>
                                </Grid>
                            </TabItem>
                            <TabItem Header="Shapes" Classes="property">
                                <ListBox Items="{Binding Path=Shapes}" Classes="default"/>
                            </TabItem>
                            <TabItem Header="Connectors" Classes="property">
                                <ListBox Items="{Binding Path=Connectors}" Classes="default"/>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </TabItem>
                <TabItem Header="State" Classes="property">
                    <ContentControl Content="{Binding Path=State, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ContentControl Content="{Binding Path=Data, Mode=TwoWay}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XPath">
            <TabControl Classes="default">
                <TabItem Header="Path" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="IsStroked" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        <TextBlock Text="IsFilled" Classes="left" Grid.Row="2" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsFilled, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Geometry" Classes="property">
                    <ContentControl Content="{Binding Path=Geometry, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="State" Classes="property">
                    <ContentControl Content="{Binding Path=State, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ContentControl Content="{Binding Path=Data, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Style" Classes="property">
                    <ContentControl Content="{Binding Path=Style, Mode=TwoWay}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <!-- path -->
        <DataTemplate DataType="core:XPathSize">
            <Grid RowDefinitions="Auto,Auto" ColumnDefinitions="Auto,*">
                <TextBlock Text="Width" Classes="left" Grid.Row="0" Grid.Column="0"/>
                <TextBox Text="{Binding Path=Width, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                <TextBlock Text="Height" Classes="left" Grid.Row="1" Grid.Column="0"/>
                <TextBox Text="{Binding Path=Height, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="core:XArcSegment">
            <TabControl Classes="default">
                <TabItem Header="ArcSegment" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="IsStroked" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="IsSmoothJoin" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsSmoothJoin, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        <TextBlock Text="RotationAngle" Classes="left" Grid.Row="2" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=RotationAngle, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                        <TextBlock Text="IsLargeArc" Classes="left" Grid.Row="3" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsLargeArc, Mode=TwoWay}" Classes="left" Grid.Row="3" Grid.Column="1"/>
                        <TextBlock Text="SweepDirection" Classes="left" Grid.Row="4" Grid.Column="0"/>
                        <DropDown Items="{Binding Path=XSweepDirectionValues}" SelectedItem="{Binding Path=SweepDirection, Mode=TwoWay}" Classes="default" Grid.Row="4" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Point" Classes="property">
                    <ContentControl Content="{Binding Path=Point, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Size" Classes="property">
                    <ContentControl Content="{Binding Path=Size, Mode=TwoWay}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XBezierSegment">
            <TabControl Classes="default">
                <TabItem Header="BezierSegment" Classes="property">
                    <Grid RowDefinitions="Auto,Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="IsStroked" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="IsSmoothJoin" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsSmoothJoin, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Point1" Classes="property">
                    <ContentControl Content="{Binding Path=Point1, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Point2" Classes="property">
                    <ContentControl Content="{Binding Path=Point2, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Point3" Classes="property">
                    <ContentControl Content="{Binding Path=Point3, Mode=TwoWay}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XLineSegment">
            <TabControl Classes="default">
                <TabItem Header="LineSegment" Classes="property">
                    <Grid RowDefinitions="Auto,Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="IsStroked" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="IsSmoothJoin" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsSmoothJoin, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Point" Classes="property">
                    <ContentControl Content="{Binding Path=Point, Mode=TwoWay}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XPolyBezierSegment">
            <TabControl Classes="default">
                <TabItem Header="PolyBezierSegment" Classes="property">
                    <Grid RowDefinitions="Auto,Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="IsStroked" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="IsSmoothJoin" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsSmoothJoin, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Points" Classes="property">
                    <ListBox Items="{Binding Path=Points}" Classes="default"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XPolyLineSegment">
            <TabControl Classes="default">
                <TabItem Header="PolyLineSegment" Classes="property">
                    <Grid RowDefinitions="Auto,Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="IsStroked" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="IsSmoothJoin" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsSmoothJoin, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Points" Classes="property">
                    <ListBox Items="{Binding Path=Points}" Classes="default"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XPolyQuadraticBezierSegment">
            <TabControl Classes="default">
                <TabItem Header="PolyQuadraticBezierSegment" Classes="property">
                    <Grid RowDefinitions="Auto,Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="IsStroked" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="IsSmoothJoin" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsSmoothJoin, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Points" Classes="property">
                    <ListBox Items="{Binding Path=Points}" Classes="default"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XQuadraticBezierSegment">
            <TabControl Classes="default">
                <TabItem Header="QuadraticBezierSegment" Classes="property">
                    <Grid RowDefinitions="Auto,Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="IsStroked" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsStroked, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="IsSmoothJoin" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsSmoothJoin, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Point1" Classes="property">
                    <ContentControl Content="{Binding Path=Point1, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Point2" Classes="property">
                    <ContentControl Content="{Binding Path=Point2, Mode=TwoWay}"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XPathFigure">
            <TabControl Classes="default">
                <TabItem Header="PathFigure" Classes="property">
                    <Grid RowDefinitions="Auto,Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="IsFilled" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsFilled, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="IsClosed" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=IsClosed, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="StartPoint" Classes="property">
                    <ContentControl Content="{Binding Path=StartPoint, Mode=TwoWay}"/>
                </TabItem>
                <TabItem Header="Segments" Classes="property">
                    <ListBox Items="{Binding Path=Segments}" Classes="default"/>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:XPathGeometry">
            <TabControl Classes="default">
                <TabItem Header="PathGeometry" Classes="property">
                    <Grid RowDefinitions="Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="FillRule" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <DropDown Items="{Binding Path=XFillRuleValues}" SelectedItem="{Binding Path=FillRule, Mode=TwoWay}" Classes="default" Grid.Row="0" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Figures" Classes="property">
                    <Grid ColumnDefinitions="*">
                        <ListBox Items="{Binding Path=Figures}" Grid.Column="0" Classes="default"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Tree" Classes="property">
                    <TreeView Items="{Binding Path=Figures}" Classes="default">
                        <TreeView.DataTemplates>
                            <TreeDataTemplate DataType="core:XPathFigure" ItemsSource="{Binding Path=Segments}">
                                <TextBlock Text="{Binding Mode=OneWay, Converter={Static converters:ObjectToTypeStringConverter.Instance}}" Classes="default"/>
                            </TreeDataTemplate>
                            <DataTemplate DataType="core:XPathSegment">
                                <TextBlock Text="{Binding Mode=OneWay, Converter={Static converters:ObjectToTypeStringConverter.Instance}}" Classes="default"/>
                            </DataTemplate>
                        </TreeView.DataTemplates>
                    </TreeView>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <!-- project -->
        <DataTemplate DataType="core:Options">
            <TabControl Classes="default">
                <TabItem Header="General" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,50,*">
                        <TextBlock Text="SnapToGrid" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=SnapToGrid, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2"/>
                        <TextBlock Text="SnapX" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=SnapX, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        <ScrollBar Classes="slider" Minimum="0" Maximum="30" ViewportSize="1" Grid.Row="1" Grid.Column="2">
                            <ScrollBar.Value>
                                <Binding SourcePropertyPath="SnapX" Mode="TwoWay" Converter="{Static converters:RoundedDoubleToDoubleConverter.Instance}"/>
                            </ScrollBar.Value>
                        </ScrollBar>
                        <TextBlock Text="SnapY" Classes="left" Grid.Row="2" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=SnapY, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                        <ScrollBar Classes="slider" Minimum="0" Maximum="30" ViewportSize="1" Grid.Row="2" Grid.Column="2">
                            <ScrollBar.Value>
                                <Binding SourcePropertyPath="SnapY" Mode="TwoWay" Converter="{Static converters:RoundedDoubleToDoubleConverter.Instance}"/>
                            </ScrollBar.Value>
                        </ScrollBar>
                        <TextBlock Text="HitTreshold" Classes="left" Grid.Row="3" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=HitTreshold, Mode=TwoWay}" Classes="left" Grid.Row="3" Grid.Column="1"/>
                        <ScrollBar Classes="slider" Minimum="0" Maximum="30" ViewportSize="1" Grid.Row="3" Grid.Column="2">
                            <ScrollBar.Value>
                                <Binding SourcePropertyPath="HitTreshold" Mode="TwoWay" Converter="{Static converters:RoundedDoubleToDoubleConverter.Instance}"/>
                            </ScrollBar.Value>
                        </ScrollBar>
                        <TextBlock Text="MoveMode" Classes="left" Grid.Row="4" Grid.Column="0"/>
                        <DropDown Items="{Binding Path=MoveModeValues}" SelectedItem="{Binding Path=MoveMode, Mode=TwoWay}" Classes="default" Grid.Row="4" Grid.Column="1" Grid.ColumnSpan="2"/>
                        <TextBlock Text="TryToConnect" Classes="left" Grid.Row="5" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=TryToConnect, Mode=TwoWay}" Classes="left" Grid.Row="5" Grid.Column="1" Grid.ColumnSpan="2"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Defaults" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,Auto,Auto,Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="IsStroked" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=DefaultIsStroked, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TextBlock Text="IsFilled" Classes="left" Grid.Row="1" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=DefaultIsFilled, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                        <TextBlock Text="IsClosed" Classes="left" Grid.Row="2" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=DefaultIsClosed, Mode=TwoWay}" Classes="left" Grid.Row="2" Grid.Column="1"/>
                        <TextBlock Text="IsSmoothJoin" Classes="left" Grid.Row="3" Grid.Column="0"/>
                        <CheckBox IsChecked="{Binding Path=DefaultIsSmoothJoin, Mode=TwoWay}" Classes="left" Grid.Row="3" Grid.Column="1"/>
                        <TextBlock Text="FillRule" Classes="left" Grid.Row="4" Grid.Column="0"/>
                        <DropDown Items="{Binding Path=XFillRuleValues}" SelectedItem="{Binding Path=DefaultFillRule, Mode=TwoWay}" Classes="default" Grid.Row="4" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Advanced" Classes="property">
                    <TabControl Classes="default">
                        <TabItem Header="PointShape" Classes="property">
                            <ScrollViewer>
                                <ContentControl Content="{Binding Path=PointShape, Mode=TwoWay}"/>
                            </ScrollViewer>
                        </TabItem>
                        <TabItem Header="PointStyle" Classes="property">
                            <ScrollViewer>
                                <ContentControl Content="{Binding Path=PointStyle, Mode=TwoWay}"/>
                            </ScrollViewer>
                        </TabItem>
                        <TabItem Header="SelectionStyle" Classes="property">
                            <ScrollViewer>
                                <ContentControl Content="{Binding Path=SelectionStyle, Mode=TwoWay}"/>
                            </ScrollViewer>
                        </TabItem>
                        <TabItem Header="HelperStyle" Classes="property">
                            <ScrollViewer>
                                <ContentControl Content="{Binding Path=HelperStyle, Mode=TwoWay}"/>
                            </ScrollViewer>
                        </TabItem>
                    </TabControl>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:Project">
            <Grid RowDefinitions="Auto,*,Auto" ColumnDefinitions="*">
                <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0"/>
                <TreeView
                    Items="{Binding Path=Documents, Mode=TwoWay}"
                    SelectedItem="{Binding Path=Selected, Mode=TwoWay}"
                    Grid.Row="1"
                    Classes="default">
                    <TreeView.DataTemplates>
                        <TreeDataTemplate DataType="core:Document" ItemsSource="{Binding Path=Containers, Mode=TwoWay}">
                            <TextBlock Text="{Binding Path=Name, Mode=TwoWay}" Classes="default"/>
                        </TreeDataTemplate>
                        <DataTemplate DataType="core:Container">
                            <TextBlock Text="{Binding Path=Name, Mode=TwoWay}" Classes="default"/>
                        </DataTemplate>
                    </TreeView.DataTemplates>
                </TreeView>
                <Grid RowDefinitions="Auto" ColumnDefinitions="Auto,*" Grid.Row="2">
                    <TextBlock Text="Selected" Classes="left" Grid.Row="0" Grid.Column="0"/>
                    <TextBox Text="{Binding Path=Selected.Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                </Grid>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="core:Document">
            <TabControl Classes="default">
                <TabItem Header="Document" Classes="property">
                    <Grid RowDefinitions="Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Containers" Classes="property">
                    <ListBox Items="{Binding Path=Containers}" Classes="default">
                        <ListBox.DataTemplates>
                            <DataTemplate DataType="core:Container">
                                <TextBlock Text="{Binding Path=Name}" Classes="default"/>
                            </DataTemplate>
                        </ListBox.DataTemplates>
                    </ListBox>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:Container">
            <TabControl Classes="default">
                <TabItem Header="Container" Classes="property">
                    <Grid RowDefinitions="Auto,*" ColumnDefinitions="Auto,*">
                        <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        <TabControl IsVisible="{Binding IsTemplate}" Classes="default" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
                            <TabItem Header="Size" Classes="property">
                                <Grid RowDefinitions="Auto,Auto" ColumnDefinitions="Auto,50,*">
                                    <TextBlock Text="Width" Classes="left" Grid.Row="0" Grid.Column="0"/>
                                    <TextBox Text="{Binding Path=Width, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                                    <ScrollBar Classes="slider" Minimum="0" Maximum="4020" ViewportSize="1" Grid.Row="0" Grid.Column="2">
                                        <ScrollBar.Value>
                                            <Binding SourcePropertyPath="Width" Mode="TwoWay" Converter="{Static converters:RoundedDoubleToDoubleConverter.Instance}"/>
                                        </ScrollBar.Value>
                                    </ScrollBar>
                                    <TextBlock Text="Height" Classes="left" Grid.Row="1" Grid.Column="0"/>
                                    <TextBox Text="{Binding Path=Height, Mode=TwoWay}" Classes="left" Grid.Row="1" Grid.Column="1"/>
                                    <ScrollBar Classes="slider" Minimum="0" Maximum="4020" ViewportSize="1" Grid.Row="1" Grid.Column="2">
                                        <ScrollBar.Value>
                                            <Binding SourcePropertyPath="Height" Mode="TwoWay" Converter="{Static converters:RoundedDoubleToDoubleConverter.Instance}"/>
                                        </ScrollBar.Value>
                                    </ScrollBar>
                                </Grid>
                            </TabItem>
                            <TabItem Header="Background" Classes="property">
                                <ContentControl Content="{Binding Path=Background, Mode=TwoWay}"/>
                            </TabItem>
                        </TabControl>
                    </Grid>
                </TabItem>
                <TabItem IsVisible="{Binding !IsTemplate}" Header="Properties" Classes="property">
                    <Grid RowDefinitions="Auto,*" ColumnDefinitions="50*,Auto,50*">
                        <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="2" Width="10"/>
                        <TextBlock Grid.Column="0" Grid.Row="0" VerticalAlignment="Center" Text="Name" Classes="default"/>
                        <TextBlock Grid.Column="2" Grid.Row="0" VerticalAlignment="Center" Text="Value" Classes="default"/>
                        <ItemsControl VerticalAlignment="Stretch" Grid.Column="0" Grid.Row="1" Items="{Binding Path=Properties}">
                            <ItemsControl.DataTemplates>
                                <DataTemplate DataType="core:ShapeProperty">
                                    <Grid VerticalAlignment="Top">
                                        <TextBox VerticalAlignment="Center" Text="{Binding Path=Name, Mode=TwoWay}" Classes="default"/>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.DataTemplates>
                        </ItemsControl>
                        <ItemsControl VerticalAlignment="Stretch" Grid.Column="2" Grid.Row="1" Items="{Binding Path=Properties}">
                            <ItemsControl.DataTemplates>
                                <DataTemplate DataType="core:ShapeProperty">
                                    <Grid VerticalAlignment="Top">
                                        <TextBox VerticalAlignment="Center" Text="{Binding Path=Value, Mode=TwoWay}" Classes="default"/>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.DataTemplates>
                        </ItemsControl>
                    </Grid>
                </TabItem>
                <TabItem Header="Layers" Classes="property">
                    <Grid RowDefinitions="Auto,*" ColumnDefinitions="*">
                        <Grid RowDefinitions="Auto" ColumnDefinitions="Auto,*" Grid.Row="0">
                            <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=CurrentLayer.Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        </Grid>
                        <ListBox
                            Items="{Binding Path=Layers}"
                            SelectedItem="{Binding Path=CurrentLayer, Mode=TwoWay}"
                            Grid.Row="1"
                            Classes="default">
                            <ListBox.DataTemplates>
                                <DataTemplate DataType="core:Layer">
                                    <Grid ColumnDefinitions="Auto,*">
                                        <CheckBox Content="" IsChecked="{Binding Path=IsVisible, Mode=TwoWay}" Classes="default" Grid.Column="0"/>
                                        <TextBlock Text="{Binding Path=Name}" Classes="default" Grid.Column="1"/>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.DataTemplates>
                        </ListBox>
                    </Grid>
                </TabItem>
                <TabItem Header="Shapes" Classes="property">
                    <ListBox
                        Items="{Binding Path=CurrentLayer.Shapes}"
                        SelectedItem="{Binding Path=CurrentShape, Mode=TwoWay}"
                        Classes="default">
                        <ListBox.DataTemplates>
                            <DataTemplate DataType="core:BaseShape">
                                <TextBlock Text="{Binding Mode=OneWay, Converter={Static converters:ObjectToTypeStringConverter.Instance}}" Classes="default"/>
                            </DataTemplate>
                        </ListBox.DataTemplates>
                    </ListBox>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:StyleLibrary">
            <TabControl Classes="default">
                <TabItem Header="StyleLibrary" Classes="property">
                    <Grid RowDefinitions="Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Styles" Classes="property">
                    <ListBox Items="{Binding Path=Styles}" Classes="default">
                        <ListBox.DataTemplates>
                            <DataTemplate DataType="core:ShapeStyle">
                                <TextBlock Text="{Binding Path=Name}" Classes="default"/>
                            </DataTemplate>
                        </ListBox.DataTemplates>
                    </ListBox>
                </TabItem>
            </TabControl>
        </DataTemplate>
        <DataTemplate DataType="core:GroupLibrary">
            <TabControl Classes="default">
                <TabItem Header="GroupLibrary" Classes="property">
                    <Grid RowDefinitions="Auto" ColumnDefinitions="Auto,*">
                        <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Groups" Classes="property">
                    <ListBox Items="{Binding Path=Groups}" Classes="default">
                        <ListBox.DataTemplates>
                            <DataTemplate DataType="core:XGroup">
                                <TextBlock Text="{Binding Path=Name}" Classes="default"/>
                            </DataTemplate>
                        </ListBox.DataTemplates>
                    </ListBox>
                </TabItem>
            </TabControl>
        </DataTemplate>
    </UserControl.DataTemplates>
    <Grid RowDefinitions="50*,50*" ColumnDefinitions="200,Auto,*,Auto,250">
        <Border Classes="leftTop" Grid.Row="0" Grid.Column="0">
            <TabControl Classes="default">
                <TabItem Header="Project" Classes="property">
                    <Grid RowDefinitions="Auto,*">
                        <Menu Grid.Row="0" HorizontalAlignment="Right">
                            <MenuItem Header="+" Command="{Binding Path=Commands.NewCommand}" CommandParameter="{Binding Path=Editor.Project.Selected}"/>
                            <MenuItem Header="-" Command="{Binding Path=Commands.DeleteCommand}" CommandParameter="{Binding Path=Editor.Project.Selected}"/>
                        </Menu>
                        <ContentControl Content="{Binding Path=Editor.Project, Mode=TwoWay}" Grid.Row="1"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Options" Classes="property">
                    <ScrollViewer>
                        <ContentControl Content="{Binding Path=Editor.Project.Options, Mode=TwoWay}"/>
                    </ScrollViewer>
                </TabItem>
            </TabControl>
        </Border>
        <Border Classes="leftBottom" Grid.Row="1" Grid.Column="0">
            <TabControl Classes="default">
                <TabItem Header="Groups" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,Auto,Auto,*">
                        <Menu Grid.Row="0" HorizontalAlignment="Right">
                            <MenuItem Header="+" Command="{Binding Path=Commands.AddGroupLibraryCommand}"/>
                            <MenuItem Header="-" Command="{Binding Path=Commands.RemoveGroupLibraryCommand}"/>
                        </Menu>
                        <Grid RowDefinitions="Auto" ColumnDefinitions="Auto,*" Grid.Row="1">
                            <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=Editor.Project.CurrentGroupLibrary.Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        </Grid>
                        <DropDown
                            Items="{Binding Path=Editor.Project.GroupLibraries}"
                            SelectedItem="{Binding Path=Editor.Project.CurrentGroupLibrary, Mode=TwoWay}"
                            Classes="default"
                            Grid.Row="2">
                            <DropDown.DataTemplates>
                                <DataTemplate DataType="core:GroupLibrary">
                                    <TextBlock Text="{Binding Path=Name}" Classes="default"/>
                                </DataTemplate>
                            </DropDown.DataTemplates>
                        </DropDown>
                        <Menu Grid.Row="3" HorizontalAlignment="Right">
                            <MenuItem Header="+" Command="{Binding Path=Commands.AddGroupCommand}"/>
                            <MenuItem Header="-" Command="{Binding Path=Commands.RemoveGroupCommand}"/>
                        </Menu>
                        <ListBox
                            Items="{Binding Path=Editor.Project.CurrentGroupLibrary.Groups}"
                            SelectedItem="{Binding Path=Editor.Project.CurrentGroupLibrary.CurrentGroup, Mode=TwoWay}"
                            Grid.Row="4"
                            Classes="default">
                            <ListBox.DataTemplates>
                                <DataTemplate DataType="core:XGroup">
                                    <TextBlock Text="{Binding Path=Name}" Classes="default"/>
                                </DataTemplate>
                            </ListBox.DataTemplates>
                        </ListBox>
                    </Grid>
                </TabItem>
                <TabItem Header="Database" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,*">
                        <Menu Grid.Row="0" HorizontalAlignment="Right">
                            <MenuItem Header="+" Command="{Binding Path=Commands.AddDatabaseCommand}"/>
                            <MenuItem Header="-" Command="{Binding Path=Commands.RemoveDatabaseCommand}" CommandParameter="{Binding Path=Editor.Project.CurrentDatabase}"/>
                        </Menu>
                        <DropDown
                            Items="{Binding Path=Editor.Project.Databases}"
                            SelectedItem="{Binding Path=Editor.Project.CurrentDatabase, Mode=TwoWay}"
                            Grid.Row="1"
                            Classes="default">
                            <DropDown.DataTemplates>
                                <DataTemplate DataType="core:Database">
                                    <TextBlock Text="{Binding Path=Name}" Classes="default"/>
                                </DataTemplate>
                            </DropDown.DataTemplates>
                        </DropDown>
                        <ContentControl Content="{Binding Path=Editor.Project.CurrentDatabase, Mode=TwoWay}" Grid.Row="2"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Records" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,*">
                        <Menu Grid.Row="0" HorizontalAlignment="Right">
                            <MenuItem Header="+" Command="{Binding Path=Commands.AddRecordCommand}"/>
                            <MenuItem Header="-" Command="{Binding Path=Commands.RemoveRecordCommand}"/>
                        </Menu>
                        <DropDown
                            Items="{Binding Path=Editor.Project.Databases}"
                            SelectedItem="{Binding Path=Editor.Project.CurrentDatabase, Mode=TwoWay}"
                            Grid.Row="1"
                            Classes="default">
                            <DropDown.DataTemplates>
                                <DataTemplate DataType="core:Database">
                                    <TextBlock Text="{Binding Path=Name}" Classes="default"/>
                                </DataTemplate>
                            </DropDown.DataTemplates>
                        </DropDown>
                        <ListBox
                            Items="{Binding Path=Editor.Project.CurrentDatabase.Records}"
                            SelectedItem="{Binding Path=Editor.Project.CurrentDatabase.CurrentRecord, Mode=TwoWay}"
                            Grid.Row="2"
                            Classes="default">
                            <ListBox.DataTemplates>
                                <DataTemplate DataType="core:Record">
                                    <TextBlock Text="{Binding Mode=OneWay, Converter={Static converters:ObjectToTypeStringConverter.Instance}}" Classes="default"/>
                                </DataTemplate>
                            </ListBox.DataTemplates>
                        </ListBox>
                    </Grid>
                </TabItem>
            </TabControl>
        </Border>
        <GridSplitter Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Width="8"/>
        <Grid Grid.Row="0" Grid.RowSpan="2" Grid.Column="2">
            <Border Classes="drawable">
                <controls:DrawableControl ClipToBounds="True" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
            </Border>
        </Grid>
        <GridSplitter Grid.Row="0" Grid.RowSpan="2" Grid.Column="3" Width="8"/>
        <Border Classes="rightTop" Grid.Row="0" Grid.Column="4">
            <TabControl Classes="default">
                <TabItem Header="Styles" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,Auto,Auto,*">
                        <Menu Grid.Row="0" HorizontalAlignment="Right">
                            <MenuItem Header="+" Command="{Binding Path=Commands.AddStyleLibraryCommand}"/>
                            <MenuItem Header="-" Command="{Binding Path=Commands.RemoveStyleLibraryCommand}"/>
                        </Menu>
                        <Grid RowDefinitions="Auto" ColumnDefinitions="Auto,*" Grid.Row="1">
                            <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=Editor.Project.CurrentStyleLibrary.Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        </Grid>
                        <DropDown
                            Items="{Binding Path=Editor.Project.StyleLibraries}"
                            SelectedItem="{Binding Path=Editor.Project.CurrentStyleLibrary, Mode=TwoWay}"
                            Grid.Row="2"
                            Classes="default">
                            <DropDown.DataTemplates>
                                <DataTemplate DataType="core:StyleLibrary">
                                    <TextBlock Text="{Binding Path=Name}" Classes="default"/>
                                </DataTemplate>
                            </DropDown.DataTemplates>
                        </DropDown>
                        <Menu Grid.Row="3" HorizontalAlignment="Right">
                            <MenuItem Header="+" Command="{Binding Path=Commands.AddStyleCommand}"/>
                            <MenuItem Header="-" Command="{Binding Path=Commands.RemoveStyleCommand}"/>
                        </Menu>
                        <ListBox
                            Items="{Binding Path=Editor.Project.CurrentStyleLibrary.Styles}"
                            SelectedItem="{Binding Path=Editor.Project.CurrentStyleLibrary.CurrentStyle, Mode=TwoWay}"
                            Grid.Row="4"
                            Classes="default">
                            <ListBox.DataTemplates>
                                <DataTemplate DataType="core:ShapeStyle">
                                    <TextBlock Text="{Binding Path=Name}" Classes="default"/>
                                </DataTemplate>
                            </ListBox.DataTemplates>
                        </ListBox>
                    </Grid>
                </TabItem>
                <TabItem Header="Templates" Classes="property">
                    <Grid RowDefinitions="Auto,Auto,*">
                        <Menu Grid.Row="0" HorizontalAlignment="Right">
                            <MenuItem Header="edit" Command="{Binding Path=Commands.EditTemplateCommand}"/>
                            <MenuItem Header="+" Command="{Binding Path=Commands.AddTemplateCommand}"/>
                            <MenuItem Header="-" Command="{Binding Path=Commands.RemoveTemplateCommand}"/>
                        </Menu>
                        <Grid RowDefinitions="Auto" ColumnDefinitions="Auto,*" Grid.Row="1">
                            <TextBlock Text="Name" Classes="left" Grid.Row="0" Grid.Column="0"/>
                            <TextBox Text="{Binding Path=Editor.Project.CurrentTemplate.Name, Mode=TwoWay}" Classes="left" Grid.Row="0" Grid.Column="1"/>
                        </Grid>
                        <ListBox
                            Items="{Binding Path=Editor.Project.Templates}"
                            SelectedItem="{Binding Path=Editor.Project.CurrentTemplate, Mode=TwoWay}"
                            Grid.Row="2"
                            Classes="default">
                            <ListBox.DataTemplates>
                                <DataTemplate DataType="core:Container">
                                    <TextBlock Text="{Binding Path=Name, Mode=TwoWay}" Classes="default"/>
                                </DataTemplate>
                            </ListBox.DataTemplates>
                        </ListBox>
                    </Grid>
                </TabItem>
            </TabControl>
        </Border>
        <Border Classes="rightBottom" Grid.Row="1" Grid.Column="4">
            <TabControl Classes="default">
                <TabItem Header="Shape" Classes="property">
                    <ScrollViewer>
                        <ContentControl Content="{Binding Path=Editor.Project.CurrentContainer.CurrentShape, Mode=TwoWay}"/>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="Data" Classes="property">
                    <ScrollViewer>
                        <ContentControl Content="{Binding Path=Editor.Renderers[0].State.SelectedShape.Data, Mode=TwoWay}"/>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="Style" Classes="property">
                    <ScrollViewer>
                        <ContentControl Content="{Binding Path=Editor.Project.CurrentStyleLibrary.CurrentStyle, Mode=TwoWay}"/>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="Container" Classes="property">
                    <Grid RowDefinitions="Auto,*" ColumnDefinitions="Auto,*">
                        <TextBlock Text="Template" Classes="left" Grid.Row="0" Grid.Column="0"/>
                        <DropDown
                            Items="{Binding Path=Editor.Project.Templates}"
                            SelectedItem="{Binding Path=Editor.Project.CurrentContainer.Template, Mode=TwoWay}"
                            Grid.Row="0" 
                            Grid.Column="1"
                            Classes="default">
                            <DropDown.DataTemplates>
                                <DataTemplate DataType="core:Container">
                                    <TextBlock Text="{Binding Path=Name}" Classes="default"/>
                                </DataTemplate>
                            </DropDown.DataTemplates>
                        </DropDown>
                        <ScrollViewer Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
                            <ContentControl Content="{Binding Path=Editor.Project.CurrentContainer, Mode=TwoWay}"/>
                        </ScrollViewer>
                    </Grid>
                </TabItem>
                <TabItem Header="Template" Classes="property">
                    <ScrollViewer>
                        <ContentControl Content="{Binding Path=Editor.Project.CurrentTemplate, Mode=TwoWay}"/>
                    </ScrollViewer>
                </TabItem>
            </TabControl>
        </Border>
    </Grid>
</UserControl>
