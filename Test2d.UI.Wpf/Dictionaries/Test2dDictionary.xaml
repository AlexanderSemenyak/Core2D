<!-- Copyright (c) Wiesław Šoltés. All rights reserved. -->
<!-- Licensed under the MIT license. See LICENSE file in the project root for full license information. -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:core="clr-namespace:Test2d;assembly=Test2d"
                    xmlns:converters="clr-namespace:Test.Converters"
                    xmlns:controls="clr-namespace:Test.Controls">
    <!-- converters -->
    <converters:ArgbColorToBrushConverter x:Key="ArgbColorToBrushConverter"/>
    <converters:ArgbColorToBrushMultiConverter x:Key="ArgbColorToBrushMultiConverter"/>
    <converters:DoubleToStringConverter x:Key="DoubleToStringConverter"/>
    <converters:FlagsEnumConverter x:Key="FontStyleFlagsEnumConverter"/>
    <converters:FlagsEnumConverter x:Key="StateFlagsEnumConverter"/>
    <converters:FlagsEnumConverter x:Key="MagLengthFlagsEnumConverter"/>
    <converters:FlagsEnumConverter x:Key="StartStateFlagsEnumConverter"/>
    <converters:FlagsEnumConverter x:Key="EndStateFlagsEnumConverter"/>
    <converters:ObjectEqualityConverter x:Key="ObjectEqualityConverter"/>
    <converters:ColumnParameterConverter x:Key="ColumnParameterConverter"/>
    <converters:RecordParameterConverter x:Key="RecordParameterConverter"/>
    <converters:ValueParameterConverter x:Key="ValueParameterConverter"/>
    <converters:ShapeBindingParameterConverter x:Key="ShapeBindingParameterConverter"/>
    <converters:ShapePropertyParameterConverter x:Key="ShapePropertyParameterConverter"/>
    <converters:ZoomScaleConverter x:Key="ZoomScaleConverter"/>
    <!-- enums -->
    <ObjectDataProvider x:Key="MoveModeValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="core:MoveMode"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="TextHAlignmentValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="core:TextHAlignment"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="TextVAlignmentValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="core:TextVAlignment"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="ArrowTypeValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="core:ArrowType"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="LineCapValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="core:LineCap"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="XSweepDirectionValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="core:XSweepDirection"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <ObjectDataProvider x:Key="XFillRuleValues" MethodName="GetValues" ObjectType="{x:Type sys:Enum}">
        <ObjectDataProvider.MethodParameters>
            <x:Type TypeName="core:XFillRule"/>
        </ObjectDataProvider.MethodParameters>
    </ObjectDataProvider>
    <!-- brushes -->
    <SolidColorBrush x:Key="DarkSquareColor" Color="DarkGray" />
    <SolidColorBrush x:Key="LightSquareColor" Color="LightGray" />
    <DrawingBrush x:Key="CheckerBoard" Viewport="0,0,20,20" ViewportUnits="Absolute" Stretch="None" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="{DynamicResource DarkSquareColor}">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0,10,10"/>
                            <RectangleGeometry Rect="10,10,10,10"/>
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
                <GeometryDrawing Brush="{DynamicResource LightSquareColor}">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="10,0,10,10"/>
                            <RectangleGeometry Rect="0,10,10,10"/>
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>
    <!-- path -->
    <DataTemplate DataType="{x:Type core:XPathPoint}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="90"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="40"/>
            </Grid.ColumnDefinitions>
            <TextBlock 
                Text="X" 
                Margin="5,2,5,2" 
                Grid.Row="0" 
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBlock 
                Text="Y" 
                Margin="5,2,5,2" 
                Grid.Row="1" 
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBox 
                Text="{Binding X, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                BorderBrush="{x:Null}"
                Margin="5,2,5,2"
                Grid.Row="0" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                TextAlignment="Center" 
                VerticalAlignment="Center">
            </TextBox>
            <TextBox 
                Text="{Binding Y, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                BorderBrush="{x:Null}" 
                Margin="5,2,5,2"
                Grid.Row="1" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                TextAlignment="Center" 
                VerticalAlignment="Center">
            </TextBox>
        </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XPathSize}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="90"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="40"/>
            </Grid.ColumnDefinitions>
            <TextBlock 
                Text="Width" 
                Margin="5,2,5,2" 
                Grid.Row="0" 
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBlock 
                Text="Height" 
                Margin="5,2,5,2" 
                Grid.Row="1" 
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBox 
                Text="{Binding Width, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                BorderBrush="{x:Null}"
                Margin="5,2,5,2"
                Grid.Row="0" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                TextAlignment="Center" 
                VerticalAlignment="Center">
            </TextBox>
            <TextBox 
                Text="{Binding Height, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                BorderBrush="{x:Null}" 
                Margin="5,2,5,2"
                Grid.Row="1" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                TextAlignment="Center" 
                VerticalAlignment="Center">
            </TextBox>
        </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XPathRect}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="90"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="40"/>
            </Grid.ColumnDefinitions>
            <TextBlock 
                Text="X" 
                Margin="5,2,5,2" 
                Grid.Row="0" 
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBlock 
                Text="Y" 
                Margin="5,2,5,2" 
                Grid.Row="1" 
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBlock 
                Text="Width" 
                Margin="5,2,5,2" 
                Grid.Row="2" 
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBlock 
                Text="Height" 
                Margin="5,2,5,2" 
                Grid.Row="3" 
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBox 
                Text="{Binding X, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                BorderBrush="{x:Null}"
                Margin="5,2,5,2"
                Grid.Row="0" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                TextAlignment="Center" 
                VerticalAlignment="Center">
            </TextBox>
            <TextBox 
                Text="{Binding Y, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                BorderBrush="{x:Null}" 
                Margin="5,2,5,2"
                Grid.Row="1" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                TextAlignment="Center" 
                VerticalAlignment="Center">
            </TextBox>
            <TextBox 
                Text="{Binding Width, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                BorderBrush="{x:Null}"
                Margin="5,2,5,2"
                Grid.Row="2" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                TextAlignment="Center" 
                VerticalAlignment="Center">
            </TextBox>
            <TextBox 
                Text="{Binding Height, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                BorderBrush="{x:Null}" 
                Margin="5,2,5,2"
                Grid.Row="3" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                TextAlignment="Center" 
                VerticalAlignment="Center">
            </TextBox>
        </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XArcSegment}">
        <StackPanel>
            <Expander Header="Point" IsExpanded="True">
                <ContentControl Content="{Binding Point}"/>
            </Expander>
            <Expander Header="Size" IsExpanded="True">
                <ContentControl Content="{Binding Size}"/>
            </Expander>
            <Expander Header="Properties" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock 
                        Text="RotationAngle" 
                        Margin="5,2,5,2" 
                        Grid.Row="0"
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock 
                        Text="IsLargeArc" 
                        Margin="5,2,5,2" 
                        Grid.Row="1"
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock 
                        Text="SweepDirection" 
                        Margin="5,2,5,2" 
                        Grid.Row="2" 
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock 
                        Text="IsStroked" 
                        Margin="5,2,5,2" 
                        Grid.Row="3"
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock 
                        Text="IsSmoothJoin" 
                        Margin="5,2,5,2" 
                        Grid.Row="4"
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBlock>
                    <TextBox 
                        Text="{Binding RotationAngle, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                        BorderBrush="{x:Null}"
                        Margin="5,2,5,2" 
                        Grid.Row="0" 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2"
                        TextAlignment="Center" 
                        VerticalAlignment="Center">
                    </TextBox>
                    <CheckBox 
                        Content=""
                        IsChecked="{Binding IsLargeArc}"
                        Margin="5,2,5,2" 
                        Grid.Row="1" 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2">
                    </CheckBox>
                    <ComboBox 
                        ItemsSource="{Binding Source={StaticResource ResourceKey=XSweepDirectionValues}}" 
                        SelectedItem="{Binding SweepDirection}" 
                        Margin="5,2,5,2" 
                        Grid.Row="2" 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2">
                    </ComboBox>
                    <CheckBox 
                        Content=""
                        IsChecked="{Binding IsStroked}"
                        Margin="5,2,5,2" 
                        Grid.Row="3" 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2">
                    </CheckBox>
                    <CheckBox 
                        Content=""
                        IsChecked="{Binding IsSmoothJoin}"
                        Margin="5,2,5,2" 
                        Grid.Row="4" 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2">
                    </CheckBox>
                </Grid>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XBezierSegment}">
        <StackPanel>
            <Expander Header="Point1" IsExpanded="True">
                <ContentControl Content="{Binding Point1}"/>
            </Expander>
            <Expander Header="Point2" IsExpanded="True">
                <ContentControl Content="{Binding Point2}"/>
            </Expander>
            <Expander Header="Point3" IsExpanded="True">
                <ContentControl Content="{Binding Point3}"/>
            </Expander>
            <Expander Header="Properties" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock 
                        Text="IsStroked" 
                        Margin="5,2,5,2" 
                        Grid.Row="0"
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock 
                        Text="IsSmoothJoin" 
                        Margin="5,2,5,2" 
                        Grid.Row="1"
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox 
                        Content=""
                        IsChecked="{Binding IsStroked}"
                        Margin="5,2,5,2" 
                        Grid.Row="0" 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2">
                    </CheckBox>
                    <CheckBox 
                        Content=""
                        IsChecked="{Binding IsSmoothJoin}"
                        Margin="5,2,5,2" 
                        Grid.Row="1" 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2">
                    </CheckBox>
                </Grid>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XLineSegment}">
        <StackPanel>
            <Expander Header="Point" IsExpanded="True">
                <ContentControl Content="{Binding Point}"/>
            </Expander>
            <Expander Header="Properties" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock 
                        Text="IsStroked" 
                        Margin="5,2,5,2" 
                        Grid.Row="0"
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock 
                        Text="IsSmoothJoin" 
                        Margin="5,2,5,2" 
                        Grid.Row="1"
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox 
                        Content=""
                        IsChecked="{Binding IsStroked}"
                        Margin="5,2,5,2" 
                        Grid.Row="0" 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2">
                    </CheckBox>
                    <CheckBox 
                        Content=""
                        IsChecked="{Binding IsSmoothJoin}"
                        Margin="5,2,5,2" 
                        Grid.Row="1" 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2">
                    </CheckBox>
                </Grid>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XPolyBezierSegment}">
        <StackPanel>
            <Expander Header="Points" IsExpanded="True">
                <ListBox
                    ItemsSource="{Binding Points}"
                    BorderBrush="{x:Null}"
                    BorderThickness="0"
                    HorizontalContentAlignment="Stretch"
                    Height="140">
                </ListBox>
            </Expander>
            <Expander Header="Properties" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock 
                        Text="IsStroked" 
                        Margin="5,2,5,2" 
                        Grid.Row="0"
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock 
                        Text="IsSmoothJoin" 
                        Margin="5,2,5,2" 
                        Grid.Row="1"
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox 
                        Content=""
                        IsChecked="{Binding IsStroked}"
                        Margin="5,2,5,2" 
                        Grid.Row="0" 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2">
                    </CheckBox>
                    <CheckBox 
                        Content=""
                        IsChecked="{Binding IsSmoothJoin}"
                        Margin="5,2,5,2" 
                        Grid.Row="1" 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2">
                    </CheckBox>
                </Grid>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XPolyLineSegment}">
        <StackPanel>
            <Expander Header="Points" IsExpanded="True">
                <ListBox
                    ItemsSource="{Binding Points}"
                    BorderBrush="{x:Null}"
                    HorizontalContentAlignment="Stretch"
                    Height="140">
                </ListBox>
            </Expander>
            <Expander Header="Properties" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock 
                        Text="IsStroked" 
                        Margin="5,2,5,2" 
                        Grid.Row="0"
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock 
                        Text="IsSmoothJoin" 
                        Margin="5,2,5,2" 
                        Grid.Row="1"
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox 
                        Content=""
                        IsChecked="{Binding IsStroked}"
                        Margin="5,2,5,2" 
                        Grid.Row="0" 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2">
                    </CheckBox>
                    <CheckBox 
                        Content=""
                        IsChecked="{Binding IsSmoothJoin}"
                        Margin="5,2,5,2" 
                        Grid.Row="1" 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2">
                    </CheckBox>
                </Grid>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XPolyQuadraticBezierSegment}">
        <StackPanel>
            <Expander Header="Points" IsExpanded="True">
                <ListBox
                    ItemsSource="{Binding Points}"
                    BorderBrush="{x:Null}"
                    HorizontalContentAlignment="Stretch"
                    Height="140">
                </ListBox>
            </Expander>
            <Expander Header="Properties" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock 
                        Text="IsStroked" 
                        Margin="5,2,5,2" 
                        Grid.Row="0"
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock 
                        Text="IsSmoothJoin" 
                        Margin="5,2,5,2" 
                        Grid.Row="1"
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox 
                        Content=""
                        IsChecked="{Binding IsStroked}"
                        Margin="5,2,5,2" 
                        Grid.Row="0" 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2">
                    </CheckBox>
                    <CheckBox 
                        Content=""
                        IsChecked="{Binding IsSmoothJoin}"
                        Margin="5,2,5,2" 
                        Grid.Row="1" 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2">
                    </CheckBox>
                </Grid>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XQuadraticBezierSegment}">
        <StackPanel>
            <Expander Header="Point1" IsExpanded="True">
                <ContentControl Content="{Binding Point1}"/>
            </Expander>
            <Expander Header="Point2" IsExpanded="True">
                <ContentControl Content="{Binding Point2}"/>
            </Expander>
            <Expander Header="Properties" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock 
                        Text="IsStroked" 
                        Margin="5,2,5,2" 
                        Grid.Row="0"
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock 
                        Text="IsSmoothJoin" 
                        Margin="5,2,5,2" 
                        Grid.Row="1"
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox 
                        Content=""
                        IsChecked="{Binding IsStroked}"
                        Margin="5,2,5,2" 
                        Grid.Row="0" 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2">
                    </CheckBox>
                    <CheckBox 
                        Content=""
                        IsChecked="{Binding IsSmoothJoin}"
                        Margin="5,2,5,2" 
                        Grid.Row="1" 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2">
                    </CheckBox>
                </Grid>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XPathFigure}">
        <StackPanel>
            <Expander Header="StartPoint" IsExpanded="True">
                <ContentControl Content="{Binding StartPoint}"/>
            </Expander>
            <Expander Header="Properties" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock 
                        Text="IsFilled" 
                        Margin="5,2,5,2" 
                        Grid.Row="0"
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock 
                        Text="IsClosed" 
                        Margin="5,2,5,2" 
                        Grid.Row="1" 
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox 
                        Content=""
                        IsChecked="{Binding IsFilled}"
                        Margin="5,2,5,2" 
                        Grid.Row="0" 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2">
                    </CheckBox>
                    <CheckBox 
                        Content=""
                        IsChecked="{Binding IsClosed}"
                        Margin="5,2,5,2" 
                        Grid.Row="1" 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2">
                    </CheckBox>
                </Grid>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XPathGeometry}">
        <StackPanel>
            <Expander Header="Bounds" IsExpanded="True">
                <ContentControl Content="{Binding Bounds}"/>
            </Expander>
            <Expander Header="Properties" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock 
                        Text="FillRule" 
                        Margin="5,2,5,2" 
                        Grid.Row="0"
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBlock>
                    <ComboBox 
                        ItemsSource="{Binding Source={StaticResource ResourceKey=XFillRuleValues}}" 
                        SelectedItem="{Binding FillRule}" 
                        Margin="5,2,5,2" 
                        Grid.Row="0" 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2">
                    </ComboBox>
                </Grid>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <!-- shape -->
    <ControlTemplate x:Key="StateControlTemplateKey">
        <StackPanel Margin="5,2,5,2">
            <CheckBox Content="Default" Margin="1"
                      IsChecked="{Binding Path=State, Converter={StaticResource StateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Default}}">
            </CheckBox>
            <CheckBox Content="Visible" Margin="1"
                      IsChecked="{Binding Path=State, Converter={StaticResource StateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Visible}}">
            </CheckBox>
            <CheckBox Content="Printable" Margin="1"
                      IsChecked="{Binding Path=State, Converter={StaticResource StateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Printable}}">
            </CheckBox>
            <CheckBox Content="Locked" Margin="1"
                      IsChecked="{Binding Path=State, Converter={StaticResource StateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Locked}}">
            </CheckBox>
            <CheckBox Content="Connector" Margin="1"
                      IsChecked="{Binding Path=State, Converter={StaticResource StateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Connector}}">
            </CheckBox>
            <CheckBox Content="None" Margin="1"
                      IsChecked="{Binding Path=State, Converter={StaticResource StateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.None}}">
            </CheckBox>
            <CheckBox Content="Standalone" Margin="1"
                      IsChecked="{Binding Path=State, Converter={StaticResource StateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Standalone}}">
            </CheckBox>
            <CheckBox Content="Input" Margin="1"
                      IsChecked="{Binding Path=State, Converter={StaticResource StateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Input}}">
            </CheckBox>
            <CheckBox Content="Output" Margin="1"
                      IsChecked="{Binding Path=State, Converter={StaticResource StateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Output}}">
            </CheckBox>
        </StackPanel>
    </ControlTemplate>
    <DataTemplate DataType="{x:Type core:ShapeTransform}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="90"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="40"/>
            </Grid.ColumnDefinitions>
            <TextBlock 
                Text="CenterX" 
                Margin="5,2,5,2" 
                Grid.Row="0" 
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBlock 
                Text="CenterY" 
                Margin="5,2,5,2" 
                Grid.Row="1" 
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBlock 
                Text="ScaleX" 
                Margin="5,2,5,2" 
                Grid.Row="2" 
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBlock 
                Text="ScaleY" 
                Margin="5,2,5,2" 
                Grid.Row="3" 
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBlock 
                Text="SkewAngleX" 
                Margin="5,2,5,2" 
                Grid.Row="4" 
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBlock 
                Text="SkewAngleY" 
                Margin="5,2,5,2" 
                Grid.Row="5" 
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBlock 
                Text="RotateAngle" 
                Margin="5,2,5,2" 
                Grid.Row="6" 
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBlock 
                Text="OffsetX" 
                Margin="5,2,5,2" 
                Grid.Row="7" 
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBlock 
                Text="OffsetY" 
                Margin="5,2,5,2" 
                Grid.Row="8" 
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBox 
                Text="{Binding CenterX, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                BorderBrush="{x:Null}"
                Margin="5,2,5,2"
                Grid.Row="0" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                TextAlignment="Center" 
                VerticalAlignment="Center">
            </TextBox>
            <TextBox 
                Text="{Binding CenterY, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                BorderBrush="{x:Null}"
                Margin="5,2,5,2"
                Grid.Row="1" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                TextAlignment="Center" 
                VerticalAlignment="Center">
            </TextBox>
            <TextBox 
                Text="{Binding ScaleX, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                BorderBrush="{x:Null}"
                Margin="5,2,5,2"
                Grid.Row="2" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                TextAlignment="Center" 
                VerticalAlignment="Center">
            </TextBox>
            <TextBox 
                Text="{Binding ScaleY, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                BorderBrush="{x:Null}"
                Margin="5,2,5,2"
                Grid.Row="3" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                TextAlignment="Center" 
                VerticalAlignment="Center">
            </TextBox>
            <TextBox 
                Text="{Binding SkewAngleX, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                BorderBrush="{x:Null}"
                Margin="5,2,5,2"
                Grid.Row="4" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                TextAlignment="Center" 
                VerticalAlignment="Center">
            </TextBox>
            <TextBox 
                Text="{Binding SkewAngleY, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                BorderBrush="{x:Null}"
                Margin="5,2,5,2"
                Grid.Row="5" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                TextAlignment="Center" 
                VerticalAlignment="Center">
            </TextBox>
            <TextBox 
                Text="{Binding RotateAngle, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                BorderBrush="{x:Null}"
                Margin="5,2,5,2"
                Grid.Row="6" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                TextAlignment="Center" 
                VerticalAlignment="Center">
            </TextBox>
            <TextBox 
                Text="{Binding OffsetX, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                BorderBrush="{x:Null}"
                Margin="5,2,5,2"
                Grid.Row="7" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                TextAlignment="Center" 
                VerticalAlignment="Center">
            </TextBox>
            <TextBox 
                Text="{Binding OffsetY, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                BorderBrush="{x:Null}"
                Margin="5,2,5,2"
                Grid.Row="8" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                TextAlignment="Center" 
                VerticalAlignment="Center">
            </TextBox>
        </Grid>
    </DataTemplate>
    <ControlTemplate x:Key="CodeControlTemplateKey">
        <StackPanel>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="90"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="40"/>
                </Grid.ColumnDefinitions>
                <TextBlock 
                    Text="IsExecutable" 
                    Margin="5,2,5,2" 
                    Grid.Row="0"
                    Grid.Column="0" 
                    TextAlignment="Left" 
                    VerticalAlignment="Center">
                </TextBlock>
                <CheckBox 
                    Content=""
                    IsChecked="{Binding Code.IsExecutable}"
                    Grid.Row="0" 
                    Grid.Column="1" 
                    Grid.ColumnSpan="2"
                    Margin="5,2,5,2">
                </CheckBox>
            </Grid>
            <TabControl>
                <TabItem Header="Definitions">
                    <TextBox 
                        Text="{Binding Code.Definitions, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                         BorderBrush="{x:Null}" 
                         Margin="5,2,5,2"
                         TextAlignment="Left" 
                         VerticalAlignment="Center"
                         AcceptsReturn="True"
                         AcceptsTab="True">
                    </TextBox>
                </TabItem>
                <TabItem Header="Initialization">
                    <TextBox 
                        Text="{Binding Code.Initialization, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                         BorderBrush="{x:Null}" 
                         Margin="5,2,5,2"
                         TextAlignment="Left" 
                         VerticalAlignment="Center"
                         AcceptsReturn="True"
                         AcceptsTab="True">
                    </TextBox>
                </TabItem>
                <TabItem Header="Script">
                    <TextBox 
                        Text="{Binding Code.Script, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                         BorderBrush="{x:Null}" 
                         Margin="5,2,5,2"
                         TextAlignment="Left" 
                         VerticalAlignment="Center"
                         AcceptsReturn="True"
                         AcceptsTab="True">
                    </TextBox>
                </TabItem>
            </TabControl>
        </StackPanel>
    </ControlTemplate>
    <!-- style -->
    <ControlTemplate x:Key="FontStyleControlTemplateKey">
        <StackPanel Margin="5,2,5,2">
            <CheckBox Content="Regular" Margin="1"
                      IsChecked="{Binding Path=FontStyle, Converter={StaticResource FontStyleFlagsEnumConverter}, ConverterParameter={x:Static core:FontStyle.Regular}}">
            </CheckBox>
            <CheckBox Content="Bold" Margin="1"
                      IsChecked="{Binding Path=FontStyle, Converter={StaticResource FontStyleFlagsEnumConverter}, ConverterParameter={x:Static core:FontStyle.Bold}}">
            </CheckBox>
            <CheckBox Content="Italic" Margin="1"
                      IsChecked="{Binding Path=FontStyle, Converter={StaticResource FontStyleFlagsEnumConverter}, ConverterParameter={x:Static core:FontStyle.Italic}}">
            </CheckBox>
            <CheckBox Content="Underline" Margin="1"
                      IsChecked="{Binding Path=FontStyle, Converter={StaticResource FontStyleFlagsEnumConverter}, ConverterParameter={x:Static core:FontStyle.Underline}}">
            </CheckBox>
            <CheckBox Content="Strikeout" Margin="1"
                      IsChecked="{Binding Path=FontStyle, Converter={StaticResource FontStyleFlagsEnumConverter}, ConverterParameter={x:Static core:FontStyle.Strikeout}}">
            </CheckBox>
        </StackPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="MaxLengthControlTemplateKey">
        <StackPanel Margin="5,2,5,2">
            <CheckBox Content="Disabled" Margin="1"
                      IsChecked="{Binding Path=MaxLengthFlags, Converter={StaticResource MagLengthFlagsEnumConverter}, ConverterParameter={x:Static core:MaxLengthFlags.Disabled}}">
            </CheckBox>
            <CheckBox Content="Start" Margin="1"
                      IsChecked="{Binding Path=MaxLengthFlags, Converter={StaticResource MagLengthFlagsEnumConverter}, ConverterParameter={x:Static core:MaxLengthFlags.Start}}">
            </CheckBox>
            <CheckBox Content="End" Margin="1"
                      IsChecked="{Binding Path=MaxLengthFlags, Converter={StaticResource MagLengthFlagsEnumConverter}, ConverterParameter={x:Static core:MaxLengthFlags.End}}">
            </CheckBox>
            <CheckBox Content="Vertical" Margin="1"
                      IsChecked="{Binding Path=MaxLengthFlags, Converter={StaticResource MagLengthFlagsEnumConverter}, ConverterParameter={x:Static core:MaxLengthFlags.Vertical}}">
            </CheckBox>
            <CheckBox Content="Horizontal" Margin="1"
                      IsChecked="{Binding Path=MaxLengthFlags, Converter={StaticResource MagLengthFlagsEnumConverter}, ConverterParameter={x:Static core:MaxLengthFlags.Horizontal}}">
            </CheckBox>
            <CheckBox Content="All" Margin="1"
                      IsChecked="{Binding Path=MaxLengthFlags, Converter={StaticResource MagLengthFlagsEnumConverter}, ConverterParameter={x:Static core:MaxLengthFlags.All}}">
            </CheckBox>
        </StackPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="StartStateControlTemplateKey">
        <StackPanel Margin="5,2,5,2">
            <CheckBox Content="Default" Margin="1"
                      IsChecked="{Binding Path=MaxLengthStartState, Converter={StaticResource StartStateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Default}}">
            </CheckBox>
            <CheckBox Content="Visible" Margin="1"
                      IsChecked="{Binding Path=MaxLengthStartState, Converter={StaticResource StartStateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Visible}}">
            </CheckBox>
            <CheckBox Content="Printable" Margin="1"
                      IsChecked="{Binding Path=MaxLengthStartState, Converter={StaticResource StartStateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Printable}}">
            </CheckBox>
            <CheckBox Content="Locked" Margin="1"
                      IsChecked="{Binding Path=MaxLengthStartState, Converter={StaticResource StartStateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Locked}}">
            </CheckBox>
            <CheckBox Content="Connector" Margin="1"
                      IsChecked="{Binding Path=MaxLengthStartState, Converter={StaticResource StartStateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Connector}}">
            </CheckBox>
            <CheckBox Content="None" Margin="1"
                      IsChecked="{Binding Path=MaxLengthStartState, Converter={StaticResource StartStateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.None}}">
            </CheckBox>
            <CheckBox Content="Standalone" Margin="1"
                      IsChecked="{Binding Path=MaxLengthStartState, Converter={StaticResource StartStateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Standalone}}">
            </CheckBox>
            <CheckBox Content="Input" Margin="1"
                      IsChecked="{Binding Path=MaxLengthStartState, Converter={StaticResource StartStateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Input}}">
            </CheckBox>
            <CheckBox Content="Output" Margin="1"
                      IsChecked="{Binding Path=MaxLengthStartState, Converter={StaticResource StartStateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Output}}">
            </CheckBox>
        </StackPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="EndStateControlTemplateKey">
        <StackPanel Margin="5,2,5,2">
            <CheckBox Content="Default" Margin="1"
                      IsChecked="{Binding Path=MaxLengthEndState, Converter={StaticResource EndStateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Default}}">
            </CheckBox>
            <CheckBox Content="Visible" Margin="1"
                      IsChecked="{Binding Path=MaxLengthEndState, Converter={StaticResource EndStateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Visible}}">
            </CheckBox>
            <CheckBox Content="Printable" Margin="1"
                      IsChecked="{Binding Path=MaxLengthEndState, Converter={StaticResource EndStateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Printable}}">
            </CheckBox>
            <CheckBox Content="Locked" Margin="1"
                      IsChecked="{Binding Path=MaxLengthEndState, Converter={StaticResource EndStateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Locked}}">
            </CheckBox>
            <CheckBox Content="Connector" Margin="1"
                      IsChecked="{Binding Path=MaxLengthEndState, Converter={StaticResource EndStateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Connector}}">
            </CheckBox>
            <CheckBox Content="None" Margin="1"
                      IsChecked="{Binding Path=MaxLengthEndState, Converter={StaticResource EndStateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.None}}">
            </CheckBox>
            <CheckBox Content="Standalone" Margin="1"
                      IsChecked="{Binding Path=MaxLengthEndState, Converter={StaticResource EndStateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Standalone}}">
            </CheckBox>
            <CheckBox Content="Input" Margin="1"
                      IsChecked="{Binding Path=MaxLengthEndState, Converter={StaticResource EndStateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Input}}">
            </CheckBox>
            <CheckBox Content="Output" Margin="1"
                      IsChecked="{Binding Path=MaxLengthEndState, Converter={StaticResource EndStateFlagsEnumConverter}, ConverterParameter={x:Static core:ShapeState.Output}}">
            </CheckBox>
        </StackPanel>
    </ControlTemplate>
    <DataTemplate DataType="{x:Type core:ArgbColor}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="40"/>
            </Grid.ColumnDefinitions>
            <Rectangle 
                Fill="{StaticResource CheckerBoard}"
                Grid.Row="0" 
                Grid.Column="0" 
                Grid.ColumnSpan="3" 
                Margin="5,2,5,2"
                Height="20">
            </Rectangle>
            <Rectangle 
                Grid.Row="0" 
                Grid.Column="0" 
                Grid.ColumnSpan="3" 
                Margin="5,2,5,2"
                Height="20">
                <Rectangle.Fill>
                    <MultiBinding Converter="{StaticResource ArgbColorToBrushMultiConverter}">
                        <Binding Path="DataContext.A" RelativeSource="{RelativeSource Self}"/>
                        <Binding Path="DataContext.R" RelativeSource="{RelativeSource Self}"/>
                        <Binding Path="DataContext.G" RelativeSource="{RelativeSource Self}"/>
                        <Binding Path="DataContext.B" RelativeSource="{RelativeSource Self}"/>
                    </MultiBinding>
                </Rectangle.Fill>
            </Rectangle>
            <TextBlock Text="A" 
                       Margin="5,2,5,2" 
                       Grid.Row="1"
                       Grid.Column="0" 
                       TextAlignment="Center" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBlock Text="R" 
                       Margin="5,2,5,2" 
                       Grid.Row="2" 
                       Grid.Column="0" 
                       TextAlignment="Center" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBlock Text="G" 
                       Margin="5,2,5,2" 
                       Grid.Row="3" 
                       Grid.Column="0" 
                       TextAlignment="Center" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBlock Text="B" 
                       Margin="5,2,5,2" 
                       Grid.Row="4" 
                       Grid.Column="0" 
                       TextAlignment="Center" 
                       VerticalAlignment="Center">
            </TextBlock>
            <Slider Value="{Binding A}" 
                    Minimum="0" 
                    Maximum="255" 
                    TickFrequency="1" 
                    IsSnapToTickEnabled="True" 
                    Grid.Row="1" 
                    Grid.Column="1" 
                    Margin="5,2,5,2">
            </Slider>
            <Slider Value="{Binding R}" 
                    Minimum="0" 
                    Maximum="255" 
                    TickFrequency="1" 
                    IsSnapToTickEnabled="True" 
                    Grid.Row="2" 
                    Grid.Column="1" 
                    Margin="5,2,5,2">
            </Slider>
            <Slider Value="{Binding G}" 
                    Minimum="0" 
                    Maximum="255" 
                    TickFrequency="1" 
                    IsSnapToTickEnabled="True" 
                    Grid.Row="3" 
                    Grid.Column="1" 
                    Margin="5,2,5,2">
            </Slider>
            <Slider Value="{Binding B}" 
                    Minimum="0" 
                    Maximum="255" 
                    TickFrequency="1" 
                    IsSnapToTickEnabled="True" 
                    Grid.Row="4" 
                    Grid.Column="1" 
                    Margin="5,2,5,2">
            </Slider>
            <TextBox Text="{Binding A, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                     BorderBrush="{x:Null}" 
                     Margin="5,2,5,2"
                     Grid.Row="1" 
                     Grid.Column="2" 
                     TextAlignment="Center" 
                     VerticalAlignment="Center">
            </TextBox>
            <TextBox Text="{Binding R, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                     BorderBrush="{x:Null}" 
                     Margin="5,2,5,2"
                     Grid.Row="2" 
                     Grid.Column="2" 
                     TextAlignment="Center" 
                     VerticalAlignment="Center">
            </TextBox>
            <TextBox Text="{Binding G, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                     BorderBrush="{x:Null}" 
                     Margin="5,2,5,2"
                     Grid.Row="3" 
                     Grid.Column="2" 
                     TextAlignment="Center" 
                     VerticalAlignment="Center">
            </TextBox>
            <TextBox Text="{Binding B, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                     BorderBrush="{x:Null}" 
                     Margin="5,2,5,2"
                     Grid.Row="4" 
                     Grid.Column="2" 
                     TextAlignment="Center" 
                     VerticalAlignment="Center">
            </TextBox>
        </Grid>
    </DataTemplate>
    <ControlTemplate x:Key="BaseStyleControlTemplateKey">
        <StackPanel>
            <Expander Header="Name" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Margin="5,2,5,2"
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Stroke" IsExpanded="False">
                <ContentControl Content="{Binding Stroke}"/>
            </Expander>
            <Expander Header="Fill" IsExpanded="False">
                <ContentControl Content="{Binding Fill}"/>
            </Expander>
            <Expander Header="Thickness" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <Slider Value="{Binding Thickness}" 
                            Minimum="0" 
                            Maximum="50" 
                            TickFrequency="0.1" 
                            SmallChange="0.1" 
                            LargeChange="1" 
                            IsSnapToTickEnabled="True" 
                            Grid.Row="0" 
                            Grid.Column="0" 
                            Margin="5,2,5,2">
                    </Slider>
                    <TextBox Text="{Binding Thickness, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}"
                             Margin="5,2,5,2"
                             Grid.Row="0" 
                             Grid.Column="1" 
                             TextAlignment="Center" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Cap" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Line Cap" 
                               Margin="5,2,5,2" 
                               Grid.Row="0"
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <ComboBox ItemsSource="{Binding Source={StaticResource ResourceKey=LineCapValues}}" 
                              SelectedItem="{Binding LineCap}" 
                              Grid.Row="0" 
                              Grid.Column="1" 
                              Grid.ColumnSpan="2"
                              Margin="5,2,5,2">
                    </ComboBox>
                </Grid>
            </Expander>
            <Expander Header="Dash" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Dashes" 
                               Margin="5,2,5,2" 
                               Grid.Row="0" 
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock Text="Dash Offset" 
                               Margin="5,2,5,2" 
                               Grid.Row="1" 
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <TextBox Text="{Binding Dashes, Converter={StaticResource DoubleToStringConverter}}" 
                             BorderBrush="{x:Null}" 
                             Margin="5,2,5,2"
                             Grid.Row="0" 
                             Grid.Column="1" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Center" 
                             VerticalAlignment="Center">
                    </TextBox>
                    <Slider Value="{Binding DashOffset}" 
                            Minimum="0" 
                            Maximum="15" 
                            TickFrequency="0.1" 
                            SmallChange="0.1"
                            LargeChange="1"
                            IsSnapToTickEnabled="True" 
                            Grid.Row="1" 
                            Grid.Column="1" 
                            Margin="5,2,5,2">
                    </Slider>
                    <TextBox Text="{Binding DashOffset, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Margin="5,2,5,2"
                             Grid.Row="1" 
                             Grid.Column="2" 
                             TextAlignment="Center" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
        </StackPanel>
    </ControlTemplate>
    <DataTemplate DataType="{x:Type core:ArrowStyle}">
        <TabControl>
            <TabItem Header="Arrow">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Arrow Type" 
                               Margin="5,2,5,2" 
                               Grid.Row="0"
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock Text="IsFilled" 
                               Margin="5,2,5,2" 
                               Grid.Row="1"
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock Text="RadiusX" 
                               Margin="5,2,5,2" 
                               Grid.Row="2" 
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock Text="RadiusY" 
                               Margin="5,2,5,2" 
                               Grid.Row="3" 
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <ComboBox ItemsSource="{Binding Source={StaticResource ResourceKey=ArrowTypeValues}}" 
                              SelectedItem="{Binding ArrowType}" 
                              Grid.Row="0" 
                              Grid.Column="1" 
                              Grid.ColumnSpan="2"
                              Margin="5,2,5,2">
                    </ComboBox>
                    <CheckBox Content=""
                              IsChecked="{Binding IsFilled}"
                              Grid.Row="1" 
                              Grid.Column="1" 
                              Grid.ColumnSpan="2"
                              Margin="5,2,5,2">
                    </CheckBox>
                    <Slider Value="{Binding RadiusX}" 
                            Minimum="0" 
                            Maximum="15" 
                            TickFrequency="0.1" 
                            SmallChange="0.1"
                            LargeChange="1"
                            IsSnapToTickEnabled="True" 
                            Grid.Row="2" 
                            Grid.Column="1" 
                            Margin="5,2,5,2">
                    </Slider>
                    <Slider Value="{Binding RadiusY}" 
                            Minimum="0" 
                            Maximum="15" 
                            TickFrequency="0.1" 
                            SmallChange="0.1"
                            LargeChange="1"
                            IsSnapToTickEnabled="True" 
                            Grid.Row="3" 
                            Grid.Column="1" 
                            Margin="5,2,5,2">
                    </Slider>
                    <TextBox Text="{Binding RadiusX, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Margin="5,2,5,2"
                             Grid.Row="2" 
                             Grid.Column="2" 
                             TextAlignment="Center" 
                             VerticalAlignment="Center">
                    </TextBox>
                    <TextBox Text="{Binding RadiusY, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Margin="5,2,5,2"
                             Grid.Row="3" 
                             Grid.Column="2" 
                             TextAlignment="Center" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </TabItem>
            <TabItem Header="Style">
                <Control Template="{StaticResource BaseStyleControlTemplateKey}"/>
            </TabItem>
        </TabControl>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:TextStyle}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="90"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="40"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="FontName" 
                       Margin="5,2,5,2" 
                       Grid.Row="0"
                       Grid.Column="0" 
                       TextAlignment="Left" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBlock Text="FontFile" 
                       Margin="5,2,5,2" 
                       Grid.Row="1"
                       Grid.Column="0" 
                       TextAlignment="Left" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBlock Text="FontSize" 
                       Margin="5,2,5,2" 
                       Grid.Row="2" 
                       Grid.Column="0" 
                       TextAlignment="Left" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBlock Text="FontStyle" 
                       Margin="5,2,5,2" 
                       Grid.Row="3" 
                       Grid.Column="0" 
                       TextAlignment="Left" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBlock Text="HAlignment" 
                       Margin="5,2,5,2" 
                       Grid.Row="4" 
                       Grid.Column="0" 
                       TextAlignment="Left" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBlock Text="VAlignment" 
                       Margin="5,2,5,2" 
                       Grid.Row="5" 
                       Grid.Column="0" 
                       TextAlignment="Left" 
                       VerticalAlignment="Center">
            </TextBlock>
            <Slider Value="{Binding FontSize}" 
                    Minimum="0" 
                    Maximum="72" 
                    TickFrequency="1" 
                    IsSnapToTickEnabled="True" 
                    Grid.Row="2" 
                    Grid.Column="1" 
                    Margin="5,2,5,2">
            </Slider>
            <TextBox Text="{Binding FontName, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                     BorderBrush="{x:Null}" 
                     Margin="5,2,5,2"
                     Grid.Row="0" 
                     Grid.Column="1" 
                     Grid.ColumnSpan="2"
                     TextAlignment="Left" 
                     VerticalAlignment="Center">
            </TextBox>
            <TextBox Text="{Binding FontFile, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                     BorderBrush="{x:Null}" 
                     Margin="5,2,5,2"
                     Grid.Row="1" 
                     Grid.Column="1" 
                     Grid.ColumnSpan="2"
                     TextAlignment="Left" 
                     VerticalAlignment="Center">
            </TextBox>
            <TextBox Text="{Binding FontSize, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                     BorderBrush="{x:Null}" 
                     Margin="5,2,5,2"
                     Grid.Row="2" 
                     Grid.Column="2" 
                     TextAlignment="Center" 
                     VerticalAlignment="Center">
            </TextBox>
            <Control Template="{StaticResource FontStyleControlTemplateKey}"
                     Grid.Row="3" 
                     Grid.Column="1"
                     Grid.ColumnSpan="2">
            </Control>
            <ComboBox ItemsSource="{Binding Source={StaticResource ResourceKey=TextHAlignmentValues}}" 
                      SelectedItem="{Binding TextHAlignment}" 
                      Grid.Row="4" 
                      Grid.Column="1" 
                      Grid.ColumnSpan="2"
                      Margin="5,2,5,2">
            </ComboBox>
            <ComboBox ItemsSource="{Binding Source={StaticResource ResourceKey=TextVAlignmentValues}}" 
                      SelectedItem="{Binding TextVAlignment}" 
                      Grid.Row="5" 
                      Grid.Column="1" 
                      Grid.ColumnSpan="2"
                      Margin="5,2,5,2">
            </ComboBox>
        </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:LineStyle}">
        <TabControl>
            <TabItem Header="Flags">
                <Control Template="{StaticResource MaxLengthControlTemplateKey}"/>
            </TabItem>
            <TabItem Header="Length">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <Slider
                        Value="{Binding MaxLength}" 
                        Minimum="0" 
                        Maximum="30" 
                        TickFrequency="0.1" 
                        SmallChange="0.1"
                        LargeChange="1"
                        IsSnapToTickEnabled="True" 
                        Grid.Column="0" 
                        Margin="5,2,5,2">
                    </Slider>
                    <TextBox
                        Text="{Binding MaxLength, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                        BorderBrush="{x:Null}" 
                        Margin="5,2,5,2"
                        Grid.Column="1" 
                        TextAlignment="Center" 
                        VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </TabItem>
            <TabItem Header="Start">
                <Control Template="{StaticResource StartStateControlTemplateKey}"/>
            </TabItem>
            <TabItem Header="End">
                <Control Template="{StaticResource EndStateControlTemplateKey}"/>
            </TabItem>
        </TabControl>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:ShapeStyle}">
        <StackPanel>
            <Control Template="{StaticResource BaseStyleControlTemplateKey}"/>
            <Expander Header="Text" IsExpanded="False">
                <ContentControl Content="{Binding TextStyle}"/>
            </Expander>
            <Expander Header="Line Start Arrow" IsExpanded="False">
                <ContentControl Content="{Binding StartArrowStyle}"/>
            </Expander>
            <Expander Header="Line End Arrow" IsExpanded="False">
                <ContentControl Content="{Binding EndArrowStyle}"/>
            </Expander>
            <Expander Header="Line MaxLength" IsExpanded="False">
                <ContentControl Content="{Binding LineStyle}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <ControlTemplate x:Key="StyleControlTemplateKey">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="40"/>
            </Grid.ColumnDefinitions>
            <ComboBox ItemsSource="{Binding Path=DataContext.Editor.Project.CurrentStyleLibrary.Styles, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                      SelectedItem="{Binding Path=DataContext.Style, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Expander}}}" 
                      Grid.Row="0" 
                      Grid.Column="0" 
                      Grid.ColumnSpan="2"
                      Margin="5,2,5,2">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </Grid>
    </ControlTemplate>
    <!-- data -->
    <ControlTemplate x:Key="BindingsMenu">
        <Menu Background="Transparent" HorizontalAlignment="Right">
            <MenuItem Command="{Binding DataContext.Commands.AddBindingCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                      CommandParameter="{Binding}" 
                      Header="+"/>
        </Menu>
    </ControlTemplate>
    <ControlTemplate x:Key="BindingsControlTemplateKey">
         <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Control Template="{StaticResource BindingsMenu}" Grid.Row="0" Margin="2,0,2,0"/>
            <Grid Height="Auto" VerticalAlignment="Top" Grid.Row="1">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Bindings.Length, FallbackValue=0}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" Margin="5,2,5,2" VerticalAlignment="Center" Text="Property"/>
                <TextBlock Grid.Column="1" Grid.Row="0" Margin="5,2,5,2" VerticalAlignment="Center" Text="Path"/>
            </Grid>
            <ItemsControl x:Name="bindingsItemsControls"
                          VerticalContentAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="2"
                          ItemsSource="{Binding Bindings, UpdateSourceTrigger=PropertyChanged}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Height="Auto" VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBox Grid.Column="0" Grid.Row="0" Margin="5,2,5,2" VerticalAlignment="Center" 
                                     Text="{Binding Path=Property, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=500}"/>
                            <TextBox Grid.Column="1" Grid.Row="0" Margin="5,2,5,2" VerticalAlignment="Center" 
                                     Text="{Binding Path=Path, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=500}"/>
                            <Button Grid.Column="2" Grid.Row="0" Margin="5,2,5,2" VerticalAlignment="Center" Content="-" 
                                    Command="{Binding DataContext.Commands.RemoveBindingCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                                <Button.CommandParameter>
                                    <MultiBinding Converter="{StaticResource ShapeBindingParameterConverter}">
                                        <Binding Path="DataContext" ElementName="bindingsItemsControls"/>
                                        <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                                    </MultiBinding>
                                </Button.CommandParameter>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="PropertiesMenu">
        <Menu Background="Transparent" HorizontalAlignment="Right">
            <MenuItem Command="{Binding DataContext.Commands.AddPropertyCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                      CommandParameter="{Binding}" 
                      Header="+"/>
        </Menu>
    </ControlTemplate>
    <ControlTemplate x:Key="PropertiesControlTemplateKey">
         <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Control Template="{StaticResource PropertiesMenu}" Grid.Row="0" Margin="2,0,2,0"/>
            <Grid Height="Auto" VerticalAlignment="Top" Grid.Row="1">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Properties.Length, FallbackValue=0}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" Margin="5,2,5,2" VerticalAlignment="Center" Text="Name"/>
                <TextBlock Grid.Column="1" Grid.Row="0" Margin="5,2,5,2" VerticalAlignment="Center" Text="Value"/>
            </Grid>
            <ItemsControl x:Name="propertiesItemsControls"
                          VerticalContentAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="2"
                          ItemsSource="{Binding Properties, UpdateSourceTrigger=PropertyChanged}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Height="Auto" VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBox Grid.Column="0" Grid.Row="0" Margin="5,2,5,2" VerticalAlignment="Center" 
                                     Text="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=500}"/>
                            <TextBox Grid.Column="1" Grid.Row="0" Margin="5,2,5,2" VerticalAlignment="Center" 
                                     Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=500}"/>
                            <Button Grid.Column="2" Grid.Row="0" Margin="5,2,5,2" VerticalAlignment="Center" Content="-" 
                                    Command="{Binding DataContext.Commands.RemovePropertyCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                                <Button.CommandParameter>
                                    <MultiBinding Converter="{StaticResource ShapePropertyParameterConverter}">
                                        <Binding Path="DataContext" ElementName="propertiesItemsControls"/>
                                        <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                                    </MultiBinding>
                                </Button.CommandParameter>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="GroupDatabaseControlTemplateKey">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid Height="Auto" VerticalAlignment="Top" Grid.Row="0">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ShapesProperties.Length, FallbackValue=0}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="70"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" Margin="5,2,5,2" VerticalAlignment="Center" Text="Name"/>
                <TextBlock Grid.Column="1" Grid.Row="0" Margin="5,2,5,2" VerticalAlignment="Center" Text="Value"/>
            </Grid>
            <ItemsControl VerticalContentAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1"
                          ItemsSource="{Binding ShapesProperties, UpdateSourceTrigger=PropertyChanged}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Height="Auto" VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBox Grid.Column="0" Grid.Row="0" Margin="5,2,5,2" VerticalAlignment="Center" 
                                     Text="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=500}"/>
                            <TextBox Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="0" Margin="5,2,5,2" VerticalAlignment="Center" 
                                     Text="{Binding Path=Value, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=500}"/>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="RecordMenu">
        <Menu Background="Transparent" HorizontalAlignment="Right">
            <MenuItem Command="{Binding DataContext.Commands.ResetRecordCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                      CommandParameter="{Binding}" 
                      Header="X"/>
        </Menu>
    </ControlTemplate>
    <ControlTemplate x:Key="RecordControlTemplateKey">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40*"/>
                <ColumnDefinition Width="60*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Control Template="{StaticResource RecordMenu}" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Margin="2,0,2,0"/>
            <TextBlock Grid.Column="0" Grid.Row="1" Margin="5,2,5,2" VerticalAlignment="Center" Text="Name">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Record}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <TextBlock Grid.Column="1" Grid.Row="1" Margin="5,2,5,2" VerticalAlignment="Center" Text="Value">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Record}" Value="{x:Null}">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>
            <ItemsControl VerticalContentAlignment="Stretch" VerticalAlignment="Stretch" 
                          Grid.Row="2" Grid.Column="0"
                          ItemsSource="{Binding Record.Columns, UpdateSourceTrigger=PropertyChanged}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Height="Auto" VerticalAlignment="Top">
                            <TextBox Grid.Column="0" Grid.Row="0" Margin="5,2,5,2" VerticalAlignment="Center" 
                                     Text="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=500}"/>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
            <ItemsControl VerticalContentAlignment="Stretch" VerticalAlignment="Stretch" 
                          Grid.Row="2" Grid.Column="1"
                          ItemsSource="{Binding Record.Values, UpdateSourceTrigger=PropertyChanged}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Height="Auto" VerticalAlignment="Top">
                            <TextBox Grid.Column="0" Grid.Row="0" Margin="5,2,5,2" VerticalAlignment="Center" 
                                     Text="{Binding Path=Content, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=500}"/>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ColumnsMenu">
        <Menu Background="Transparent" HorizontalAlignment="Right">
            <MenuItem Command="{Binding DataContext.Commands.AddColumnCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                      CommandParameter="{Binding}" 
                      Header="+"/>
        </Menu>
    </ControlTemplate>
    <ControlTemplate x:Key="ColumnsControlTemplateKey">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Control Template="{StaticResource ColumnsMenu}" Grid.Row="0" Margin="2,0,2,0"/>
            <Grid Height="Auto" VerticalAlignment="Top" Grid.Row="1">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Visible"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Columns.Length, FallbackValue=0}" Value="0">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Grid.Column="0" Grid.Row="0" Margin="5,2,5,2" VerticalAlignment="Center" Text="Name"/>
            </Grid>
            <ItemsControl x:Name="columnsItemsControls"
                          VerticalContentAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="2"
                          ItemsSource="{Binding Columns, UpdateSourceTrigger=PropertyChanged}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Grid Height="Auto" VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="30"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TextBox Grid.Column="0" Grid.Row="0" Margin="5,2,5,2" VerticalAlignment="Center" 
                                     Text="{Binding Path=Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=500}"/>
                            <Button Grid.Column="1" Grid.Row="0" Margin="5,2,5,2" VerticalAlignment="Center" Content="-" 
                                    Command="{Binding DataContext.Commands.RemoveColumnCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}">
                                <Button.CommandParameter>
                                    <MultiBinding Converter="{StaticResource ColumnParameterConverter}">
                                        <Binding Path="DataContext" ElementName="columnsItemsControls"/>
                                        <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                                    </MultiBinding>
                                </Button.CommandParameter>
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="DatabaseControlTemplateKey">
        <StackPanel>
            <Expander Header="Name" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Margin="5,2,5,2"
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Columns" IsExpanded="True">
                <Control Template="{StaticResource ColumnsControlTemplateKey}"/>
            </Expander>
        </StackPanel>
    </ControlTemplate>
    <ControlTemplate x:Key="DataControlTemplate">
        <TabControl>
            <TabItem Header="Record">
                <Control Template="{StaticResource RecordControlTemplateKey}"/>
            </TabItem>
            <TabItem Header="Bindings">
                <Control Template="{StaticResource BindingsControlTemplateKey}"/>
            </TabItem>
            <TabItem Header="Properties">
                <Control Template="{StaticResource PropertiesControlTemplateKey}"/>
            </TabItem>
        </TabControl>
    </ControlTemplate>
    <!-- shapes -->
    <DataTemplate DataType="{x:Type core:XPoint}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="90"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="40"/>
            </Grid.ColumnDefinitions>
            <Expander Header="Name" IsExpanded="False"
                      Grid.Row="0" 
                      Grid.Column="0" 
                      Grid.ColumnSpan="3">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <TextBlock Text="X" 
                       Margin="5,2,5,2" 
                       Grid.Row="1" 
                       Grid.Column="0" 
                       TextAlignment="Left" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBlock Text="Y" 
                       Margin="5,2,5,2" 
                       Grid.Row="2" 
                       Grid.Column="0" 
                       TextAlignment="Left" 
                       VerticalAlignment="Center">
            </TextBlock>
            <TextBox Text="{Binding X, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                     BorderBrush="{x:Null}" 
                     Margin="5,2,5,2"
                     Grid.Row="1" 
                     Grid.Column="1" 
                     Grid.ColumnSpan="2"
                     TextAlignment="Center" 
                     VerticalAlignment="Center">
            </TextBox>
            <TextBox Text="{Binding Y, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                     BorderBrush="{x:Null}" 
                     Margin="5,2,5,2"
                     Grid.Row="2" 
                     Grid.Column="1" 
                     Grid.ColumnSpan="2"
                     TextAlignment="Center" 
                     VerticalAlignment="Center">
            </TextBox>
            <Expander Header="Shape" IsExpanded="False"
                      Grid.Row="3" 
                      Grid.Column="0" 
                      Grid.ColumnSpan="3">
                <ContentControl Content="{Binding Shape}"/>
            </Expander>
            <Expander Header="State" IsExpanded="False"
                      Grid.Row="4" 
                      Grid.Column="0"
                      Grid.ColumnSpan="3">
                <Control Template="{StaticResource StateControlTemplateKey}"/>
            </Expander>
            <Expander Header="Code" IsExpanded="False"
                      Grid.Row="5" 
                      Grid.Column="0"
                      Grid.ColumnSpan="3">
                <Control Template="{StaticResource CodeControlTemplateKey}"/>
            </Expander>
            <Expander Header="Data" IsExpanded="False"
                      Grid.Row="6" 
                      Grid.Column="0"
                      Grid.ColumnSpan="3">
                <Control Template="{StaticResource DataControlTemplate}"/>
            </Expander>
        </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XLine}">
        <StackPanel>
            <Expander Header="Name" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Style" IsExpanded="False">
                <Control Template="{StaticResource StyleControlTemplateKey}"/>
            </Expander>
            <Expander Header="Start" IsExpanded="False">
                <ContentControl Content="{Binding Start}"/>
            </Expander>
            <Expander Header="End" IsExpanded="False">
                <ContentControl Content="{Binding End}"/>
            </Expander>
            <Expander Header="State" IsExpanded="False">
                <Control Template="{StaticResource StateControlTemplateKey}"/>
            </Expander>
            <Expander Header="Code" IsExpanded="False">
                <Control Template="{StaticResource CodeControlTemplateKey}"/>
            </Expander>
            <Expander Header="Data" IsExpanded="False">
                <Control Template="{StaticResource DataControlTemplate}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XRectangle}">
        <StackPanel>
            <Expander Header="Name" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Style" IsExpanded="False">
                <Control Template="{StaticResource StyleControlTemplateKey}"/>
            </Expander>
            <Expander Header="TopLeft" IsExpanded="False">
                <ContentControl Content="{Binding TopLeft}"/>
            </Expander>
            <Expander Header="BottomRight" IsExpanded="False">
                <ContentControl Content="{Binding BottomRight}"/>
            </Expander>
            <Expander Header="Fill" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="IsFilled" 
                               Margin="5,2,5,2" 
                               Grid.Row="0"
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox Content=""
                              IsChecked="{Binding IsFilled}"
                              Grid.Row="0" 
                              Grid.Column="1" 
                              Grid.ColumnSpan="2"
                              Margin="5,2,5,2">
                    </CheckBox>
                </Grid>
            </Expander>
            <Expander Header="State" IsExpanded="False">
                <Control Template="{StaticResource StateControlTemplateKey}"/>
            </Expander>
            <Expander Header="Code" IsExpanded="False">
                <Control Template="{StaticResource CodeControlTemplateKey}"/>
            </Expander>
            <Expander Header="Data" IsExpanded="False">
                <Control Template="{StaticResource DataControlTemplate}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XEllipse}">
        <StackPanel>
            <Expander Header="Name" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Style" IsExpanded="False">
                <Control Template="{StaticResource StyleControlTemplateKey}"/>
            </Expander>
            <Expander Header="TopLeft" IsExpanded="False">
                <ContentControl Content="{Binding TopLeft}"/>
            </Expander>
            <Expander Header="BottomRight" IsExpanded="False">
                <ContentControl Content="{Binding BottomRight}"/>
            </Expander>
            <Expander Header="Fill" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="IsFilled" 
                               Margin="5,2,5,2" 
                               Grid.Row="0"
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox Content=""
                              IsChecked="{Binding IsFilled}"
                              Grid.Row="0" 
                              Grid.Column="1" 
                              Grid.ColumnSpan="2"
                              Margin="5,2,5,2">
                    </CheckBox>
                </Grid>
            </Expander>
            <Expander Header="State" IsExpanded="False">
                <Control Template="{StaticResource StateControlTemplateKey}"/>
            </Expander>
            <Expander Header="Code" IsExpanded="False">
                <Control Template="{StaticResource CodeControlTemplateKey}"/>
            </Expander>
            <Expander Header="Data" IsExpanded="False">
                <Control Template="{StaticResource DataControlTemplate}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XArc}">
        <StackPanel>
            <Expander Header="Name" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Style" IsExpanded="False">
                <Control Template="{StaticResource StyleControlTemplateKey}"/>
            </Expander>
            <Expander Header="Point1" IsExpanded="False">
                <ContentControl Content="{Binding Point1}"/>
            </Expander>
            <Expander Header="Point2" IsExpanded="False">
                <ContentControl Content="{Binding Point2}"/>
            </Expander>
            <Expander Header="Point3" IsExpanded="False">
                <ContentControl Content="{Binding Point3}"/>
            </Expander>
            <Expander Header="Point4" IsExpanded="False">
                <ContentControl Content="{Binding Point4}"/>
            </Expander>
            <Expander Header="Fill" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="IsFilled" 
                               Margin="5,2,5,2" 
                               Grid.Row="0"
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox Content=""
                              IsChecked="{Binding IsFilled}"
                              Grid.Row="0" 
                              Grid.Column="1" 
                              Grid.ColumnSpan="2"
                              Margin="5,2,5,2">
                    </CheckBox>
                </Grid>
            </Expander>
            <Expander Header="State" IsExpanded="False">
                <Control Template="{StaticResource StateControlTemplateKey}"/>
            </Expander>
            <Expander Header="Code" IsExpanded="False">
                <Control Template="{StaticResource CodeControlTemplateKey}"/>
            </Expander>
            <Expander Header="Data" IsExpanded="False">
                <Control Template="{StaticResource DataControlTemplate}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XBezier}">
        <StackPanel>
            <Expander Header="Name" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Style" IsExpanded="False">
                <Control Template="{StaticResource StyleControlTemplateKey}"/>
            </Expander>
            <Expander Header="Point1" IsExpanded="False">
                <ContentControl Content="{Binding Point1}"/>
            </Expander>
            <Expander Header="Point2" IsExpanded="False">
                <ContentControl Content="{Binding Point2}"/>
            </Expander>
            <Expander Header="Point3" IsExpanded="False">
                <ContentControl Content="{Binding Point3}"/>
            </Expander>
            <Expander Header="Point4" IsExpanded="False">
                <ContentControl Content="{Binding Point4}"/>
            </Expander>
            <Expander Header="Fill" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="IsFilled" 
                               Margin="5,2,5,2" 
                               Grid.Row="0"
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox Content=""
                              IsChecked="{Binding IsFilled}"
                              Grid.Row="0" 
                              Grid.Column="1" 
                              Grid.ColumnSpan="2"
                              Margin="5,2,5,2">
                    </CheckBox>
                </Grid>
            </Expander>
            <Expander Header="State" IsExpanded="False">
                <Control Template="{StaticResource StateControlTemplateKey}"/>
            </Expander>
            <Expander Header="Code" IsExpanded="False">
                <Control Template="{StaticResource CodeControlTemplateKey}"/>
            </Expander>
            <Expander Header="Data" IsExpanded="False">
                <Control Template="{StaticResource DataControlTemplate}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XQBezier}">
        <StackPanel>
            <Expander Header="Name" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Style" IsExpanded="False">
                <Control Template="{StaticResource StyleControlTemplateKey}"/>
            </Expander>
            <Expander Header="Point1" IsExpanded="False">
                <ContentControl Content="{Binding Point1}"/>
            </Expander>
            <Expander Header="Point2" IsExpanded="False">
                <ContentControl Content="{Binding Point2}"/>
            </Expander>
            <Expander Header="Point3" IsExpanded="False">
                <ContentControl Content="{Binding Point3}"/>
            </Expander>
            <Expander Header="Fill" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="IsFilled" 
                               Margin="5,2,5,2" 
                               Grid.Row="0"
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox Content=""
                              IsChecked="{Binding IsFilled}"
                              Grid.Row="0" 
                              Grid.Column="1" 
                              Grid.ColumnSpan="2"
                              Margin="5,2,5,2">
                    </CheckBox>
                </Grid>
            </Expander>
            <Expander Header="State" IsExpanded="False">
                <Control Template="{StaticResource StateControlTemplateKey}"/>
            </Expander>
            <Expander Header="Code" IsExpanded="False">
                <Control Template="{StaticResource CodeControlTemplateKey}"/>
            </Expander>
            <Expander Header="Data" IsExpanded="False">
                <Control Template="{StaticResource DataControlTemplate}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XText}">
        <StackPanel>
            <Expander Header="Name" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Style" IsExpanded="False">
                <Control Template="{StaticResource StyleControlTemplateKey}"/>
            </Expander>
            <Expander Header="TopLeft" IsExpanded="False">
                <ContentControl Content="{Binding TopLeft}"/>
            </Expander>
            <Expander Header="BottomRight" IsExpanded="False">
                <ContentControl Content="{Binding BottomRight}"/>
            </Expander>
            <Expander Header="Fill" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="IsFilled" 
                               Margin="5,2,5,2" 
                               Grid.Row="0"
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox Content=""
                              IsChecked="{Binding IsFilled}"
                              Grid.Row="0" 
                              Grid.Column="1" 
                              Grid.ColumnSpan="2"
                              Margin="5,2,5,2">
                    </CheckBox>
                </Grid>
            </Expander>
            <Expander Header="Text" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Text, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Margin="5,2,5,2"
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="State" IsExpanded="False">
                <Control Template="{StaticResource StateControlTemplateKey}"/>
            </Expander>
            <Expander Header="Code" IsExpanded="False">
                <Control Template="{StaticResource CodeControlTemplateKey}"/>
            </Expander>
            <Expander Header="Data" IsExpanded="False">
                <Control Template="{StaticResource DataControlTemplate}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XImage}">
        <StackPanel>
            <Expander Header="Name" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Style" IsExpanded="False">
                <Control Template="{StaticResource StyleControlTemplateKey}"/>
            </Expander>
            <Expander Header="TopLeft" IsExpanded="False">
                <ContentControl Content="{Binding TopLeft}"/>
            </Expander>
            <Expander Header="BottomRight" IsExpanded="False">
                <ContentControl Content="{Binding BottomRight}"/>
            </Expander>
            <Expander Header="Path" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Path, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Margin="5,2,5,2"
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Fill" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="IsFilled" 
                               Margin="5,2,5,2" 
                               Grid.Row="0"
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox Content=""
                              IsChecked="{Binding IsFilled}"
                              Grid.Row="0" 
                              Grid.Column="1" 
                              Grid.ColumnSpan="2"
                              Margin="5,2,5,2">
                    </CheckBox>
                </Grid>
            </Expander>
            <Expander Header="State" IsExpanded="False">
                <Control Template="{StaticResource StateControlTemplateKey}"/>
            </Expander>
            <Expander Header="Code" IsExpanded="False">
                <Control Template="{StaticResource CodeControlTemplateKey}"/>
            </Expander>
            <Expander Header="Data" IsExpanded="False">
                <Control Template="{StaticResource DataControlTemplate}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XGroup}">
        <StackPanel>
            <Expander Header="Name" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Shapes" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <ListBox x:Name="shapesListBox"
                             ItemsSource="{Binding Shapes}"
                             BorderBrush="{x:Null}"
                             Grid.Row="0">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" Margin="0,5,0,5"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <ContentControl Content="{Binding ElementName=shapesListBox, Path=SelectedItem}" 
                                    Grid.Row="1" Margin="5,2,5,2">
                    </ContentControl>
                </Grid>
            </Expander>
            <Expander Header="Connectors" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <ListBox x:Name="connectorsListBox"
                             ItemsSource="{Binding Connectors}"
                             BorderBrush="{x:Null}"
                             Grid.Row="0">
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding}" Margin="0,5,0,5"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <ContentControl Content="{Binding ElementName=connectorsListBox, Path=SelectedItem}" 
                                    Grid.Row="1" Margin="5,2,5,2">
                    </ContentControl>
                </Grid>
            </Expander>
            <Expander Header="State" IsExpanded="False">
                <Control Template="{StaticResource StateControlTemplateKey}"/>
            </Expander>
            <Expander Header="Code" IsExpanded="False">
                <Control Template="{StaticResource CodeControlTemplateKey}"/>
            </Expander>
            <Expander Header="Data" IsExpanded="False">
                <Control Template="{StaticResource DataControlTemplate}"/>
            </Expander>
            <Expander Header="Shapes Properties" IsExpanded="False">
                <Control Template="{StaticResource GroupDatabaseControlTemplateKey}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:XPath}">
        <StackPanel>
            <Expander Header="Name" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBox
                        Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                        BorderBrush="{x:Null}" 
                        Margin="5,2,5,2"
                        Grid.Row="0" 
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Style" IsExpanded="False">
                <Control Template="{StaticResource StyleControlTemplateKey}"/>
            </Expander>
            <Expander Header="Source" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <TextBox
                        Text="{Binding Source, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                        AcceptsReturn="True"
                        AcceptsTab="True"
                        BorderBrush="{x:Null}" 
                        Margin="5,2,5,2"
                        Grid.Row="0" 
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Transform" IsExpanded="False">
                <ContentControl Content="{Binding Transform}"/>
            </Expander>
            <Expander Header="Properties" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock 
                        Text="IsStroked" 
                        Margin="5,2,5,2" 
                        Grid.Row="0"
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock 
                        Text="IsFilled" 
                        Margin="5,2,5,2" 
                        Grid.Row="1"
                        Grid.Column="0" 
                        TextAlignment="Left" 
                        VerticalAlignment="Center">
                    </TextBlock>
                    <CheckBox 
                        Content=""
                        IsChecked="{Binding IsStroked}"
                        Margin="5,2,5,2" 
                        Grid.Row="0" 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2">
                    </CheckBox>
                    <CheckBox 
                        Content=""
                        IsChecked="{Binding IsFilled}"
                        Margin="5,2,5,2" 
                        Grid.Row="1" 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2">
                    </CheckBox>
                </Grid>
            </Expander>
            <Expander Header="Geometry" IsExpanded="False">
                <ContentControl Content="{Binding Geometry}"/>
            </Expander>
            <Expander Header="Code" IsExpanded="False">
                <Control Template="{StaticResource CodeControlTemplateKey}"/>
            </Expander>
            <Expander Header="Data" IsExpanded="False">
                <Control Template="{StaticResource DataControlTemplate}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <!-- project -->
    <ContextMenu x:Key="ContainerContextMenu" 
                 DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
        <MenuItem Header="Te_mplate" 
                  Tag="{Binding Path=DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                  DataContext="{Binding Path=DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" ItemsSource="{Binding Editor.Project.Templates}">
            <MenuItem.ItemContainerStyle>
                <Style TargetType="MenuItem">
                    <Setter Property="Header" Value="{Binding Name}"/>
                    <Setter Property="Command" Value="{Binding Path=Tag.Commands.ApplyTemplateCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}, FallbackValue={x:Null}}"/>
                    <Setter Property="CommandParameter" Value="{Binding}"/>
                    <Setter Property="IsCheckable" Value="True"/>
                    <Setter Property="IsChecked" Value="False"/>
                    <Style.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource ObjectEqualityConverter}">
                                    <Binding Path="Tag.Editor.Project.CurrentContainer.Template" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}"/>
                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>
                                </MultiBinding>
                            </DataTrigger.Binding>
                            <Setter Property="IsChecked" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </MenuItem.ItemContainerStyle>
        </MenuItem>
        <Separator/>
        <MenuItem Header="Insert Container Bef_ore" InputGestureText="" Command="{Binding DataContext.Commands.InsertContainerBeforeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <MenuItem Header="Insert Container Aft_er" InputGestureText="" Command="{Binding DataContext.Commands.InsertContainerAfterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="Cu_t" InputGestureText="Ctrl+X" Command="{Binding DataContext.Commands.CutCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <MenuItem Header="_Copy" InputGestureText="Ctrl+C" Command="{Binding DataContext.Commands.CopyCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <MenuItem Header="_Paste" InputGestureText="Ctrl+V" Command="{Binding DataContext.Commands.PasteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="_Delete" InputGestureText="Del" Command="{Binding DataContext.Commands.DeleteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="E_xport" InputGestureText="Ctrl+E" Command="{Binding DataContext.Commands.ExportCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
    </ContextMenu>
    <ContextMenu x:Key="DocumentContextMenu" 
                 DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
        <MenuItem Header="_Add Container" InputGestureText="Ctrl+N" Command="{Binding DataContext.Commands.AddContainerCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="Insert Document Bef_ore" InputGestureText="" Command="{Binding DataContext.Commands.InsertDocumentBeforeCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <MenuItem Header="Insert Document Aft_er" InputGestureText="" Command="{Binding DataContext.Commands.InsertDocumentAfterCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="Cu_t" InputGestureText="Ctrl+X" Command="{Binding DataContext.Commands.CutCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <MenuItem Header="_Copy" InputGestureText="Ctrl+C" Command="{Binding DataContext.Commands.CopyCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <MenuItem Header="_Paste" InputGestureText="Ctrl+V" Command="{Binding DataContext.Commands.PasteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="_Delete" InputGestureText="Del" Command="{Binding DataContext.Commands.DeleteCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="E_xport" InputGestureText="Ctrl+E" Command="{Binding DataContext.Commands.ExportCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
    </ContextMenu>
    <ContextMenu x:Key="PojectContextMenu" 
                 DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
        <MenuItem Header="_Add Document" InputGestureText="Ctrl+N" Command="{Binding DataContext.Commands.AddDocumentCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
        <Separator/>
        <MenuItem Header="E_xport" InputGestureText="Ctrl+E" Command="{Binding DataContext.Commands.ExportCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TreeView}}}" CommandParameter="{Binding}"/>
    </ContextMenu>
    <DataTemplate DataType="{x:Type core:Options}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="100"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="40"/>
            </Grid.ColumnDefinitions>
            <TextBlock 
                Text="SnapToGrid" 
                Margin="5,2,5,2" 
                Grid.Row="0"
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBlock 
                Text="SnapX" 
                Margin="5,2,5,2" 
                Grid.Row="1" 
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBlock 
                Text="SnapY" 
                Margin="5,2,5,2" 
                Grid.Row="2" 
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBlock 
                Text="HitTreshold" 
                Margin="5,2,5,2" 
                Grid.Row="3" 
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBlock 
                Text="MoveMode" 
                Margin="5,2,5,2" 
                Grid.Row="4"
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBlock 
                Text="DefaultIsFilled" 
                Margin="5,2,5,2" 
                Grid.Row="5"
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBlock 
                Text="TryToConnect" 
                Margin="5,2,5,2" 
                Grid.Row="6"
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <TextBlock 
                Text="CycleResolution" 
                Margin="5,2,5,2" 
                Grid.Row="7"
                Grid.Column="0" 
                TextAlignment="Left" 
                VerticalAlignment="Center">
            </TextBlock>
            <CheckBox 
                Content=""
                IsChecked="{Binding SnapToGrid}"
                Grid.Row="0" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                Margin="5,2,5,2">
            </CheckBox>
            <TextBox 
                Text="{Binding SnapX, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                BorderBrush="{x:Null}" 
                Margin="5,2,5,2"
                Grid.Row="1" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                TextAlignment="Center" 
                VerticalAlignment="Center">
            </TextBox>
            <TextBox 
                Text="{Binding SnapY, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                BorderBrush="{x:Null}" 
                Margin="5,2,5,2"
                Grid.Row="2" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                TextAlignment="Center" 
                VerticalAlignment="Center">
            </TextBox>
            <TextBox 
                Text="{Binding HitTreshold, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                BorderBrush="{x:Null}" 
                Margin="5,2,5,2"
                Grid.Row="3" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                TextAlignment="Center" 
                VerticalAlignment="Center">
            </TextBox>
            <ComboBox 
                ItemsSource="{Binding Source={StaticResource ResourceKey=MoveModeValues}}" 
                SelectedItem="{Binding MoveMode}" 
                Margin="5,2,5,2" 
                Grid.Row="4" 
                Grid.Column="1" 
                Grid.ColumnSpan="2">
            </ComboBox>
            <CheckBox 
                Content=""
                IsChecked="{Binding DefaultIsFilled}"
                Grid.Row="5" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                Margin="5,2,5,2">
            </CheckBox>
            <CheckBox 
                Content=""
                IsChecked="{Binding TryToConnect}"
                Grid.Row="6" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                Margin="5,2,5,2">
            </CheckBox>
            <TextBox 
                Text="{Binding CycleResolution, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                BorderBrush="{x:Null}" 
                Margin="5,2,5,2"
                Grid.Row="7" 
                Grid.Column="1" 
                Grid.ColumnSpan="2"
                TextAlignment="Center" 
                VerticalAlignment="Center">
            </TextBox>
        </Grid>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:Project}">
        <StackPanel>
            <Expander Header="Options" IsExpanded="False">
                <ContentControl Content="{Binding Options}"/>
            </Expander>
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="40"/>
                </Grid.ColumnDefinitions>
                <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                         BorderBrush="{x:Null}" 
                         Margin="5,2,5,2"
                         Grid.Row="0" 
                         Grid.Column="0" 
                         Grid.ColumnSpan="2"
                         TextAlignment="Left" 
                         VerticalAlignment="Center">
                </TextBox>
            </Grid>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:Document}">
        <StackPanel>
            <Expander Header="Name" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Margin="5,2,5,2"
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:Container}">
        <StackPanel>
            <Expander Header="Name" IsExpanded="True">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Margin="5,2,5,2"
                             Grid.Row="0" 
                             Grid.Column="0" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Left" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Size" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Text="Width" 
                               Margin="5,2,5,2" 
                               Grid.Row="0" 
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <TextBlock Text="Height" 
                               Margin="5,2,5,2" 
                               Grid.Row="1" 
                               Grid.Column="0" 
                               TextAlignment="Left" 
                               VerticalAlignment="Center">
                    </TextBlock>
                    <TextBox Text="{Binding Width, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}"
                             Margin="5,2,5,2"
                             Grid.Row="0" 
                             Grid.Column="1" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Center" 
                             VerticalAlignment="Center">
                    </TextBox>
                    <TextBox Text="{Binding Height, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                             BorderBrush="{x:Null}" 
                             Margin="5,2,5,2"
                             Grid.Row="1" 
                             Grid.Column="1" 
                             Grid.ColumnSpan="2"
                             TextAlignment="Center" 
                             VerticalAlignment="Center">
                    </TextBox>
                </Grid>
            </Expander>
            <Expander Header="Background" IsExpanded="False">
                <ContentControl Content="{Binding Background}"/>
            </Expander>
            <Expander Header="Template" IsExpanded="False">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="40"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox ItemsSource="{Binding Path=DataContext.Editor.Project.Templates, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" 
                              SelectedItem="{Binding Path=DataContext.Template, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Expander}}}" 
                              Grid.Row="0" 
                              Grid.Column="0" 
                              Grid.ColumnSpan="2"
                              Margin="5,2,5,2">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </Grid>
            </Expander>
            <Expander Header="Properties" IsExpanded="True">
                <Control Template="{StaticResource PropertiesControlTemplateKey}"/>
            </Expander>
        </StackPanel>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:StyleLibrary}">
        <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                 BorderBrush="{x:Null}" 
                 TextAlignment="Left" 
                 VerticalAlignment="Center">
        </TextBox>
    </DataTemplate>
    <DataTemplate DataType="{x:Type core:GroupLibrary}">
        <TextBox Text="{Binding Name, UpdateSourceTrigger=PropertyChanged, Delay=500}" 
                 BorderBrush="{x:Null}" 
                 TextAlignment="Left" 
                 VerticalAlignment="Center">
        </TextBox>
    </DataTemplate>
    <ControlTemplate x:Key="ContainerControlTemplateKey">
        <ItemsControl ItemsSource="{Binding Layers}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <Canvas 
                        Width="{Binding Width}" 
                        Height="{Binding Height}" 
                        Background="{Binding Background, Converter={StaticResource ArgbColorToBrushConverter}}">
                    </Canvas>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <controls:LayerElement/>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
            <ItemsControl.ItemContainerStyle>
                <Style TargetType="ContentPresenter">
                    <Setter Property="Width" Value="{Binding Path=DataContext.Width, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}, FallbackValue=0.0}" />
                    <Setter Property="Height" Value="{Binding Path=DataContext.Height, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Canvas}}, FallbackValue=0.0}" />
                </Style>
            </ItemsControl.ItemContainerStyle>
        </ItemsControl>
    </ControlTemplate>
    <ControlTemplate x:Key="ContainerEditorControlTemplateKey">
        <Grid Width="{Binding Width}" Height="{Binding Height}" Background="Transparent">
            <Control DataContext="{Binding Template}" Template="{StaticResource ContainerControlTemplateKey}"/>
            <Control DataContext="{Binding}" Template="{StaticResource ContainerControlTemplateKey}"/>
            <controls:EditorCanvas 
                Tag="{Binding Path=DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"
                Background="Transparent"
                Focusable="True"
                FocusVisualStyle="{x:Null}"
                Width="{Binding Width}" 
                Height="{Binding Height}">
                <controls:LayerElement DataContext="{Binding WorkingLayer}"/>
                <controls:LayerElement DataContext="{Binding HelperLayer}"/>
            </controls:EditorCanvas>
        </Grid>
    </ControlTemplate>
</ResourceDictionary>
