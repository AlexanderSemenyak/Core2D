<!-- Copyright (c) Wiesław Šoltés. All rights reserved. -->
<!-- Licensed under the MIT license. See LICENSE file in the project root for full license information. -->
<UserControl x:Class="Test.Controls.MenuControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:editor="clr-namespace:Test2d;assembly=Test2d.Editor"
             xmlns:converters="clr-namespace:Test.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="20" d:DesignWidth="810">
    <Menu Background="Transparent">
        <MenuItem Header="_File">
            <MenuItem Header="_New" Command="{Binding Commands.NewCommand}" CommandParameter="{Binding}" InputGestureText="Ctrl+N"/>
            <Separator/>
            <MenuItem Header="_Open..." Command="{Binding Commands.OpenCommand}" InputGestureText="Ctrl+O"/>
            <Separator/>
            <MenuItem Header="_Save" Command="{Binding Commands.SaveCommand}" InputGestureText="Ctrl+S"/>
            <MenuItem Header="Save _As..." Command="{Binding Commands.SaveAsCommand}" InputGestureText="Ctrl+Shift+S"/>
            <Separator/>
            <MenuItem Header="_Export..." Command="{Binding Commands.ExportCommand}" CommandParameter="{Binding Editor.Project}" InputGestureText="Ctrl+E"/>
            <Separator/>
            <MenuItem Header="Impo_rt">
                <MenuItem Header="_Style..." Command="{Binding Commands.ImportStyleCommand}" CommandParameter="{Binding Editor.Project.CurrentStyleLibrary}" InputGestureText=""/>
                <MenuItem Header="S_tyles..." Command="{Binding Commands.ImportStylesCommand}" CommandParameter="{Binding Editor.Project.CurrentStyleLibrary}" InputGestureText=""/>
                <Separator/>
                <MenuItem Header="St_yle Library..." Command="{Binding Commands.ImportStyleLibraryCommand}" CommandParameter="{Binding Editor.Project}" InputGestureText=""/>
                <MenuItem Header="Sty_le Libraries..." Command="{Binding Commands.ImportStyleLibrariesCommand}" CommandParameter="{Binding Editor.Project}" InputGestureText=""/>
                <Separator/>
                <MenuItem Header="_Group..." Command="{Binding Commands.ImportGroupCommand}" CommandParameter="{Binding Editor.Project.CurrentGroupLibrary}" InputGestureText=""/>
                <MenuItem Header="G_roups..." Command="{Binding Commands.ImportGroupsCommand}" CommandParameter="{Binding Editor.Project.CurrentGroupLibrary}" InputGestureText=""/>
                <Separator/>
                <MenuItem Header="Gr_oup Library..." Command="{Binding Commands.ImportGroupLibraryCommand}" CommandParameter="{Binding Editor.Project}" InputGestureText=""/>
                <MenuItem Header="Gro_up Libraries..." Command="{Binding Commands.ImportGroupLibrariesCommand}" CommandParameter="{Binding Editor.Project}" InputGestureText=""/>
                <Separator/>
                <MenuItem Header="_Template..." Command="{Binding Commands.ImportTemplateCommand}" CommandParameter="{Binding Editor.Project}" InputGestureText=""/>
                <MenuItem Header="T_emplates..." Command="{Binding Commands.ImportTemplatesCommand}" CommandParameter="{Binding Editor.Project}" InputGestureText=""/>
            </MenuItem>
            <Separator/>
            <MenuItem Header="Expor_t">
                <MenuItem Header="_Style..." Command="{Binding Commands.ExportStyleCommand}" CommandParameter="{Binding Editor.Project.CurrentStyleLibrary.CurrentStyle}" InputGestureText=""/>
                <MenuItem Header="S_tyles..." Command="{Binding Commands.ExportStylesCommand}" CommandParameter="{Binding Editor.Project.CurrentStyleLibrary}" InputGestureText=""/>
                <Separator/>
                <MenuItem Header="St_yle Library..." Command="{Binding Commands.ExportStyleLibraryCommand}" CommandParameter="{Binding Editor.Project.CurrentStyleLibrary}" InputGestureText=""/>
                <MenuItem Header="Sty_le Libraries..." Command="{Binding Commands.ExportStyleLibrariesCommand}" CommandParameter="{Binding Editor.Project}" InputGestureText=""/>
                <Separator/>
                <MenuItem Header="_Group..." Command="{Binding Commands.ExportGroupCommand}" CommandParameter="{Binding Editor.Project.CurrentGroupLibrary.CurrentGroup}" InputGestureText=""/>
                <MenuItem Header="G_roups..." Command="{Binding Commands.ExportGroupsCommand}" CommandParameter="{Binding Editor.Project.CurrentGroupLibrary}" InputGestureText=""/>
                <Separator/>
                <MenuItem Header="Gr_oup Library..." Command="{Binding Commands.ExportGroupLibraryCommand}" CommandParameter="{Binding Editor.Project.CurrentGroupLibrary}" InputGestureText=""/>
                <MenuItem Header="Gro_up Libraries..." Command="{Binding Commands.ExportGroupLibrariesCommand}" CommandParameter="{Binding Editor.Project}" InputGestureText=""/>
                <Separator/>
                <MenuItem Header="_Template..." Command="{Binding Commands.ExportTemplateCommand}" CommandParameter="{Binding Editor.Project.CurrentTemplate}" InputGestureText=""/>
                <MenuItem Header="T_emplates..." Command="{Binding Commands.ExportTemplatesCommand}" CommandParameter="{Binding Editor.Project}" InputGestureText=""/>
            </MenuItem>
            <Separator/>
            <MenuItem Header="_Recent" ItemsSource="{Binding RecentProjects}">
                <MenuItem.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}"/>
                    </DataTemplate>
                </MenuItem.ItemTemplate>
                <MenuItem.ItemContainerStyle>
                    <Style TargetType="MenuItem">
                        <Setter Property="Command" Value="{Binding DataContext.Commands.OpenCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                        <Setter Property="CommandParameter" Value="{Binding Path}"/>
                    </Style>
                </MenuItem.ItemContainerStyle>
            </MenuItem>
            <Separator/>
            <MenuItem Header="E_xit" Command="{Binding Commands.ExitCommand}" InputGestureText="Alt+F4"/>
        </MenuItem>
        <MenuItem Header="_Edit">
            <MenuItem Header="_Undo" Command="{Binding Commands.UndoCommand}" InputGestureText="Ctrl+Z"/>
            <MenuItem Header="_Redo" Command="{Binding Commands.RedoCommand}" InputGestureText="Ctrl+Y"/>
            <Separator/>
            <MenuItem Header="Copy As _Metafile" Command="{Binding Commands.CopyAsEmfCommand}" InputGestureText="Ctrl+Shift+C"/>
            <Separator/>
            <MenuItem Header="Cu_t" Command="{Binding Commands.CutCommand}" CommandParameter="{Binding}" InputGestureText="Ctrl+X"/>
            <MenuItem Header="_Copy" Command="{Binding Commands.CopyCommand}" CommandParameter="{Binding}" InputGestureText="Ctrl+C"/>
            <MenuItem Header="_Paste" Command="{Binding Commands.PasteCommand}" CommandParameter="{Binding}" InputGestureText="Ctrl+V"/>
            <MenuItem Header="_Delete" Command="{Binding Commands.DeleteCommand}" CommandParameter="{Binding}" InputGestureText="Del"/>
            <Separator/>
            <MenuItem Header="Select _All" Command="{Binding Commands.SelectAllCommand}" InputGestureText="Ctrl+A"/>
            <MenuItem Header="De_select All" Command="{Binding Commands.DeselectAllCommand}" InputGestureText="Esc"/>
            <Separator/>
            <MenuItem Header="Cl_ear All" Command="{Binding Commands.ClearAllCommand}" InputGestureText=""/>
            <Separator/>
            <MenuItem Header="Re_ference" Command="{Binding Commands.ReferenceCommand}" InputGestureText="Ctrl+R"/>
            <Separator/>
            <MenuItem Header="_Group" Command="{Binding Commands.GroupCommand}" InputGestureText="Ctrl+G"/>
            <MenuItem Header="U_ngroup" Command="{Binding Commands.UngroupCommand}" InputGestureText="Ctrl+U"/>
            <Separator/>
            <MenuItem Header="_Order">
                <MenuItem Header="Bring to _Front" Command="{Binding Commands.BringToFrontCommand}" InputGestureText=""/>
                <MenuItem Header="Bring Fo_rward" Command="{Binding Commands.BringForwardCommand}" InputGestureText=""/>
                <MenuItem Header="Send Ba_ckward" Command="{Binding Commands.SendBackwardCommand}" InputGestureText=""/>
                <MenuItem Header="Send to _Back" Command="{Binding Commands.SendToBackCommand}" InputGestureText=""/>
            </MenuItem>
        </MenuItem>
        <MenuItem Header="_View">
            <MenuItem Header="_Zoom">
                <MenuItem Header="_Reset" Command="{Binding Commands.ZoomResetCommand}" InputGestureText="Z"/>
                <MenuItem Header="_Extent" Command="{Binding Commands.ZoomExtentCommand}" InputGestureText="X"/>
            </MenuItem>
            <Separator/>
            <MenuItem Header="_Project Explorer" Command="{Binding Commands.ProjectWindowCommand}" InputGestureText="Ctrl+Alt+P"/>
            <MenuItem Header="_Options" Command="{Binding Commands.OptionsWindowCommand}" InputGestureText="Ctrl+Alt+O"/>
            <MenuItem Header="_Templates" Command="{Binding Commands.TemplatesWindowCommand}" InputGestureText="Ctrl+Alt+T"/>
            <Separator/>
            <MenuItem Header="_Groups" Command="{Binding Commands.GroupsWindowCommand}" InputGestureText="Ctrl+Alt+G"/>
            <MenuItem Header="_Databases" Command="{Binding Commands.DatabasesWindowCommand}" InputGestureText="Ctrl+Alt+D"/>
            <MenuItem Header="Data_base Window" Command="{Binding Commands.DatabaseWindowCommand}" InputGestureText="Ctrl+Alt+B"/>
            <Separator/>
            <MenuItem Header="Co_ntainer" Command="{Binding Commands.ContainerWindowCommand}" InputGestureText="Ctrl+Alt+N"/>
            <MenuItem Header="Sc_ript Window" Command="{Binding Commands.ScriptWindowCommand}" InputGestureText="Ctrl+Alt+R"/>
            <MenuItem Header="Doc_ument Window" Command="{Binding Commands.DocumentWindowCommand}" InputGestureText="Ctrl+Alt+U"/>
            <Separator/>
            <MenuItem Header="_Styles" Command="{Binding Commands.StylesWindowCommand}" InputGestureText="Ctrl+Alt+S"/>
            <MenuItem Header="_Layers" Command="{Binding Commands.LayersWindowCommand}" InputGestureText="Ctrl+Alt+L"/>
            <MenuItem Header="Sh_apes" Command="{Binding Commands.ShapesWindowCommand}" InputGestureText="Ctrl+Alt+A"/>
            <MenuItem Header="Te_mplate Window" Command="{Binding Commands.TemplateWindowCommand}" InputGestureText="Ctrl+Alt+M"/>
            <Separator/>
            <MenuItem Header="State _Window" Command="{Binding Commands.StateWindowCommand}" InputGestureText="Ctrl+Alt+W"/>
            <MenuItem Header="_Code Window" Command="{Binding Commands.CodeWindowCommand}" InputGestureText="Ctrl+Alt+C"/>
            <MenuItem Header="Data W_indow" Command="{Binding Commands.DataWindowCommand}" InputGestureText="Ctrl+Alt+I"/>
            <MenuItem Header="St_yle Window" Command="{Binding Commands.StyleWindowCommand}" InputGestureText="Ctrl+Alt+Y"/>
            <Separator/>
            <MenuItem Header="Prop_erties Window" Command="{Binding Commands.PropertiesWindowCommand}" InputGestureText="F4"/>
        </MenuItem>
        <MenuItem Header="_Tool">
            <MenuItem Header="_None" 
                      Command="{Binding Commands.ToolNoneCommand}"
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.None}}" 
                      InputGestureText="N">
            </MenuItem>
            <Separator/>
            <MenuItem Header="_Selection" 
                      Command="{Binding Commands.ToolSelectionCommand}" 
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Selection}}"
                      InputGestureText="S">
            </MenuItem>
            <Separator/>
            <MenuItem Header="_Point" 
                      Command="{Binding Commands.ToolPointCommand}"
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Point}}" 
                      InputGestureText="P">
            </MenuItem>
            <Separator/>
            <MenuItem Header="_Line" 
                      Command="{Binding Commands.ToolLineCommand}" 
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Line}}"
                      InputGestureText="L">
            </MenuItem>
            <MenuItem Header="_Arc" 
                      Command="{Binding Commands.ToolArcCommand}" 
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Arc}}"
                      InputGestureText="A">
            </MenuItem>
            <MenuItem Header="_Bezier" 
                      Command="{Binding Commands.ToolBezierCommand}" 
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Bezier}}"
                      InputGestureText="B">
            </MenuItem>
            <MenuItem Header="_QBezier" 
                      Command="{Binding Commands.ToolQBezierCommand}"
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.QBezier}}" 
                      InputGestureText="Q">
            </MenuItem>
            <Separator/>
            <MenuItem Header="Pat_h" 
                      Command="{Binding Commands.ToolPathCommand}" 
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Path}}"
                      InputGestureText="H">
            </MenuItem>
            <Separator/>
            <MenuItem Header="_Rectangle" 
                      Command="{Binding Commands.ToolRectangleCommand}" 
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Rectangle}}"
                      InputGestureText="R">
            </MenuItem>
            <MenuItem Header="_Ellipse" 
                      Command="{Binding Commands.ToolEllipseCommand}" 
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Ellipse}}"
                      InputGestureText="E">
            </MenuItem>
            <Separator/>
            <MenuItem Header="_Text" 
                      Command="{Binding Commands.ToolTextCommand}" 
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Text}}"
                      InputGestureText="T">
            </MenuItem>
            <Separator/>
            <MenuItem Header="_Image" 
                      Command="{Binding Commands.ToolImageCommand}" 
                      IsCheckable="False"
                      IsChecked="{Binding Path=Editor.CurrentTool, Converter={StaticResource EnumToBooleanConverter}, ConverterParameter={x:Static editor:Tool.Image}}"
                      InputGestureText="I">
            </MenuItem>
        </MenuItem>
        <MenuItem Header="_Data">
            <MenuItem Header="_Import..." Command="{Binding Commands.ImportDataCommand}" InputGestureText=""/>
            <Separator/>
            <MenuItem Header="_Export..." Command="{Binding Commands.ExportDataCommand}" InputGestureText=""/>
        </MenuItem>
        <MenuItem Header="Te_mplate" Tag="{Binding}" ItemsSource="{Binding Editor.Project.Templates}">
            <MenuItem.Resources>
                <converters:ObjectEqualityConverter x:Key="ObjectEqualityConverter"/>
            </MenuItem.Resources>
            <MenuItem.ItemContainerStyle>
                <Style TargetType="MenuItem">
                    <Setter Property="Header" Value="{Binding Name}"/>
                    <Setter Property="Command" Value="{Binding Path=Tag.Commands.ApplyTemplateCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}}"/>
                    <Setter Property="CommandParameter" Value="{Binding}"/>
                    <Setter Property="IsCheckable" Value="True"/>
                    <Setter Property="IsChecked" Value="False"/>
                    <Style.Triggers>
                        <DataTrigger Value="True">
                            <DataTrigger.Binding>
                                <MultiBinding Converter="{StaticResource ObjectEqualityConverter}">  
                                    <Binding Path="Tag.Editor.Project.CurrentContainer.Template" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type MenuItem}}"/>  
                                    <Binding Path="DataContext" RelativeSource="{RelativeSource Self}"/>  
                                </MultiBinding> 
                            </DataTrigger.Binding>
                            <Setter Property="IsChecked" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </MenuItem.ItemContainerStyle>
        </MenuItem>
        <MenuItem Header="_Script">
            <MenuItem Header="_Evaluate..." Command="{Binding Commands.EvalCommand}" InputGestureText="F8"/>
        </MenuItem>
        <MenuItem Header="S_cripts" ItemsSource="{Binding ScriptDirectories}">
            <MenuItem.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Scripts}">
                    <HierarchicalDataTemplate.ItemContainerStyle>
                        <Style TargetType="MenuItem">
                            <Setter Property="Command" Value="{Binding DataContext.Commands.EvalScriptCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}"/>
                            <Setter Property="CommandParameter" Value="{Binding Path}"/>
                        </Style>
                    </HierarchicalDataTemplate.ItemContainerStyle>
                    <HierarchicalDataTemplate.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}"/>
                        </DataTemplate>
                    </HierarchicalDataTemplate.ItemTemplate>
                    <TextBlock Text="{Binding Name}"/>
                </HierarchicalDataTemplate>
            </MenuItem.ItemTemplate>
        </MenuItem>
        <MenuItem Header="_Options">
            <MenuItem Header="Default is _Filled" 
                      IsCheckable="True" 
                      IsChecked="{Binding Editor.Project.Options.DefaultIsFilled, Mode=OneWay}"
                      Command="{Binding Commands.DefaultIsFilledCommand}" InputGestureText="F"/>
            <Separator/>
            <MenuItem Header="_Snap to Grid" 
                      IsCheckable="True" 
                      IsChecked="{Binding Editor.Project.Options.SnapToGrid, Mode=OneWay}"
                      Command="{Binding Commands.SnapToGridCommand}" InputGestureText="G"/>
            <Separator/>
            <MenuItem Header="Try To _Connect" 
                      IsCheckable="True" 
                      IsChecked="{Binding Editor.Project.Options.TryToConnect, Mode=OneWay}"
                      Command="{Binding Commands.TryToConnectCommand}" InputGestureText="C"/>
        </MenuItem>
        <MenuItem Header="S_imulation">
            <MenuItem Header="_Start" Command="{Binding Commands.StartSimulationCommand}" InputGestureText="F5"/>
            <MenuItem Header="S_top" Command="{Binding Commands.StopSimulationCommand}" InputGestureText="F6"/>
            <Separator/>
            <MenuItem Header="_Restart" Command="{Binding Commands.RestartSimulationCommand}" InputGestureText="F7"/>
            <Separator/>
            <MenuItem Header="_Pause" Command="{Binding Commands.PauseSimulationCommand}" InputGestureText="F9">
                <MenuItem.Style>
                    <Style TargetType="MenuItem">
                        <Setter Property="IsChecked" Value="False"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsSimulationPaused}" Value="True">
                                <Setter Property="IsChecked" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </MenuItem.Style>
            </MenuItem>
            <Separator/>
            <MenuItem Header="Ti_ck" Command="{Binding Commands.TickSimulationCommand}" InputGestureText="F10"/>
        </MenuItem>
        <MenuItem Header="_Window">
            <MenuItem Header="_Load Layout..." Command="{Binding Commands.LoadWindowLayoutCommand}" InputGestureText=""/>
            <Separator/>
            <MenuItem Header="_Save Layout..." Command="{Binding Commands.SaveWindowLayoutCommand}" InputGestureText=""/>
            <Separator/>
            <MenuItem Header="_Reset Layout" Command="{Binding Commands.ResetWindowLayoutCommand}" InputGestureText=""/>
        </MenuItem>
    </Menu>
</UserControl>
